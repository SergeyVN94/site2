/*! For license information please see main.js.LICENSE */
!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=42)}([function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=(a=o,s=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),"/*# ".concat(l," */")),i=o.sources.map((function(e){return"/*# sourceURL=".concat(o.sourceRoot).concat(e," */")}));return[n].concat(i).concat([r]).join("\n")}var a,s,l;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2],"{").concat(n,"}"):n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];null!=i&&(o[i]=!0)}for(var a=0;a<e.length;a++){var s=e[a];null!=s[0]&&o[s[0]]||(n&&!s[2]?s[2]=n:n&&(s[2]="(".concat(s[2],") and (").concat(n,")")),t.push(s))}},t}},function(e,t,n){var o,r,i={},a=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=o.apply(this,arguments)),r}),s=function(e,t){return t?t.querySelector(e):document.querySelector(e)},l=function(e){var t={};return function(e,n){if("function"==typeof e)return e();if(void 0===t[e]){var o=s.call(this,e,n);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}t[e]=o}return t[e]}}(),d=null,c=0,u=[],f=n(81);function p(e,t){for(var n=0;n<e.length;n++){var o=e[n],r=i[o.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](o.parts[a]);for(;a<o.parts.length;a++)r.parts.push(w(o.parts[a],t))}else{var s=[];for(a=0;a<o.parts.length;a++)s.push(w(o.parts[a],t));i[o.id]={id:o.id,refs:1,parts:s}}}}function m(e,t){for(var n=[],o={},r=0;r<e.length;r++){var i=e[r],a=t.base?i[0]+t.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(s):n.push(o[a]={id:a,parts:[s]})}return n}function b(e,t){var n=l(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=u[u.length-1];if("top"===e.insertAt)o?o.nextSibling?n.insertBefore(t,o.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),u.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=l(e.insertAt.before,n);n.insertBefore(t,r)}}function x(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=u.indexOf(e);t>=0&&u.splice(t,1)}function h(e){var t=document.createElement("style");if(void 0===e.attrs.type&&(e.attrs.type="text/css"),void 0===e.attrs.nonce){var o=function(){0;return n.nc}();o&&(e.attrs.nonce=o)}return g(t,e.attrs),b(e,t),t}function g(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function w(e,t){var n,o,r,i;if(t.transform&&e.css){if(!(i="function"==typeof t.transform?t.transform(e.css):t.transform.default(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=d||(d=h(t)),o=k.bind(null,n,a,!1),r=k.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",g(t,e.attrs),b(e,t),t}(t),o=C.bind(null,n,t),r=function(){x(n),n.href&&URL.revokeObjectURL(n.href)}):(n=h(t),o=_.bind(null,n),r=function(){x(n)});return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=m(e,t);return p(n,t),function(e){for(var o=[],r=0;r<n.length;r++){var a=n[r];(s=i[a.id]).refs--,o.push(s)}e&&p(m(e,t),t);for(r=0;r<o.length;r++){var s;if(0===(s=o[r]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete i[s.id]}}}};var y,v=(y=[],function(e,t){return y[e]=t,y.filter(Boolean).join("\n")});function k(e,t,n,o){var r=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=v(t,r);else{var i=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function _(e,t){var n=t.css,o=t.media;if(o&&e.setAttribute("media",o),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function C(e,t,n){var o=n.css,r=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||i)&&(o=f(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}},function(e,t,n){var o;!function(t,n){"use strict";"object"==typeof e.exports?e.exports=t.document?n(t,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(t)}("undefined"!=typeof window?window:this,(function(n,r){"use strict";var i=[],a=n.document,s=Object.getPrototypeOf,l=i.slice,d=i.concat,c=i.push,u=i.indexOf,f={},p=f.toString,m=f.hasOwnProperty,b=m.toString,x=b.call(Object),h={},g=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType},w=function(e){return null!=e&&e===e.window},y={type:!0,src:!0,nonce:!0,noModule:!0};function v(e,t,n){var o,r,i=(n=n||a).createElement("script");if(i.text=e,t)for(o in y)(r=t[o]||t.getAttribute&&t.getAttribute(o))&&i.setAttribute(o,r);n.head.appendChild(i).parentNode.removeChild(i)}function k(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?f[p.call(e)]||"object":typeof e}var _=function(e,t){return new _.fn.init(e,t)},C=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;function E(e){var t=!!e&&"length"in e&&e.length,n=k(e);return!g(e)&&!w(e)&&("array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e)}_.fn=_.prototype={jquery:"3.4.1",constructor:_,length:0,toArray:function(){return l.call(this)},get:function(e){return null==e?l.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=_.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return _.each(this,e)},map:function(e){return this.pushStack(_.map(this,(function(t,n){return e.call(t,n,t)})))},slice:function(){return this.pushStack(l.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(n>=0&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:c,sort:i.sort,splice:i.splice},_.extend=_.fn.extend=function(){var e,t,n,o,r,i,a=arguments[0]||{},s=1,l=arguments.length,d=!1;for("boolean"==typeof a&&(d=a,a=arguments[s]||{},s++),"object"==typeof a||g(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(e=arguments[s]))for(t in e)o=e[t],"__proto__"!==t&&a!==o&&(d&&o&&(_.isPlainObject(o)||(r=Array.isArray(o)))?(n=a[t],i=r&&!Array.isArray(n)?[]:r||_.isPlainObject(n)?n:{},r=!1,a[t]=_.extend(d,i,o)):void 0!==o&&(a[t]=o));return a},_.extend({expando:"jQuery"+("3.4.1"+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==p.call(e))&&(!(t=s(e))||"function"==typeof(n=m.call(t,"constructor")&&t.constructor)&&b.call(n)===x)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t){v(e,{nonce:t&&t.nonce})},each:function(e,t){var n,o=0;if(E(e))for(n=e.length;o<n&&!1!==t.call(e[o],o,e[o]);o++);else for(o in e)if(!1===t.call(e[o],o,e[o]))break;return e},trim:function(e){return null==e?"":(e+"").replace(C,"")},makeArray:function(e,t){var n=t||[];return null!=e&&(E(Object(e))?_.merge(n,"string"==typeof e?[e]:e):c.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:u.call(t,e,n)},merge:function(e,t){for(var n=+t.length,o=0,r=e.length;o<n;o++)e[r++]=t[o];return e.length=r,e},grep:function(e,t,n){for(var o=[],r=0,i=e.length,a=!n;r<i;r++)!t(e[r],r)!==a&&o.push(e[r]);return o},map:function(e,t,n){var o,r,i=0,a=[];if(E(e))for(o=e.length;i<o;i++)null!=(r=t(e[i],i,n))&&a.push(r);else for(i in e)null!=(r=t(e[i],i,n))&&a.push(r);return d.apply([],a)},guid:1,support:h}),"function"==typeof Symbol&&(_.fn[Symbol.iterator]=i[Symbol.iterator]),_.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),(function(e,t){f["[object "+t+"]"]=t.toLowerCase()}));var j=function(e){var t,n,o,r,i,a,s,l,d,c,u,f,p,m,b,x,h,g,w,y="sizzle"+1*new Date,v=e.document,k=0,_=0,C=le(),E=le(),j=le(),T=le(),A=function(e,t){return e===t&&(u=!0),0},D={}.hasOwnProperty,N=[],z=N.pop,F=N.push,M=N.push,S=N.slice,I=function(e,t){for(var n=0,o=e.length;n<o;n++)if(e[n]===t)return n;return-1},B="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",O="[\\x20\\t\\r\\n\\f]",R="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",P="\\["+O+"*("+R+")(?:"+O+"*([*^$|!~]?=)"+O+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+R+"))|)"+O+"*\\]",L=":("+R+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+P+")*)|.*)\\)|)",H=new RegExp(O+"+","g"),q=new RegExp("^"+O+"+|((?:^|[^\\\\])(?:\\\\.)*)"+O+"+$","g"),W=new RegExp("^"+O+"*,"+O+"*"),$=new RegExp("^"+O+"*([>+~]|"+O+")"+O+"*"),U=new RegExp(O+"|>"),Y=new RegExp(L),G=new RegExp("^"+R+"$"),X={ID:new RegExp("^#("+R+")"),CLASS:new RegExp("^\\.("+R+")"),TAG:new RegExp("^("+R+"|[*])"),ATTR:new RegExp("^"+P),PSEUDO:new RegExp("^"+L),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+O+"*(even|odd|(([+-]|)(\\d*)n|)"+O+"*(?:([+-]|)"+O+"*(\\d+)|))"+O+"*\\)|)","i"),bool:new RegExp("^(?:"+B+")$","i"),needsContext:new RegExp("^"+O+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+O+"*((?:-\\d)?\\d*)"+O+"*\\)|)(?=[^-]|$)","i")},V=/HTML$/i,Q=/^(?:input|select|textarea|button)$/i,K=/^h\d$/i,J=/^[^{]+\{\s*\[native \w/,Z=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,ee=/[+~]/,te=new RegExp("\\\\([\\da-f]{1,6}"+O+"?|("+O+")|.)","ig"),ne=function(e,t,n){var o="0x"+t-65536;return o!=o||n?t:o<0?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)},oe=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,re=function(e,t){return t?"\0"===e?"�":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e},ie=function(){f()},ae=ye((function(e){return!0===e.disabled&&"fieldset"===e.nodeName.toLowerCase()}),{dir:"parentNode",next:"legend"});try{M.apply(N=S.call(v.childNodes),v.childNodes),N[v.childNodes.length].nodeType}catch(e){M={apply:N.length?function(e,t){F.apply(e,S.call(t))}:function(e,t){for(var n=e.length,o=0;e[n++]=t[o++];);e.length=n-1}}}function se(e,t,o,r){var i,s,d,c,u,m,h,g=t&&t.ownerDocument,k=t?t.nodeType:9;if(o=o||[],"string"!=typeof e||!e||1!==k&&9!==k&&11!==k)return o;if(!r&&((t?t.ownerDocument||t:v)!==p&&f(t),t=t||p,b)){if(11!==k&&(u=Z.exec(e)))if(i=u[1]){if(9===k){if(!(d=t.getElementById(i)))return o;if(d.id===i)return o.push(d),o}else if(g&&(d=g.getElementById(i))&&w(t,d)&&d.id===i)return o.push(d),o}else{if(u[2])return M.apply(o,t.getElementsByTagName(e)),o;if((i=u[3])&&n.getElementsByClassName&&t.getElementsByClassName)return M.apply(o,t.getElementsByClassName(i)),o}if(n.qsa&&!T[e+" "]&&(!x||!x.test(e))&&(1!==k||"object"!==t.nodeName.toLowerCase())){if(h=e,g=t,1===k&&U.test(e)){for((c=t.getAttribute("id"))?c=c.replace(oe,re):t.setAttribute("id",c=y),s=(m=a(e)).length;s--;)m[s]="#"+c+" "+we(m[s]);h=m.join(","),g=ee.test(e)&&he(t.parentNode)||t}try{return M.apply(o,g.querySelectorAll(h)),o}catch(t){T(e,!0)}finally{c===y&&t.removeAttribute("id")}}}return l(e.replace(q,"$1"),t,o,r)}function le(){var e=[];return function t(n,r){return e.push(n+" ")>o.cacheLength&&delete t[e.shift()],t[n+" "]=r}}function de(e){return e[y]=!0,e}function ce(e){var t=p.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function ue(e,t){for(var n=e.split("|"),r=n.length;r--;)o.attrHandle[n[r]]=t}function fe(e,t){var n=t&&e,o=n&&1===e.nodeType&&1===t.nodeType&&e.sourceIndex-t.sourceIndex;if(o)return o;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function pe(e){return function(t){return"input"===t.nodeName.toLowerCase()&&t.type===e}}function me(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function be(e){return function(t){return"form"in t?t.parentNode&&!1===t.disabled?"label"in t?"label"in t.parentNode?t.parentNode.disabled===e:t.disabled===e:t.isDisabled===e||t.isDisabled!==!e&&ae(t)===e:t.disabled===e:"label"in t&&t.disabled===e}}function xe(e){return de((function(t){return t=+t,de((function(n,o){for(var r,i=e([],n.length,t),a=i.length;a--;)n[r=i[a]]&&(n[r]=!(o[r]=n[r]))}))}))}function he(e){return e&&void 0!==e.getElementsByTagName&&e}for(t in n=se.support={},i=se.isXML=function(e){var t=e.namespaceURI,n=(e.ownerDocument||e).documentElement;return!V.test(t||n&&n.nodeName||"HTML")},f=se.setDocument=function(e){var t,r,a=e?e.ownerDocument||e:v;return a!==p&&9===a.nodeType&&a.documentElement?(m=(p=a).documentElement,b=!i(p),v!==p&&(r=p.defaultView)&&r.top!==r&&(r.addEventListener?r.addEventListener("unload",ie,!1):r.attachEvent&&r.attachEvent("onunload",ie)),n.attributes=ce((function(e){return e.className="i",!e.getAttribute("className")})),n.getElementsByTagName=ce((function(e){return e.appendChild(p.createComment("")),!e.getElementsByTagName("*").length})),n.getElementsByClassName=J.test(p.getElementsByClassName),n.getById=ce((function(e){return m.appendChild(e).id=y,!p.getElementsByName||!p.getElementsByName(y).length})),n.getById?(o.filter.ID=function(e){var t=e.replace(te,ne);return function(e){return e.getAttribute("id")===t}},o.find.ID=function(e,t){if(void 0!==t.getElementById&&b){var n=t.getElementById(e);return n?[n]:[]}}):(o.filter.ID=function(e){var t=e.replace(te,ne);return function(e){var n=void 0!==e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}},o.find.ID=function(e,t){if(void 0!==t.getElementById&&b){var n,o,r,i=t.getElementById(e);if(i){if((n=i.getAttributeNode("id"))&&n.value===e)return[i];for(r=t.getElementsByName(e),o=0;i=r[o++];)if((n=i.getAttributeNode("id"))&&n.value===e)return[i]}return[]}}),o.find.TAG=n.getElementsByTagName?function(e,t){return void 0!==t.getElementsByTagName?t.getElementsByTagName(e):n.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,o=[],r=0,i=t.getElementsByTagName(e);if("*"===e){for(;n=i[r++];)1===n.nodeType&&o.push(n);return o}return i},o.find.CLASS=n.getElementsByClassName&&function(e,t){if(void 0!==t.getElementsByClassName&&b)return t.getElementsByClassName(e)},h=[],x=[],(n.qsa=J.test(p.querySelectorAll))&&(ce((function(e){m.appendChild(e).innerHTML="<a id='"+y+"'></a><select id='"+y+"-\r\\' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&x.push("[*^$]="+O+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||x.push("\\["+O+"*(?:value|"+B+")"),e.querySelectorAll("[id~="+y+"-]").length||x.push("~="),e.querySelectorAll(":checked").length||x.push(":checked"),e.querySelectorAll("a#"+y+"+*").length||x.push(".#.+[+~]")})),ce((function(e){e.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var t=p.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&x.push("name"+O+"*[*^$|!~]?="),2!==e.querySelectorAll(":enabled").length&&x.push(":enabled",":disabled"),m.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&x.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),x.push(",.*:")}))),(n.matchesSelector=J.test(g=m.matches||m.webkitMatchesSelector||m.mozMatchesSelector||m.oMatchesSelector||m.msMatchesSelector))&&ce((function(e){n.disconnectedMatch=g.call(e,"*"),g.call(e,"[s!='']:x"),h.push("!=",L)})),x=x.length&&new RegExp(x.join("|")),h=h.length&&new RegExp(h.join("|")),t=J.test(m.compareDocumentPosition),w=t||J.test(m.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,o=t&&t.parentNode;return e===o||!(!o||1!==o.nodeType||!(n.contains?n.contains(o):e.compareDocumentPosition&&16&e.compareDocumentPosition(o)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},A=t?function(e,t){if(e===t)return u=!0,0;var o=!e.compareDocumentPosition-!t.compareDocumentPosition;return o||(1&(o=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!n.sortDetached&&t.compareDocumentPosition(e)===o?e===p||e.ownerDocument===v&&w(v,e)?-1:t===p||t.ownerDocument===v&&w(v,t)?1:c?I(c,e)-I(c,t):0:4&o?-1:1)}:function(e,t){if(e===t)return u=!0,0;var n,o=0,r=e.parentNode,i=t.parentNode,a=[e],s=[t];if(!r||!i)return e===p?-1:t===p?1:r?-1:i?1:c?I(c,e)-I(c,t):0;if(r===i)return fe(e,t);for(n=e;n=n.parentNode;)a.unshift(n);for(n=t;n=n.parentNode;)s.unshift(n);for(;a[o]===s[o];)o++;return o?fe(a[o],s[o]):a[o]===v?-1:s[o]===v?1:0},p):p},se.matches=function(e,t){return se(e,null,null,t)},se.matchesSelector=function(e,t){if((e.ownerDocument||e)!==p&&f(e),n.matchesSelector&&b&&!T[t+" "]&&(!h||!h.test(t))&&(!x||!x.test(t)))try{var o=g.call(e,t);if(o||n.disconnectedMatch||e.document&&11!==e.document.nodeType)return o}catch(e){T(t,!0)}return se(t,p,null,[e]).length>0},se.contains=function(e,t){return(e.ownerDocument||e)!==p&&f(e),w(e,t)},se.attr=function(e,t){(e.ownerDocument||e)!==p&&f(e);var r=o.attrHandle[t.toLowerCase()],i=r&&D.call(o.attrHandle,t.toLowerCase())?r(e,t,!b):void 0;return void 0!==i?i:n.attributes||!b?e.getAttribute(t):(i=e.getAttributeNode(t))&&i.specified?i.value:null},se.escape=function(e){return(e+"").replace(oe,re)},se.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},se.uniqueSort=function(e){var t,o=[],r=0,i=0;if(u=!n.detectDuplicates,c=!n.sortStable&&e.slice(0),e.sort(A),u){for(;t=e[i++];)t===e[i]&&(r=o.push(i));for(;r--;)e.splice(o[r],1)}return c=null,e},r=se.getText=function(e){var t,n="",o=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=r(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[o++];)n+=r(t);return n},(o=se.selectors={cacheLength:50,createPseudo:de,match:X,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(te,ne),e[3]=(e[3]||e[4]||e[5]||"").replace(te,ne),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||se.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&se.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return X.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&Y.test(n)&&(t=a(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(te,ne).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=C[e+" "];return t||(t=new RegExp("(^|"+O+")"+e+"("+O+"|$)"))&&C(e,(function(e){return t.test("string"==typeof e.className&&e.className||void 0!==e.getAttribute&&e.getAttribute("class")||"")}))},ATTR:function(e,t,n){return function(o){var r=se.attr(o,e);return null==r?"!="===t:!t||(r+="","="===t?r===n:"!="===t?r!==n:"^="===t?n&&0===r.indexOf(n):"*="===t?n&&r.indexOf(n)>-1:"$="===t?n&&r.slice(-n.length)===n:"~="===t?(" "+r.replace(H," ")+" ").indexOf(n)>-1:"|="===t&&(r===n||r.slice(0,n.length+1)===n+"-"))}},CHILD:function(e,t,n,o,r){var i="nth"!==e.slice(0,3),a="last"!==e.slice(-4),s="of-type"===t;return 1===o&&0===r?function(e){return!!e.parentNode}:function(t,n,l){var d,c,u,f,p,m,b=i!==a?"nextSibling":"previousSibling",x=t.parentNode,h=s&&t.nodeName.toLowerCase(),g=!l&&!s,w=!1;if(x){if(i){for(;b;){for(f=t;f=f[b];)if(s?f.nodeName.toLowerCase()===h:1===f.nodeType)return!1;m=b="only"===e&&!m&&"nextSibling"}return!0}if(m=[a?x.firstChild:x.lastChild],a&&g){for(w=(p=(d=(c=(u=(f=x)[y]||(f[y]={}))[f.uniqueID]||(u[f.uniqueID]={}))[e]||[])[0]===k&&d[1])&&d[2],f=p&&x.childNodes[p];f=++p&&f&&f[b]||(w=p=0)||m.pop();)if(1===f.nodeType&&++w&&f===t){c[e]=[k,p,w];break}}else if(g&&(w=p=(d=(c=(u=(f=t)[y]||(f[y]={}))[f.uniqueID]||(u[f.uniqueID]={}))[e]||[])[0]===k&&d[1]),!1===w)for(;(f=++p&&f&&f[b]||(w=p=0)||m.pop())&&((s?f.nodeName.toLowerCase()!==h:1!==f.nodeType)||!++w||(g&&((c=(u=f[y]||(f[y]={}))[f.uniqueID]||(u[f.uniqueID]={}))[e]=[k,w]),f!==t)););return(w-=r)===o||w%o==0&&w/o>=0}}},PSEUDO:function(e,t){var n,r=o.pseudos[e]||o.setFilters[e.toLowerCase()]||se.error("unsupported pseudo: "+e);return r[y]?r(t):r.length>1?(n=[e,e,"",t],o.setFilters.hasOwnProperty(e.toLowerCase())?de((function(e,n){for(var o,i=r(e,t),a=i.length;a--;)e[o=I(e,i[a])]=!(n[o]=i[a])})):function(e){return r(e,0,n)}):r}},pseudos:{not:de((function(e){var t=[],n=[],o=s(e.replace(q,"$1"));return o[y]?de((function(e,t,n,r){for(var i,a=o(e,null,r,[]),s=e.length;s--;)(i=a[s])&&(e[s]=!(t[s]=i))})):function(e,r,i){return t[0]=e,o(t,null,i,n),t[0]=null,!n.pop()}})),has:de((function(e){return function(t){return se(e,t).length>0}})),contains:de((function(e){return e=e.replace(te,ne),function(t){return(t.textContent||r(t)).indexOf(e)>-1}})),lang:de((function(e){return G.test(e||"")||se.error("unsupported lang: "+e),e=e.replace(te,ne).toLowerCase(),function(t){var n;do{if(n=b?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return(n=n.toLowerCase())===e||0===n.indexOf(e+"-")}while((t=t.parentNode)&&1===t.nodeType);return!1}})),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===m},focus:function(e){return e===p.activeElement&&(!p.hasFocus||p.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:be(!1),disabled:be(!0),checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!o.pseudos.empty(e)},header:function(e){return K.test(e.nodeName)},input:function(e){return Q.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:xe((function(){return[0]})),last:xe((function(e,t){return[t-1]})),eq:xe((function(e,t,n){return[n<0?n+t:n]})),even:xe((function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e})),odd:xe((function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e})),lt:xe((function(e,t,n){for(var o=n<0?n+t:n>t?t:n;--o>=0;)e.push(o);return e})),gt:xe((function(e,t,n){for(var o=n<0?n+t:n;++o<t;)e.push(o);return e}))}}).pseudos.nth=o.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})o.pseudos[t]=pe(t);for(t in{submit:!0,reset:!0})o.pseudos[t]=me(t);function ge(){}function we(e){for(var t=0,n=e.length,o="";t<n;t++)o+=e[t].value;return o}function ye(e,t,n){var o=t.dir,r=t.next,i=r||o,a=n&&"parentNode"===i,s=_++;return t.first?function(t,n,r){for(;t=t[o];)if(1===t.nodeType||a)return e(t,n,r);return!1}:function(t,n,l){var d,c,u,f=[k,s];if(l){for(;t=t[o];)if((1===t.nodeType||a)&&e(t,n,l))return!0}else for(;t=t[o];)if(1===t.nodeType||a)if(c=(u=t[y]||(t[y]={}))[t.uniqueID]||(u[t.uniqueID]={}),r&&r===t.nodeName.toLowerCase())t=t[o]||t;else{if((d=c[i])&&d[0]===k&&d[1]===s)return f[2]=d[2];if(c[i]=f,f[2]=e(t,n,l))return!0}return!1}}function ve(e){return e.length>1?function(t,n,o){for(var r=e.length;r--;)if(!e[r](t,n,o))return!1;return!0}:e[0]}function ke(e,t,n,o,r){for(var i,a=[],s=0,l=e.length,d=null!=t;s<l;s++)(i=e[s])&&(n&&!n(i,o,r)||(a.push(i),d&&t.push(s)));return a}function _e(e,t,n,o,r,i){return o&&!o[y]&&(o=_e(o)),r&&!r[y]&&(r=_e(r,i)),de((function(i,a,s,l){var d,c,u,f=[],p=[],m=a.length,b=i||function(e,t,n){for(var o=0,r=t.length;o<r;o++)se(e,t[o],n);return n}(t||"*",s.nodeType?[s]:s,[]),x=!e||!i&&t?b:ke(b,f,e,s,l),h=n?r||(i?e:m||o)?[]:a:x;if(n&&n(x,h,s,l),o)for(d=ke(h,p),o(d,[],s,l),c=d.length;c--;)(u=d[c])&&(h[p[c]]=!(x[p[c]]=u));if(i){if(r||e){if(r){for(d=[],c=h.length;c--;)(u=h[c])&&d.push(x[c]=u);r(null,h=[],d,l)}for(c=h.length;c--;)(u=h[c])&&(d=r?I(i,u):f[c])>-1&&(i[d]=!(a[d]=u))}}else h=ke(h===a?h.splice(m,h.length):h),r?r(null,a,h,l):M.apply(a,h)}))}function Ce(e){for(var t,n,r,i=e.length,a=o.relative[e[0].type],s=a||o.relative[" "],l=a?1:0,c=ye((function(e){return e===t}),s,!0),u=ye((function(e){return I(t,e)>-1}),s,!0),f=[function(e,n,o){var r=!a&&(o||n!==d)||((t=n).nodeType?c(e,n,o):u(e,n,o));return t=null,r}];l<i;l++)if(n=o.relative[e[l].type])f=[ye(ve(f),n)];else{if((n=o.filter[e[l].type].apply(null,e[l].matches))[y]){for(r=++l;r<i&&!o.relative[e[r].type];r++);return _e(l>1&&ve(f),l>1&&we(e.slice(0,l-1).concat({value:" "===e[l-2].type?"*":""})).replace(q,"$1"),n,l<r&&Ce(e.slice(l,r)),r<i&&Ce(e=e.slice(r)),r<i&&we(e))}f.push(n)}return ve(f)}return ge.prototype=o.filters=o.pseudos,o.setFilters=new ge,a=se.tokenize=function(e,t){var n,r,i,a,s,l,d,c=E[e+" "];if(c)return t?0:c.slice(0);for(s=e,l=[],d=o.preFilter;s;){for(a in n&&!(r=W.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(i=[])),n=!1,(r=$.exec(s))&&(n=r.shift(),i.push({value:n,type:r[0].replace(q," ")}),s=s.slice(n.length)),o.filter)!(r=X[a].exec(s))||d[a]&&!(r=d[a](r))||(n=r.shift(),i.push({value:n,type:a,matches:r}),s=s.slice(n.length));if(!n)break}return t?s.length:s?se.error(e):E(e,l).slice(0)},s=se.compile=function(e,t){var n,r=[],i=[],s=j[e+" "];if(!s){for(t||(t=a(e)),n=t.length;n--;)(s=Ce(t[n]))[y]?r.push(s):i.push(s);(s=j(e,function(e,t){var n=t.length>0,r=e.length>0,i=function(i,a,s,l,c){var u,m,x,h=0,g="0",w=i&&[],y=[],v=d,_=i||r&&o.find.TAG("*",c),C=k+=null==v?1:Math.random()||.1,E=_.length;for(c&&(d=a===p||a||c);g!==E&&null!=(u=_[g]);g++){if(r&&u){for(m=0,a||u.ownerDocument===p||(f(u),s=!b);x=e[m++];)if(x(u,a||p,s)){l.push(u);break}c&&(k=C)}n&&((u=!x&&u)&&h--,i&&w.push(u))}if(h+=g,n&&g!==h){for(m=0;x=t[m++];)x(w,y,a,s);if(i){if(h>0)for(;g--;)w[g]||y[g]||(y[g]=z.call(l));y=ke(y)}M.apply(l,y),c&&!i&&y.length>0&&h+t.length>1&&se.uniqueSort(l)}return c&&(k=C,d=v),w};return n?de(i):i}(i,r))).selector=e}return s},l=se.select=function(e,t,n,r){var i,l,d,c,u,f="function"==typeof e&&e,p=!r&&a(e=f.selector||e);if(n=n||[],1===p.length){if((l=p[0]=p[0].slice(0)).length>2&&"ID"===(d=l[0]).type&&9===t.nodeType&&b&&o.relative[l[1].type]){if(!(t=(o.find.ID(d.matches[0].replace(te,ne),t)||[])[0]))return n;f&&(t=t.parentNode),e=e.slice(l.shift().value.length)}for(i=X.needsContext.test(e)?0:l.length;i--&&(d=l[i],!o.relative[c=d.type]);)if((u=o.find[c])&&(r=u(d.matches[0].replace(te,ne),ee.test(l[0].type)&&he(t.parentNode)||t))){if(l.splice(i,1),!(e=r.length&&we(l)))return M.apply(n,r),n;break}}return(f||s(e,p))(r,t,!b,n,!t||ee.test(e)&&he(t.parentNode)||t),n},n.sortStable=y.split("").sort(A).join("")===y,n.detectDuplicates=!!u,f(),n.sortDetached=ce((function(e){return 1&e.compareDocumentPosition(p.createElement("fieldset"))})),ce((function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")}))||ue("type|href|height|width",(function(e,t,n){if(!n)return e.getAttribute(t,"type"===t.toLowerCase()?1:2)})),n.attributes&&ce((function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")}))||ue("value",(function(e,t,n){if(!n&&"input"===e.nodeName.toLowerCase())return e.defaultValue})),ce((function(e){return null==e.getAttribute("disabled")}))||ue(B,(function(e,t,n){var o;if(!n)return!0===e[t]?t.toLowerCase():(o=e.getAttributeNode(t))&&o.specified?o.value:null})),se}(n);_.find=j,_.expr=j.selectors,_.expr[":"]=_.expr.pseudos,_.uniqueSort=_.unique=j.uniqueSort,_.text=j.getText,_.isXMLDoc=j.isXML,_.contains=j.contains,_.escapeSelector=j.escape;var T=function(e,t,n){for(var o=[],r=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(r&&_(e).is(n))break;o.push(e)}return o},A=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},D=_.expr.match.needsContext;function N(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}var z=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function F(e,t,n){return g(t)?_.grep(e,(function(e,o){return!!t.call(e,o,e)!==n})):t.nodeType?_.grep(e,(function(e){return e===t!==n})):"string"!=typeof t?_.grep(e,(function(e){return u.call(t,e)>-1!==n})):_.filter(t,e,n)}_.filter=function(e,t,n){var o=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===o.nodeType?_.find.matchesSelector(o,e)?[o]:[]:_.find.matches(e,_.grep(t,(function(e){return 1===e.nodeType})))},_.fn.extend({find:function(e){var t,n,o=this.length,r=this;if("string"!=typeof e)return this.pushStack(_(e).filter((function(){for(t=0;t<o;t++)if(_.contains(r[t],this))return!0})));for(n=this.pushStack([]),t=0;t<o;t++)_.find(e,r[t],n);return o>1?_.uniqueSort(n):n},filter:function(e){return this.pushStack(F(this,e||[],!1))},not:function(e){return this.pushStack(F(this,e||[],!0))},is:function(e){return!!F(this,"string"==typeof e&&D.test(e)?_(e):e||[],!1).length}});var M,S=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(_.fn.init=function(e,t,n){var o,r;if(!e)return this;if(n=n||M,"string"==typeof e){if(!(o="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:S.exec(e))||!o[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(o[1]){if(t=t instanceof _?t[0]:t,_.merge(this,_.parseHTML(o[1],t&&t.nodeType?t.ownerDocument||t:a,!0)),z.test(o[1])&&_.isPlainObject(t))for(o in t)g(this[o])?this[o](t[o]):this.attr(o,t[o]);return this}return(r=a.getElementById(o[2]))&&(this[0]=r,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):g(e)?void 0!==n.ready?n.ready(e):e(_):_.makeArray(e,this)}).prototype=_.fn,M=_(a);var I=/^(?:parents|prev(?:Until|All))/,B={children:!0,contents:!0,next:!0,prev:!0};function O(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}_.fn.extend({has:function(e){var t=_(e,this),n=t.length;return this.filter((function(){for(var e=0;e<n;e++)if(_.contains(this,t[e]))return!0}))},closest:function(e,t){var n,o=0,r=this.length,i=[],a="string"!=typeof e&&_(e);if(!D.test(e))for(;o<r;o++)for(n=this[o];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&_.find.matchesSelector(n,e))){i.push(n);break}return this.pushStack(i.length>1?_.uniqueSort(i):i)},index:function(e){return e?"string"==typeof e?u.call(_(e),this[0]):u.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(_.uniqueSort(_.merge(this.get(),_(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),_.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return T(e,"parentNode")},parentsUntil:function(e,t,n){return T(e,"parentNode",n)},next:function(e){return O(e,"nextSibling")},prev:function(e){return O(e,"previousSibling")},nextAll:function(e){return T(e,"nextSibling")},prevAll:function(e){return T(e,"previousSibling")},nextUntil:function(e,t,n){return T(e,"nextSibling",n)},prevUntil:function(e,t,n){return T(e,"previousSibling",n)},siblings:function(e){return A((e.parentNode||{}).firstChild,e)},children:function(e){return A(e.firstChild)},contents:function(e){return void 0!==e.contentDocument?e.contentDocument:(N(e,"template")&&(e=e.content||e),_.merge([],e.childNodes))}},(function(e,t){_.fn[e]=function(n,o){var r=_.map(this,t,n);return"Until"!==e.slice(-5)&&(o=n),o&&"string"==typeof o&&(r=_.filter(o,r)),this.length>1&&(B[e]||_.uniqueSort(r),I.test(e)&&r.reverse()),this.pushStack(r)}}));var R=/[^\x20\t\r\n\f]+/g;function P(e){return e}function L(e){throw e}function H(e,t,n,o){var r;try{e&&g(r=e.promise)?r.call(e).done(t).fail(n):e&&g(r=e.then)?r.call(e,t,n):t.apply(void 0,[e].slice(o))}catch(e){n.apply(void 0,[e])}}_.Callbacks=function(e){e="string"==typeof e?function(e){var t={};return _.each(e.match(R)||[],(function(e,n){t[n]=!0})),t}(e):_.extend({},e);var t,n,o,r,i=[],a=[],s=-1,l=function(){for(r=r||e.once,o=t=!0;a.length;s=-1)for(n=a.shift();++s<i.length;)!1===i[s].apply(n[0],n[1])&&e.stopOnFalse&&(s=i.length,n=!1);e.memory||(n=!1),t=!1,r&&(i=n?[]:"")},d={add:function(){return i&&(n&&!t&&(s=i.length-1,a.push(n)),function t(n){_.each(n,(function(n,o){g(o)?e.unique&&d.has(o)||i.push(o):o&&o.length&&"string"!==k(o)&&t(o)}))}(arguments),n&&!t&&l()),this},remove:function(){return _.each(arguments,(function(e,t){for(var n;(n=_.inArray(t,i,n))>-1;)i.splice(n,1),n<=s&&s--})),this},has:function(e){return e?_.inArray(e,i)>-1:i.length>0},empty:function(){return i&&(i=[]),this},disable:function(){return r=a=[],i=n="",this},disabled:function(){return!i},lock:function(){return r=a=[],n||t||(i=n=""),this},locked:function(){return!!r},fireWith:function(e,n){return r||(n=[e,(n=n||[]).slice?n.slice():n],a.push(n),t||l()),this},fire:function(){return d.fireWith(this,arguments),this},fired:function(){return!!o}};return d},_.extend({Deferred:function(e){var t=[["notify","progress",_.Callbacks("memory"),_.Callbacks("memory"),2],["resolve","done",_.Callbacks("once memory"),_.Callbacks("once memory"),0,"resolved"],["reject","fail",_.Callbacks("once memory"),_.Callbacks("once memory"),1,"rejected"]],o="pending",r={state:function(){return o},always:function(){return i.done(arguments).fail(arguments),this},catch:function(e){return r.then(null,e)},pipe:function(){var e=arguments;return _.Deferred((function(n){_.each(t,(function(t,o){var r=g(e[o[4]])&&e[o[4]];i[o[1]]((function(){var e=r&&r.apply(this,arguments);e&&g(e.promise)?e.promise().progress(n.notify).done(n.resolve).fail(n.reject):n[o[0]+"With"](this,r?[e]:arguments)}))})),e=null})).promise()},then:function(e,o,r){var i=0;function a(e,t,o,r){return function(){var s=this,l=arguments,d=function(){var n,d;if(!(e<i)){if((n=o.apply(s,l))===t.promise())throw new TypeError("Thenable self-resolution");d=n&&("object"==typeof n||"function"==typeof n)&&n.then,g(d)?r?d.call(n,a(i,t,P,r),a(i,t,L,r)):(i++,d.call(n,a(i,t,P,r),a(i,t,L,r),a(i,t,P,t.notifyWith))):(o!==P&&(s=void 0,l=[n]),(r||t.resolveWith)(s,l))}},c=r?d:function(){try{d()}catch(n){_.Deferred.exceptionHook&&_.Deferred.exceptionHook(n,c.stackTrace),e+1>=i&&(o!==L&&(s=void 0,l=[n]),t.rejectWith(s,l))}};e?c():(_.Deferred.getStackHook&&(c.stackTrace=_.Deferred.getStackHook()),n.setTimeout(c))}}return _.Deferred((function(n){t[0][3].add(a(0,n,g(r)?r:P,n.notifyWith)),t[1][3].add(a(0,n,g(e)?e:P)),t[2][3].add(a(0,n,g(o)?o:L))})).promise()},promise:function(e){return null!=e?_.extend(e,r):r}},i={};return _.each(t,(function(e,n){var a=n[2],s=n[5];r[n[1]]=a.add,s&&a.add((function(){o=s}),t[3-e][2].disable,t[3-e][3].disable,t[0][2].lock,t[0][3].lock),a.add(n[3].fire),i[n[0]]=function(){return i[n[0]+"With"](this===i?void 0:this,arguments),this},i[n[0]+"With"]=a.fireWith})),r.promise(i),e&&e.call(i,i),i},when:function(e){var t=arguments.length,n=t,o=Array(n),r=l.call(arguments),i=_.Deferred(),a=function(e){return function(n){o[e]=this,r[e]=arguments.length>1?l.call(arguments):n,--t||i.resolveWith(o,r)}};if(t<=1&&(H(e,i.done(a(n)).resolve,i.reject,!t),"pending"===i.state()||g(r[n]&&r[n].then)))return i.then();for(;n--;)H(r[n],a(n),i.reject);return i.promise()}});var q=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;_.Deferred.exceptionHook=function(e,t){n.console&&n.console.warn&&e&&q.test(e.name)&&n.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},_.readyException=function(e){n.setTimeout((function(){throw e}))};var W=_.Deferred();function $(){a.removeEventListener("DOMContentLoaded",$),n.removeEventListener("load",$),_.ready()}_.fn.ready=function(e){return W.then(e).catch((function(e){_.readyException(e)})),this},_.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--_.readyWait:_.isReady)||(_.isReady=!0,!0!==e&&--_.readyWait>0||W.resolveWith(a,[_]))}}),_.ready.then=W.then,"complete"===a.readyState||"loading"!==a.readyState&&!a.documentElement.doScroll?n.setTimeout(_.ready):(a.addEventListener("DOMContentLoaded",$),n.addEventListener("load",$));var U=function(e,t,n,o,r,i,a){var s=0,l=e.length,d=null==n;if("object"===k(n))for(s in r=!0,n)U(e,t,s,n[s],!0,i,a);else if(void 0!==o&&(r=!0,g(o)||(a=!0),d&&(a?(t.call(e,o),t=null):(d=t,t=function(e,t,n){return d.call(_(e),n)})),t))for(;s<l;s++)t(e[s],n,a?o:o.call(e[s],s,t(e[s],n)));return r?e:d?t.call(e):l?t(e[0],n):i},Y=/^-ms-/,G=/-([a-z])/g;function X(e,t){return t.toUpperCase()}function V(e){return e.replace(Y,"ms-").replace(G,X)}var Q=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function K(){this.expando=_.expando+K.uid++}K.uid=1,K.prototype={cache:function(e){var t=e[this.expando];return t||(t={},Q(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var o,r=this.cache(e);if("string"==typeof t)r[V(t)]=n;else for(o in t)r[V(o)]=t[o];return r},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][V(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,o=e[this.expando];if(void 0!==o){if(void 0!==t){n=(t=Array.isArray(t)?t.map(V):(t=V(t))in o?[t]:t.match(R)||[]).length;for(;n--;)delete o[t[n]]}(void 0===t||_.isEmptyObject(o))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!_.isEmptyObject(t)}};var J=new K,Z=new K,ee=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,te=/[A-Z]/g;function ne(e,t,n){var o;if(void 0===n&&1===e.nodeType)if(o="data-"+t.replace(te,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(o))){try{n=function(e){return"true"===e||"false"!==e&&("null"===e?null:e===+e+""?+e:ee.test(e)?JSON.parse(e):e)}(n)}catch(e){}Z.set(e,t,n)}else n=void 0;return n}_.extend({hasData:function(e){return Z.hasData(e)||J.hasData(e)},data:function(e,t,n){return Z.access(e,t,n)},removeData:function(e,t){Z.remove(e,t)},_data:function(e,t,n){return J.access(e,t,n)},_removeData:function(e,t){J.remove(e,t)}}),_.fn.extend({data:function(e,t){var n,o,r,i=this[0],a=i&&i.attributes;if(void 0===e){if(this.length&&(r=Z.get(i),1===i.nodeType&&!J.get(i,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&0===(o=a[n].name).indexOf("data-")&&(o=V(o.slice(5)),ne(i,o,r[o]));J.set(i,"hasDataAttrs",!0)}return r}return"object"==typeof e?this.each((function(){Z.set(this,e)})):U(this,(function(t){var n;if(i&&void 0===t)return void 0!==(n=Z.get(i,e))?n:void 0!==(n=ne(i,e))?n:void 0;this.each((function(){Z.set(this,e,t)}))}),null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each((function(){Z.remove(this,e)}))}}),_.extend({queue:function(e,t,n){var o;if(e)return t=(t||"fx")+"queue",o=J.get(e,t),n&&(!o||Array.isArray(n)?o=J.access(e,t,_.makeArray(n)):o.push(n)),o||[]},dequeue:function(e,t){t=t||"fx";var n=_.queue(e,t),o=n.length,r=n.shift(),i=_._queueHooks(e,t);"inprogress"===r&&(r=n.shift(),o--),r&&("fx"===t&&n.unshift("inprogress"),delete i.stop,r.call(e,(function(){_.dequeue(e,t)}),i)),!o&&i&&i.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return J.get(e,n)||J.access(e,n,{empty:_.Callbacks("once memory").add((function(){J.remove(e,[t+"queue",n])}))})}}),_.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?_.queue(this[0],e):void 0===t?this:this.each((function(){var n=_.queue(this,e,t);_._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&_.dequeue(this,e)}))},dequeue:function(e){return this.each((function(){_.dequeue(this,e)}))},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,o=1,r=_.Deferred(),i=this,a=this.length,s=function(){--o||r.resolveWith(i,[i])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";a--;)(n=J.get(i[a],e+"queueHooks"))&&n.empty&&(o++,n.empty.add(s));return s(),r.promise(t)}});var oe=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,re=new RegExp("^(?:([+-])=|)("+oe+")([a-z%]*)$","i"),ie=["Top","Right","Bottom","Left"],ae=a.documentElement,se=function(e){return _.contains(e.ownerDocument,e)},le={composed:!0};ae.getRootNode&&(se=function(e){return _.contains(e.ownerDocument,e)||e.getRootNode(le)===e.ownerDocument});var de=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&se(e)&&"none"===_.css(e,"display")},ce=function(e,t,n,o){var r,i,a={};for(i in t)a[i]=e.style[i],e.style[i]=t[i];for(i in r=n.apply(e,o||[]),t)e.style[i]=a[i];return r};function ue(e,t,n,o){var r,i,a=20,s=o?function(){return o.cur()}:function(){return _.css(e,t,"")},l=s(),d=n&&n[3]||(_.cssNumber[t]?"":"px"),c=e.nodeType&&(_.cssNumber[t]||"px"!==d&&+l)&&re.exec(_.css(e,t));if(c&&c[3]!==d){for(l/=2,d=d||c[3],c=+l||1;a--;)_.style(e,t,c+d),(1-i)*(1-(i=s()/l||.5))<=0&&(a=0),c/=i;c*=2,_.style(e,t,c+d),n=n||[]}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],o&&(o.unit=d,o.start=c,o.end=r)),r}var fe={};function pe(e){var t,n=e.ownerDocument,o=e.nodeName,r=fe[o];return r||(t=n.body.appendChild(n.createElement(o)),r=_.css(t,"display"),t.parentNode.removeChild(t),"none"===r&&(r="block"),fe[o]=r,r)}function me(e,t){for(var n,o,r=[],i=0,a=e.length;i<a;i++)(o=e[i]).style&&(n=o.style.display,t?("none"===n&&(r[i]=J.get(o,"display")||null,r[i]||(o.style.display="")),""===o.style.display&&de(o)&&(r[i]=pe(o))):"none"!==n&&(r[i]="none",J.set(o,"display",n)));for(i=0;i<a;i++)null!=r[i]&&(e[i].style.display=r[i]);return e}_.fn.extend({show:function(){return me(this,!0)},hide:function(){return me(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each((function(){de(this)?_(this).show():_(this).hide()}))}});var be=/^(?:checkbox|radio)$/i,xe=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,he=/^$|^module$|\/(?:java|ecma)script/i,ge={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function we(e,t){var n;return n=void 0!==e.getElementsByTagName?e.getElementsByTagName(t||"*"):void 0!==e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&N(e,t)?_.merge([e],n):n}function ye(e,t){for(var n=0,o=e.length;n<o;n++)J.set(e[n],"globalEval",!t||J.get(t[n],"globalEval"))}ge.optgroup=ge.option,ge.tbody=ge.tfoot=ge.colgroup=ge.caption=ge.thead,ge.th=ge.td;var ve,ke,_e=/<|&#?\w+;/;function Ce(e,t,n,o,r){for(var i,a,s,l,d,c,u=t.createDocumentFragment(),f=[],p=0,m=e.length;p<m;p++)if((i=e[p])||0===i)if("object"===k(i))_.merge(f,i.nodeType?[i]:i);else if(_e.test(i)){for(a=a||u.appendChild(t.createElement("div")),s=(xe.exec(i)||["",""])[1].toLowerCase(),l=ge[s]||ge._default,a.innerHTML=l[1]+_.htmlPrefilter(i)+l[2],c=l[0];c--;)a=a.lastChild;_.merge(f,a.childNodes),(a=u.firstChild).textContent=""}else f.push(t.createTextNode(i));for(u.textContent="",p=0;i=f[p++];)if(o&&_.inArray(i,o)>-1)r&&r.push(i);else if(d=se(i),a=we(u.appendChild(i),"script"),d&&ye(a),n)for(c=0;i=a[c++];)he.test(i.type||"")&&n.push(i);return u}ve=a.createDocumentFragment().appendChild(a.createElement("div")),(ke=a.createElement("input")).setAttribute("type","radio"),ke.setAttribute("checked","checked"),ke.setAttribute("name","t"),ve.appendChild(ke),h.checkClone=ve.cloneNode(!0).cloneNode(!0).lastChild.checked,ve.innerHTML="<textarea>x</textarea>",h.noCloneChecked=!!ve.cloneNode(!0).lastChild.defaultValue;var Ee=/^key/,je=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Te=/^([^.]*)(?:\.(.+)|)/;function Ae(){return!0}function De(){return!1}function Ne(e,t){return e===function(){try{return a.activeElement}catch(e){}}()==("focus"===t)}function ze(e,t,n,o,r,i){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(o=o||n,n=void 0),t)ze(e,s,n,o,t[s],i);return e}if(null==o&&null==r?(r=n,o=n=void 0):null==r&&("string"==typeof n?(r=o,o=void 0):(r=o,o=n,n=void 0)),!1===r)r=De;else if(!r)return e;return 1===i&&(a=r,(r=function(e){return _().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=_.guid++)),e.each((function(){_.event.add(this,t,r,o,n)}))}function Fe(e,t,n){n?(J.set(e,t,!1),_.event.add(e,t,{namespace:!1,handler:function(e){var o,r,i=J.get(this,t);if(1&e.isTrigger&&this[t]){if(i.length)(_.event.special[t]||{}).delegateType&&e.stopPropagation();else if(i=l.call(arguments),J.set(this,t,i),o=n(this,t),this[t](),i!==(r=J.get(this,t))||o?J.set(this,t,!1):r={},i!==r)return e.stopImmediatePropagation(),e.preventDefault(),r.value}else i.length&&(J.set(this,t,{value:_.event.trigger(_.extend(i[0],_.Event.prototype),i.slice(1),this)}),e.stopImmediatePropagation())}})):void 0===J.get(e,t)&&_.event.add(e,t,Ae)}_.event={global:{},add:function(e,t,n,o,r){var i,a,s,l,d,c,u,f,p,m,b,x=J.get(e);if(x)for(n.handler&&(n=(i=n).handler,r=i.selector),r&&_.find.matchesSelector(ae,r),n.guid||(n.guid=_.guid++),(l=x.events)||(l=x.events={}),(a=x.handle)||(a=x.handle=function(t){return void 0!==_&&_.event.triggered!==t.type?_.event.dispatch.apply(e,arguments):void 0}),d=(t=(t||"").match(R)||[""]).length;d--;)p=b=(s=Te.exec(t[d])||[])[1],m=(s[2]||"").split(".").sort(),p&&(u=_.event.special[p]||{},p=(r?u.delegateType:u.bindType)||p,u=_.event.special[p]||{},c=_.extend({type:p,origType:b,data:o,handler:n,guid:n.guid,selector:r,needsContext:r&&_.expr.match.needsContext.test(r),namespace:m.join(".")},i),(f=l[p])||((f=l[p]=[]).delegateCount=0,u.setup&&!1!==u.setup.call(e,o,m,a)||e.addEventListener&&e.addEventListener(p,a)),u.add&&(u.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),r?f.splice(f.delegateCount++,0,c):f.push(c),_.event.global[p]=!0)},remove:function(e,t,n,o,r){var i,a,s,l,d,c,u,f,p,m,b,x=J.hasData(e)&&J.get(e);if(x&&(l=x.events)){for(d=(t=(t||"").match(R)||[""]).length;d--;)if(p=b=(s=Te.exec(t[d])||[])[1],m=(s[2]||"").split(".").sort(),p){for(u=_.event.special[p]||{},f=l[p=(o?u.delegateType:u.bindType)||p]||[],s=s[2]&&new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=i=f.length;i--;)c=f[i],!r&&b!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||o&&o!==c.selector&&("**"!==o||!c.selector)||(f.splice(i,1),c.selector&&f.delegateCount--,u.remove&&u.remove.call(e,c));a&&!f.length&&(u.teardown&&!1!==u.teardown.call(e,m,x.handle)||_.removeEvent(e,p,x.handle),delete l[p])}else for(p in l)_.event.remove(e,p+t[d],n,o,!0);_.isEmptyObject(l)&&J.remove(e,"handle events")}},dispatch:function(e){var t,n,o,r,i,a,s=_.event.fix(e),l=new Array(arguments.length),d=(J.get(this,"events")||{})[s.type]||[],c=_.event.special[s.type]||{};for(l[0]=s,t=1;t<arguments.length;t++)l[t]=arguments[t];if(s.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,s)){for(a=_.event.handlers.call(this,s,d),t=0;(r=a[t++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(i=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!1!==i.namespace&&!s.rnamespace.test(i.namespace)||(s.handleObj=i,s.data=i.data,void 0!==(o=((_.event.special[i.origType]||{}).handle||i.handler).apply(r.elem,l))&&!1===(s.result=o)&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(e,t){var n,o,r,i,a,s=[],l=t.delegateCount,d=e.target;if(l&&d.nodeType&&!("click"===e.type&&e.button>=1))for(;d!==this;d=d.parentNode||this)if(1===d.nodeType&&("click"!==e.type||!0!==d.disabled)){for(i=[],a={},n=0;n<l;n++)void 0===a[r=(o=t[n]).selector+" "]&&(a[r]=o.needsContext?_(r,this).index(d)>-1:_.find(r,this,null,[d]).length),a[r]&&i.push(o);i.length&&s.push({elem:d,handlers:i})}return d=this,l<t.length&&s.push({elem:d,handlers:t.slice(l)}),s},addProp:function(e,t){Object.defineProperty(_.Event.prototype,e,{enumerable:!0,configurable:!0,get:g(t)?function(){if(this.originalEvent)return t(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[e]},set:function(t){Object.defineProperty(this,e,{enumerable:!0,configurable:!0,writable:!0,value:t})}})},fix:function(e){return e[_.expando]?e:new _.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return be.test(t.type)&&t.click&&N(t,"input")&&Fe(t,"click",Ae),!1},trigger:function(e){var t=this||e;return be.test(t.type)&&t.click&&N(t,"input")&&Fe(t,"click"),!0},_default:function(e){var t=e.target;return be.test(t.type)&&t.click&&N(t,"input")&&J.get(t,"click")||N(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},_.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},_.Event=function(e,t){if(!(this instanceof _.Event))return new _.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ae:De,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&_.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[_.expando]=!0},_.Event.prototype={constructor:_.Event,isDefaultPrevented:De,isPropagationStopped:De,isImmediatePropagationStopped:De,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ae,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ae,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ae,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},_.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(e){var t=e.button;return null==e.which&&Ee.test(e.type)?null!=e.charCode?e.charCode:e.keyCode:!e.which&&void 0!==t&&je.test(e.type)?1&t?1:2&t?3:4&t?2:0:e.which}},_.event.addProp),_.each({focus:"focusin",blur:"focusout"},(function(e,t){_.event.special[e]={setup:function(){return Fe(this,e,Ne),!1},trigger:function(){return Fe(this,e),!0},delegateType:t}})),_.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},(function(e,t){_.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,o=this,r=e.relatedTarget,i=e.handleObj;return r&&(r===o||_.contains(o,r))||(e.type=i.origType,n=i.handler.apply(this,arguments),e.type=t),n}}})),_.fn.extend({on:function(e,t,n,o){return ze(this,e,t,n,o)},one:function(e,t,n,o){return ze(this,e,t,n,o,1)},off:function(e,t,n){var o,r;if(e&&e.preventDefault&&e.handleObj)return o=e.handleObj,_(e.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof e){for(r in e)this.off(r,t,e[r]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=De),this.each((function(){_.event.remove(this,e,n,t)}))}});var Me=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Se=/<script|<style|<link/i,Ie=/checked\s*(?:[^=]|=\s*.checked.)/i,Be=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;function Oe(e,t){return N(e,"table")&&N(11!==t.nodeType?t:t.firstChild,"tr")&&_(e).children("tbody")[0]||e}function Re(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function Pe(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Le(e,t){var n,o,r,i,a,s,l,d;if(1===t.nodeType){if(J.hasData(e)&&(i=J.access(e),a=J.set(t,i),d=i.events))for(r in delete a.handle,a.events={},d)for(n=0,o=d[r].length;n<o;n++)_.event.add(t,r,d[r][n]);Z.hasData(e)&&(s=Z.access(e),l=_.extend({},s),Z.set(t,l))}}function He(e,t){var n=t.nodeName.toLowerCase();"input"===n&&be.test(e.type)?t.checked=e.checked:"input"!==n&&"textarea"!==n||(t.defaultValue=e.defaultValue)}function qe(e,t,n,o){t=d.apply([],t);var r,i,a,s,l,c,u=0,f=e.length,p=f-1,m=t[0],b=g(m);if(b||f>1&&"string"==typeof m&&!h.checkClone&&Ie.test(m))return e.each((function(r){var i=e.eq(r);b&&(t[0]=m.call(this,r,i.html())),qe(i,t,n,o)}));if(f&&(i=(r=Ce(t,e[0].ownerDocument,!1,e,o)).firstChild,1===r.childNodes.length&&(r=i),i||o)){for(s=(a=_.map(we(r,"script"),Re)).length;u<f;u++)l=r,u!==p&&(l=_.clone(l,!0,!0),s&&_.merge(a,we(l,"script"))),n.call(e[u],l,u);if(s)for(c=a[a.length-1].ownerDocument,_.map(a,Pe),u=0;u<s;u++)l=a[u],he.test(l.type||"")&&!J.access(l,"globalEval")&&_.contains(c,l)&&(l.src&&"module"!==(l.type||"").toLowerCase()?_._evalUrl&&!l.noModule&&_._evalUrl(l.src,{nonce:l.nonce||l.getAttribute("nonce")}):v(l.textContent.replace(Be,""),l,c))}return e}function We(e,t,n){for(var o,r=t?_.filter(t,e):e,i=0;null!=(o=r[i]);i++)n||1!==o.nodeType||_.cleanData(we(o)),o.parentNode&&(n&&se(o)&&ye(we(o,"script")),o.parentNode.removeChild(o));return e}_.extend({htmlPrefilter:function(e){return e.replace(Me,"<$1></$2>")},clone:function(e,t,n){var o,r,i,a,s=e.cloneNode(!0),l=se(e);if(!(h.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||_.isXMLDoc(e)))for(a=we(s),o=0,r=(i=we(e)).length;o<r;o++)He(i[o],a[o]);if(t)if(n)for(i=i||we(e),a=a||we(s),o=0,r=i.length;o<r;o++)Le(i[o],a[o]);else Le(e,s);return(a=we(s,"script")).length>0&&ye(a,!l&&we(e,"script")),s},cleanData:function(e){for(var t,n,o,r=_.event.special,i=0;void 0!==(n=e[i]);i++)if(Q(n)){if(t=n[J.expando]){if(t.events)for(o in t.events)r[o]?_.event.remove(n,o):_.removeEvent(n,o,t.handle);n[J.expando]=void 0}n[Z.expando]&&(n[Z.expando]=void 0)}}}),_.fn.extend({detach:function(e){return We(this,e,!0)},remove:function(e){return We(this,e)},text:function(e){return U(this,(function(e){return void 0===e?_.text(this):this.empty().each((function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)}))}),null,e,arguments.length)},append:function(){return qe(this,arguments,(function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Oe(this,e).appendChild(e)}))},prepend:function(){return qe(this,arguments,(function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Oe(this,e);t.insertBefore(e,t.firstChild)}}))},before:function(){return qe(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this)}))},after:function(){return qe(this,arguments,(function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)}))},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(_.cleanData(we(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map((function(){return _.clone(this,e,t)}))},html:function(e){return U(this,(function(e){var t=this[0]||{},n=0,o=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Se.test(e)&&!ge[(xe.exec(e)||["",""])[1].toLowerCase()]){e=_.htmlPrefilter(e);try{for(;n<o;n++)1===(t=this[n]||{}).nodeType&&(_.cleanData(we(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)}),null,e,arguments.length)},replaceWith:function(){var e=[];return qe(this,arguments,(function(t){var n=this.parentNode;_.inArray(this,e)<0&&(_.cleanData(we(this)),n&&n.replaceChild(t,this))}),e)}}),_.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},(function(e,t){_.fn[e]=function(e){for(var n,o=[],r=_(e),i=r.length-1,a=0;a<=i;a++)n=a===i?this:this.clone(!0),_(r[a])[t](n),c.apply(o,n.get());return this.pushStack(o)}}));var $e=new RegExp("^("+oe+")(?!px)[a-z%]+$","i"),Ue=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=n),t.getComputedStyle(e)},Ye=new RegExp(ie.join("|"),"i");function Ge(e,t,n){var o,r,i,a,s=e.style;return(n=n||Ue(e))&&(""!==(a=n.getPropertyValue(t)||n[t])||se(e)||(a=_.style(e,t)),!h.pixelBoxStyles()&&$e.test(a)&&Ye.test(t)&&(o=s.width,r=s.minWidth,i=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=o,s.minWidth=r,s.maxWidth=i)),void 0!==a?a+"":a}function Xe(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(c){d.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",c.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ae.appendChild(d).appendChild(c);var e=n.getComputedStyle(c);o="1%"!==e.top,l=12===t(e.marginLeft),c.style.right="60%",s=36===t(e.right),r=36===t(e.width),c.style.position="absolute",i=12===t(c.offsetWidth/3),ae.removeChild(d),c=null}}function t(e){return Math.round(parseFloat(e))}var o,r,i,s,l,d=a.createElement("div"),c=a.createElement("div");c.style&&(c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",h.clearCloneStyle="content-box"===c.style.backgroundClip,_.extend(h,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),s},pixelPosition:function(){return e(),o},reliableMarginLeft:function(){return e(),l},scrollboxSize:function(){return e(),i}}))}();var Ve=["Webkit","Moz","ms"],Qe=a.createElement("div").style,Ke={};function Je(e){var t=_.cssProps[e]||Ke[e];return t||(e in Qe?e:Ke[e]=function(e){for(var t=e[0].toUpperCase()+e.slice(1),n=Ve.length;n--;)if((e=Ve[n]+t)in Qe)return e}(e)||e)}var Ze=/^(none|table(?!-c[ea]).+)/,et=/^--/,tt={position:"absolute",visibility:"hidden",display:"block"},nt={letterSpacing:"0",fontWeight:"400"};function ot(e,t,n){var o=re.exec(t);return o?Math.max(0,o[2]-(n||0))+(o[3]||"px"):t}function rt(e,t,n,o,r,i){var a="width"===t?1:0,s=0,l=0;if(n===(o?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=_.css(e,n+ie[a],!0,r)),o?("content"===n&&(l-=_.css(e,"padding"+ie[a],!0,r)),"margin"!==n&&(l-=_.css(e,"border"+ie[a]+"Width",!0,r))):(l+=_.css(e,"padding"+ie[a],!0,r),"padding"!==n?l+=_.css(e,"border"+ie[a]+"Width",!0,r):s+=_.css(e,"border"+ie[a]+"Width",!0,r));return!o&&i>=0&&(l+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-i-l-s-.5))||0),l}function it(e,t,n){var o=Ue(e),r=(!h.boxSizingReliable()||n)&&"border-box"===_.css(e,"boxSizing",!1,o),i=r,a=Ge(e,t,o),s="offset"+t[0].toUpperCase()+t.slice(1);if($e.test(a)){if(!n)return a;a="auto"}return(!h.boxSizingReliable()&&r||"auto"===a||!parseFloat(a)&&"inline"===_.css(e,"display",!1,o))&&e.getClientRects().length&&(r="border-box"===_.css(e,"boxSizing",!1,o),(i=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+rt(e,t,n||(r?"border":"content"),i,o,a)+"px"}function at(e,t,n,o,r){return new at.prototype.init(e,t,n,o,r)}_.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ge(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(e,t,n,o){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var r,i,a,s=V(t),l=et.test(t),d=e.style;if(l||(t=Je(s)),a=_.cssHooks[t]||_.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(r=a.get(e,!1,o))?r:d[t];"string"===(i=typeof n)&&(r=re.exec(n))&&r[1]&&(n=ue(e,t,r),i="number"),null!=n&&n==n&&("number"!==i||l||(n+=r&&r[3]||(_.cssNumber[s]?"":"px")),h.clearCloneStyle||""!==n||0!==t.indexOf("background")||(d[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,o))||(l?d.setProperty(t,n):d[t]=n))}},css:function(e,t,n,o){var r,i,a,s=V(t);return et.test(t)||(t=Je(s)),(a=_.cssHooks[t]||_.cssHooks[s])&&"get"in a&&(r=a.get(e,!0,n)),void 0===r&&(r=Ge(e,t,o)),"normal"===r&&t in nt&&(r=nt[t]),""===n||n?(i=parseFloat(r),!0===n||isFinite(i)?i||0:r):r}}),_.each(["height","width"],(function(e,t){_.cssHooks[t]={get:function(e,n,o){if(n)return!Ze.test(_.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?it(e,t,o):ce(e,tt,(function(){return it(e,t,o)}))},set:function(e,n,o){var r,i=Ue(e),a=!h.scrollboxSize()&&"absolute"===i.position,s=(a||o)&&"border-box"===_.css(e,"boxSizing",!1,i),l=o?rt(e,t,o,s,i):0;return s&&a&&(l-=Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-parseFloat(i[t])-rt(e,t,"border",!1,i)-.5)),l&&(r=re.exec(n))&&"px"!==(r[3]||"px")&&(e.style[t]=n,n=_.css(e,t)),ot(0,n,l)}}})),_.cssHooks.marginLeft=Xe(h.reliableMarginLeft,(function(e,t){if(t)return(parseFloat(Ge(e,"marginLeft"))||e.getBoundingClientRect().left-ce(e,{marginLeft:0},(function(){return e.getBoundingClientRect().left})))+"px"})),_.each({margin:"",padding:"",border:"Width"},(function(e,t){_.cssHooks[e+t]={expand:function(n){for(var o=0,r={},i="string"==typeof n?n.split(" "):[n];o<4;o++)r[e+ie[o]+t]=i[o]||i[o-2]||i[0];return r}},"margin"!==e&&(_.cssHooks[e+t].set=ot)})),_.fn.extend({css:function(e,t){return U(this,(function(e,t,n){var o,r,i={},a=0;if(Array.isArray(t)){for(o=Ue(e),r=t.length;a<r;a++)i[t[a]]=_.css(e,t[a],!1,o);return i}return void 0!==n?_.style(e,t,n):_.css(e,t)}),e,t,arguments.length>1)}}),_.Tween=at,at.prototype={constructor:at,init:function(e,t,n,o,r,i){this.elem=e,this.prop=n,this.easing=r||_.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=o,this.unit=i||(_.cssNumber[n]?"":"px")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,n=at.propHooks[this.prop];return this.options.duration?this.pos=t=_.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):at.propHooks._default.set(this),this}},at.prototype.init.prototype=at.prototype,at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=_.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){_.fx.step[e.prop]?_.fx.step[e.prop](e):1!==e.elem.nodeType||!_.cssHooks[e.prop]&&null==e.elem.style[Je(e.prop)]?e.elem[e.prop]=e.now:_.style(e.elem,e.prop,e.now+e.unit)}}},at.propHooks.scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},_.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},_.fx=at.prototype.init,_.fx.step={};var st,lt,dt=/^(?:toggle|show|hide)$/,ct=/queueHooks$/;function ut(){lt&&(!1===a.hidden&&n.requestAnimationFrame?n.requestAnimationFrame(ut):n.setTimeout(ut,_.fx.interval),_.fx.tick())}function ft(){return n.setTimeout((function(){st=void 0})),st=Date.now()}function pt(e,t){var n,o=0,r={height:e};for(t=t?1:0;o<4;o+=2-t)r["margin"+(n=ie[o])]=r["padding"+n]=e;return t&&(r.opacity=r.width=e),r}function mt(e,t,n){for(var o,r=(bt.tweeners[t]||[]).concat(bt.tweeners["*"]),i=0,a=r.length;i<a;i++)if(o=r[i].call(n,t,e))return o}function bt(e,t,n){var o,r,i=0,a=bt.prefilters.length,s=_.Deferred().always((function(){delete l.elem})),l=function(){if(r)return!1;for(var t=st||ft(),n=Math.max(0,d.startTime+d.duration-t),o=1-(n/d.duration||0),i=0,a=d.tweens.length;i<a;i++)d.tweens[i].run(o);return s.notifyWith(e,[d,o,n]),o<1&&a?n:(a||s.notifyWith(e,[d,1,0]),s.resolveWith(e,[d]),!1)},d=s.promise({elem:e,props:_.extend({},t),opts:_.extend(!0,{specialEasing:{},easing:_.easing._default},n),originalProperties:t,originalOptions:n,startTime:st||ft(),duration:n.duration,tweens:[],createTween:function(t,n){var o=_.Tween(e,d.opts,t,n,d.opts.specialEasing[t]||d.opts.easing);return d.tweens.push(o),o},stop:function(t){var n=0,o=t?d.tweens.length:0;if(r)return this;for(r=!0;n<o;n++)d.tweens[n].run(1);return t?(s.notifyWith(e,[d,1,0]),s.resolveWith(e,[d,t])):s.rejectWith(e,[d,t]),this}}),c=d.props;for(!function(e,t){var n,o,r,i,a;for(n in e)if(r=t[o=V(n)],i=e[n],Array.isArray(i)&&(r=i[1],i=e[n]=i[0]),n!==o&&(e[o]=i,delete e[n]),(a=_.cssHooks[o])&&"expand"in a)for(n in i=a.expand(i),delete e[o],i)n in e||(e[n]=i[n],t[n]=r);else t[o]=r}(c,d.opts.specialEasing);i<a;i++)if(o=bt.prefilters[i].call(d,e,c,d.opts))return g(o.stop)&&(_._queueHooks(d.elem,d.opts.queue).stop=o.stop.bind(o)),o;return _.map(c,mt,d),g(d.opts.start)&&d.opts.start.call(e,d),d.progress(d.opts.progress).done(d.opts.done,d.opts.complete).fail(d.opts.fail).always(d.opts.always),_.fx.timer(_.extend(l,{elem:e,anim:d,queue:d.opts.queue})),d}_.Animation=_.extend(bt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return ue(n.elem,e,re.exec(t),n),n}]},tweener:function(e,t){g(e)?(t=e,e=["*"]):e=e.match(R);for(var n,o=0,r=e.length;o<r;o++)n=e[o],bt.tweeners[n]=bt.tweeners[n]||[],bt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var o,r,i,a,s,l,d,c,u="width"in t||"height"in t,f=this,p={},m=e.style,b=e.nodeType&&de(e),x=J.get(e,"fxshow");for(o in n.queue||(null==(a=_._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,f.always((function(){f.always((function(){a.unqueued--,_.queue(e,"fx").length||a.empty.fire()}))}))),t)if(r=t[o],dt.test(r)){if(delete t[o],i=i||"toggle"===r,r===(b?"hide":"show")){if("show"!==r||!x||void 0===x[o])continue;b=!0}p[o]=x&&x[o]||_.style(e,o)}if((l=!_.isEmptyObject(t))||!_.isEmptyObject(p))for(o in u&&1===e.nodeType&&(n.overflow=[m.overflow,m.overflowX,m.overflowY],null==(d=x&&x.display)&&(d=J.get(e,"display")),"none"===(c=_.css(e,"display"))&&(d?c=d:(me([e],!0),d=e.style.display||d,c=_.css(e,"display"),me([e]))),("inline"===c||"inline-block"===c&&null!=d)&&"none"===_.css(e,"float")&&(l||(f.done((function(){m.display=d})),null==d&&(c=m.display,d="none"===c?"":c)),m.display="inline-block")),n.overflow&&(m.overflow="hidden",f.always((function(){m.overflow=n.overflow[0],m.overflowX=n.overflow[1],m.overflowY=n.overflow[2]}))),l=!1,p)l||(x?"hidden"in x&&(b=x.hidden):x=J.access(e,"fxshow",{display:d}),i&&(x.hidden=!b),b&&me([e],!0),f.done((function(){for(o in b||me([e]),J.remove(e,"fxshow"),p)_.style(e,o,p[o])}))),l=mt(b?x[o]:0,o,f),o in x||(x[o]=l.start,b&&(l.end=l.start,l.start=0))}],prefilter:function(e,t){t?bt.prefilters.unshift(e):bt.prefilters.push(e)}}),_.speed=function(e,t,n){var o=e&&"object"==typeof e?_.extend({},e):{complete:n||!n&&t||g(e)&&e,duration:e,easing:n&&t||t&&!g(t)&&t};return _.fx.off?o.duration=0:"number"!=typeof o.duration&&(o.duration in _.fx.speeds?o.duration=_.fx.speeds[o.duration]:o.duration=_.fx.speeds._default),null!=o.queue&&!0!==o.queue||(o.queue="fx"),o.old=o.complete,o.complete=function(){g(o.old)&&o.old.call(this),o.queue&&_.dequeue(this,o.queue)},o},_.fn.extend({fadeTo:function(e,t,n,o){return this.filter(de).css("opacity",0).show().end().animate({opacity:t},e,n,o)},animate:function(e,t,n,o){var r=_.isEmptyObject(e),i=_.speed(t,n,o),a=function(){var t=bt(this,_.extend({},e),i);(r||J.get(this,"finish"))&&t.stop(!0)};return a.finish=a,r||!1===i.queue?this.each(a):this.queue(i.queue,a)},stop:function(e,t,n){var o=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&!1!==e&&this.queue(e||"fx",[]),this.each((function(){var t=!0,r=null!=e&&e+"queueHooks",i=_.timers,a=J.get(this);if(r)a[r]&&a[r].stop&&o(a[r]);else for(r in a)a[r]&&a[r].stop&&ct.test(r)&&o(a[r]);for(r=i.length;r--;)i[r].elem!==this||null!=e&&i[r].queue!==e||(i[r].anim.stop(n),t=!1,i.splice(r,1));!t&&n||_.dequeue(this,e)}))},finish:function(e){return!1!==e&&(e=e||"fx"),this.each((function(){var t,n=J.get(this),o=n[e+"queue"],r=n[e+"queueHooks"],i=_.timers,a=o?o.length:0;for(n.finish=!0,_.queue(this,e,[]),r&&r.stop&&r.stop.call(this,!0),t=i.length;t--;)i[t].elem===this&&i[t].queue===e&&(i[t].anim.stop(!0),i.splice(t,1));for(t=0;t<a;t++)o[t]&&o[t].finish&&o[t].finish.call(this);delete n.finish}))}}),_.each(["toggle","show","hide"],(function(e,t){var n=_.fn[t];_.fn[t]=function(e,o,r){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(pt(t,!0),e,o,r)}})),_.each({slideDown:pt("show"),slideUp:pt("hide"),slideToggle:pt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},(function(e,t){_.fn[e]=function(e,n,o){return this.animate(t,e,n,o)}})),_.timers=[],_.fx.tick=function(){var e,t=0,n=_.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||_.fx.stop(),st=void 0},_.fx.timer=function(e){_.timers.push(e),_.fx.start()},_.fx.interval=13,_.fx.start=function(){lt||(lt=!0,ut())},_.fx.stop=function(){lt=null},_.fx.speeds={slow:600,fast:200,_default:400},_.fn.delay=function(e,t){return e=_.fx&&_.fx.speeds[e]||e,t=t||"fx",this.queue(t,(function(t,o){var r=n.setTimeout(t,e);o.stop=function(){n.clearTimeout(r)}}))},function(){var e=a.createElement("input"),t=a.createElement("select").appendChild(a.createElement("option"));e.type="checkbox",h.checkOn=""!==e.value,h.optSelected=t.selected,(e=a.createElement("input")).value="t",e.type="radio",h.radioValue="t"===e.value}();var xt,ht=_.expr.attrHandle;_.fn.extend({attr:function(e,t){return U(this,_.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each((function(){_.removeAttr(this,e)}))}}),_.extend({attr:function(e,t,n){var o,r,i=e.nodeType;if(3!==i&&8!==i&&2!==i)return void 0===e.getAttribute?_.prop(e,t,n):(1===i&&_.isXMLDoc(e)||(r=_.attrHooks[t.toLowerCase()]||(_.expr.match.bool.test(t)?xt:void 0)),void 0!==n?null===n?void _.removeAttr(e,t):r&&"set"in r&&void 0!==(o=r.set(e,n,t))?o:(e.setAttribute(t,n+""),n):r&&"get"in r&&null!==(o=r.get(e,t))?o:null==(o=_.find.attr(e,t))?void 0:o)},attrHooks:{type:{set:function(e,t){if(!h.radioValue&&"radio"===t&&N(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,o=0,r=t&&t.match(R);if(r&&1===e.nodeType)for(;n=r[o++];)e.removeAttribute(n)}}),xt={set:function(e,t,n){return!1===t?_.removeAttr(e,n):e.setAttribute(n,n),n}},_.each(_.expr.match.bool.source.match(/\w+/g),(function(e,t){var n=ht[t]||_.find.attr;ht[t]=function(e,t,o){var r,i,a=t.toLowerCase();return o||(i=ht[a],ht[a]=r,r=null!=n(e,t,o)?a:null,ht[a]=i),r}}));var gt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;function yt(e){return(e.match(R)||[]).join(" ")}function vt(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(R)||[]}_.fn.extend({prop:function(e,t){return U(this,_.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each((function(){delete this[_.propFix[e]||e]}))}}),_.extend({prop:function(e,t,n){var o,r,i=e.nodeType;if(3!==i&&8!==i&&2!==i)return 1===i&&_.isXMLDoc(e)||(t=_.propFix[t]||t,r=_.propHooks[t]),void 0!==n?r&&"set"in r&&void 0!==(o=r.set(e,n,t))?o:e[t]=n:r&&"get"in r&&null!==(o=r.get(e,t))?o:e[t]},propHooks:{tabIndex:{get:function(e){var t=_.find.attr(e,"tabindex");return t?parseInt(t,10):gt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),h.optSelected||(_.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),_.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],(function(){_.propFix[this.toLowerCase()]=this})),_.fn.extend({addClass:function(e){var t,n,o,r,i,a,s,l=0;if(g(e))return this.each((function(t){_(this).addClass(e.call(this,t,vt(this)))}));if((t=kt(e)).length)for(;n=this[l++];)if(r=vt(n),o=1===n.nodeType&&" "+yt(r)+" "){for(a=0;i=t[a++];)o.indexOf(" "+i+" ")<0&&(o+=i+" ");r!==(s=yt(o))&&n.setAttribute("class",s)}return this},removeClass:function(e){var t,n,o,r,i,a,s,l=0;if(g(e))return this.each((function(t){_(this).removeClass(e.call(this,t,vt(this)))}));if(!arguments.length)return this.attr("class","");if((t=kt(e)).length)for(;n=this[l++];)if(r=vt(n),o=1===n.nodeType&&" "+yt(r)+" "){for(a=0;i=t[a++];)for(;o.indexOf(" "+i+" ")>-1;)o=o.replace(" "+i+" "," ");r!==(s=yt(o))&&n.setAttribute("class",s)}return this},toggleClass:function(e,t){var n=typeof e,o="string"===n||Array.isArray(e);return"boolean"==typeof t&&o?t?this.addClass(e):this.removeClass(e):g(e)?this.each((function(n){_(this).toggleClass(e.call(this,n,vt(this),t),t)})):this.each((function(){var t,r,i,a;if(o)for(r=0,i=_(this),a=kt(e);t=a[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else void 0!==e&&"boolean"!==n||((t=vt(this))&&J.set(this,"__className__",t),this.setAttribute&&this.setAttribute("class",t||!1===e?"":J.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,o=0;for(t=" "+e+" ";n=this[o++];)if(1===n.nodeType&&(" "+yt(vt(n))+" ").indexOf(t)>-1)return!0;return!1}});var _t=/\r/g;_.fn.extend({val:function(e){var t,n,o,r=this[0];return arguments.length?(o=g(e),this.each((function(n){var r;1===this.nodeType&&(null==(r=o?e.call(this,n,_(this).val()):e)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=_.map(r,(function(e){return null==e?"":e+""}))),(t=_.valHooks[this.type]||_.valHooks[this.nodeName.toLowerCase()])&&"set"in t&&void 0!==t.set(this,r,"value")||(this.value=r))}))):r?(t=_.valHooks[r.type]||_.valHooks[r.nodeName.toLowerCase()])&&"get"in t&&void 0!==(n=t.get(r,"value"))?n:"string"==typeof(n=r.value)?n.replace(_t,""):null==n?"":n:void 0}}),_.extend({valHooks:{option:{get:function(e){var t=_.find.attr(e,"value");return null!=t?t:yt(_.text(e))}},select:{get:function(e){var t,n,o,r=e.options,i=e.selectedIndex,a="select-one"===e.type,s=a?null:[],l=a?i+1:r.length;for(o=i<0?l:a?i:0;o<l;o++)if(((n=r[o]).selected||o===i)&&!n.disabled&&(!n.parentNode.disabled||!N(n.parentNode,"optgroup"))){if(t=_(n).val(),a)return t;s.push(t)}return s},set:function(e,t){for(var n,o,r=e.options,i=_.makeArray(t),a=r.length;a--;)((o=r[a]).selected=_.inArray(_.valHooks.option.get(o),i)>-1)&&(n=!0);return n||(e.selectedIndex=-1),i}}}}),_.each(["radio","checkbox"],(function(){_.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=_.inArray(_(e).val(),t)>-1}},h.checkOn||(_.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})})),h.focusin="onfocusin"in n;var Ct=/^(?:focusinfocus|focusoutblur)$/,Et=function(e){e.stopPropagation()};_.extend(_.event,{trigger:function(e,t,o,r){var i,s,l,d,c,u,f,p,b=[o||a],x=m.call(e,"type")?e.type:e,h=m.call(e,"namespace")?e.namespace.split("."):[];if(s=p=l=o=o||a,3!==o.nodeType&&8!==o.nodeType&&!Ct.test(x+_.event.triggered)&&(x.indexOf(".")>-1&&(h=x.split("."),x=h.shift(),h.sort()),c=x.indexOf(":")<0&&"on"+x,(e=e[_.expando]?e:new _.Event(x,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=o),t=null==t?[e]:_.makeArray(t,[e]),f=_.event.special[x]||{},r||!f.trigger||!1!==f.trigger.apply(o,t))){if(!r&&!f.noBubble&&!w(o)){for(d=f.delegateType||x,Ct.test(d+x)||(s=s.parentNode);s;s=s.parentNode)b.push(s),l=s;l===(o.ownerDocument||a)&&b.push(l.defaultView||l.parentWindow||n)}for(i=0;(s=b[i++])&&!e.isPropagationStopped();)p=s,e.type=i>1?d:f.bindType||x,(u=(J.get(s,"events")||{})[e.type]&&J.get(s,"handle"))&&u.apply(s,t),(u=c&&s[c])&&u.apply&&Q(s)&&(e.result=u.apply(s,t),!1===e.result&&e.preventDefault());return e.type=x,r||e.isDefaultPrevented()||f._default&&!1!==f._default.apply(b.pop(),t)||!Q(o)||c&&g(o[x])&&!w(o)&&((l=o[c])&&(o[c]=null),_.event.triggered=x,e.isPropagationStopped()&&p.addEventListener(x,Et),o[x](),e.isPropagationStopped()&&p.removeEventListener(x,Et),_.event.triggered=void 0,l&&(o[c]=l)),e.result}},simulate:function(e,t,n){var o=_.extend(new _.Event,n,{type:e,isSimulated:!0});_.event.trigger(o,null,t)}}),_.fn.extend({trigger:function(e,t){return this.each((function(){_.event.trigger(e,t,this)}))},triggerHandler:function(e,t){var n=this[0];if(n)return _.event.trigger(e,t,n,!0)}}),h.focusin||_.each({focus:"focusin",blur:"focusout"},(function(e,t){var n=function(e){_.event.simulate(t,e.target,_.event.fix(e))};_.event.special[t]={setup:function(){var o=this.ownerDocument||this,r=J.access(o,t);r||o.addEventListener(e,n,!0),J.access(o,t,(r||0)+1)},teardown:function(){var o=this.ownerDocument||this,r=J.access(o,t)-1;r?J.access(o,t,r):(o.removeEventListener(e,n,!0),J.remove(o,t))}}}));var jt=n.location,Tt=Date.now(),At=/\?/;_.parseXML=function(e){var t;if(!e||"string"!=typeof e)return null;try{t=(new n.DOMParser).parseFromString(e,"text/xml")}catch(e){t=void 0}return t&&!t.getElementsByTagName("parsererror").length||_.error("Invalid XML: "+e),t};var Dt=/\[\]$/,Nt=/\r?\n/g,zt=/^(?:submit|button|image|reset|file)$/i,Ft=/^(?:input|select|textarea|keygen)/i;function Mt(e,t,n,o){var r;if(Array.isArray(t))_.each(t,(function(t,r){n||Dt.test(e)?o(e,r):Mt(e+"["+("object"==typeof r&&null!=r?t:"")+"]",r,n,o)}));else if(n||"object"!==k(t))o(e,t);else for(r in t)Mt(e+"["+r+"]",t[r],n,o)}_.param=function(e,t){var n,o=[],r=function(e,t){var n=g(t)?t():t;o[o.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!_.isPlainObject(e))_.each(e,(function(){r(this.name,this.value)}));else for(n in e)Mt(n,e[n],t,r);return o.join("&")},_.fn.extend({serialize:function(){return _.param(this.serializeArray())},serializeArray:function(){return this.map((function(){var e=_.prop(this,"elements");return e?_.makeArray(e):this})).filter((function(){var e=this.type;return this.name&&!_(this).is(":disabled")&&Ft.test(this.nodeName)&&!zt.test(e)&&(this.checked||!be.test(e))})).map((function(e,t){var n=_(this).val();return null==n?null:Array.isArray(n)?_.map(n,(function(e){return{name:t.name,value:e.replace(Nt,"\r\n")}})):{name:t.name,value:n.replace(Nt,"\r\n")}})).get()}});var St=/%20/g,It=/#.*$/,Bt=/([?&])_=[^&]*/,Ot=/^(.*?):[ \t]*([^\r\n]*)$/gm,Rt=/^(?:GET|HEAD)$/,Pt=/^\/\//,Lt={},Ht={},qt="*/".concat("*"),Wt=a.createElement("a");function $t(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var o,r=0,i=t.toLowerCase().match(R)||[];if(g(n))for(;o=i[r++];)"+"===o[0]?(o=o.slice(1)||"*",(e[o]=e[o]||[]).unshift(n)):(e[o]=e[o]||[]).push(n)}}function Ut(e,t,n,o){var r={},i=e===Ht;function a(s){var l;return r[s]=!0,_.each(e[s]||[],(function(e,s){var d=s(t,n,o);return"string"!=typeof d||i||r[d]?i?!(l=d):void 0:(t.dataTypes.unshift(d),a(d),!1)})),l}return a(t.dataTypes[0])||!r["*"]&&a("*")}function Yt(e,t){var n,o,r=_.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((r[n]?e:o||(o={}))[n]=t[n]);return o&&_.extend(!0,e,o),e}Wt.href=jt.href,_.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:jt.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(jt.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":_.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Yt(Yt(e,_.ajaxSettings),t):Yt(_.ajaxSettings,e)},ajaxPrefilter:$t(Lt),ajaxTransport:$t(Ht),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var o,r,i,s,l,d,c,u,f,p,m=_.ajaxSetup({},t),b=m.context||m,x=m.context&&(b.nodeType||b.jquery)?_(b):_.event,h=_.Deferred(),g=_.Callbacks("once memory"),w=m.statusCode||{},y={},v={},k="canceled",C={readyState:0,getResponseHeader:function(e){var t;if(c){if(!s)for(s={};t=Ot.exec(i);)s[t[1].toLowerCase()+" "]=(s[t[1].toLowerCase()+" "]||[]).concat(t[2]);t=s[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return c?i:null},setRequestHeader:function(e,t){return null==c&&(e=v[e.toLowerCase()]=v[e.toLowerCase()]||e,y[e]=t),this},overrideMimeType:function(e){return null==c&&(m.mimeType=e),this},statusCode:function(e){var t;if(e)if(c)C.always(e[C.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||k;return o&&o.abort(t),E(0,t),this}};if(h.promise(C),m.url=((e||m.url||jt.href)+"").replace(Pt,jt.protocol+"//"),m.type=t.method||t.type||m.method||m.type,m.dataTypes=(m.dataType||"*").toLowerCase().match(R)||[""],null==m.crossDomain){d=a.createElement("a");try{d.href=m.url,d.href=d.href,m.crossDomain=Wt.protocol+"//"+Wt.host!=d.protocol+"//"+d.host}catch(e){m.crossDomain=!0}}if(m.data&&m.processData&&"string"!=typeof m.data&&(m.data=_.param(m.data,m.traditional)),Ut(Lt,m,t,C),c)return C;for(f in(u=_.event&&m.global)&&0==_.active++&&_.event.trigger("ajaxStart"),m.type=m.type.toUpperCase(),m.hasContent=!Rt.test(m.type),r=m.url.replace(It,""),m.hasContent?m.data&&m.processData&&0===(m.contentType||"").indexOf("application/x-www-form-urlencoded")&&(m.data=m.data.replace(St,"+")):(p=m.url.slice(r.length),m.data&&(m.processData||"string"==typeof m.data)&&(r+=(At.test(r)?"&":"?")+m.data,delete m.data),!1===m.cache&&(r=r.replace(Bt,"$1"),p=(At.test(r)?"&":"?")+"_="+Tt+++p),m.url=r+p),m.ifModified&&(_.lastModified[r]&&C.setRequestHeader("If-Modified-Since",_.lastModified[r]),_.etag[r]&&C.setRequestHeader("If-None-Match",_.etag[r])),(m.data&&m.hasContent&&!1!==m.contentType||t.contentType)&&C.setRequestHeader("Content-Type",m.contentType),C.setRequestHeader("Accept",m.dataTypes[0]&&m.accepts[m.dataTypes[0]]?m.accepts[m.dataTypes[0]]+("*"!==m.dataTypes[0]?", "+qt+"; q=0.01":""):m.accepts["*"]),m.headers)C.setRequestHeader(f,m.headers[f]);if(m.beforeSend&&(!1===m.beforeSend.call(b,C,m)||c))return C.abort();if(k="abort",g.add(m.complete),C.done(m.success),C.fail(m.error),o=Ut(Ht,m,t,C)){if(C.readyState=1,u&&x.trigger("ajaxSend",[C,m]),c)return C;m.async&&m.timeout>0&&(l=n.setTimeout((function(){C.abort("timeout")}),m.timeout));try{c=!1,o.send(y,E)}catch(e){if(c)throw e;E(-1,e)}}else E(-1,"No Transport");function E(e,t,a,s){var d,f,p,y,v,k=t;c||(c=!0,l&&n.clearTimeout(l),o=void 0,i=s||"",C.readyState=e>0?4:0,d=e>=200&&e<300||304===e,a&&(y=function(e,t,n){for(var o,r,i,a,s=e.contents,l=e.dataTypes;"*"===l[0];)l.shift(),void 0===o&&(o=e.mimeType||t.getResponseHeader("Content-Type"));if(o)for(r in s)if(s[r]&&s[r].test(o)){l.unshift(r);break}if(l[0]in n)i=l[0];else{for(r in n){if(!l[0]||e.converters[r+" "+l[0]]){i=r;break}a||(a=r)}i=i||a}if(i)return i!==l[0]&&l.unshift(i),n[i]}(m,C,a)),y=function(e,t,n,o){var r,i,a,s,l,d={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)d[a.toLowerCase()]=e.converters[a];for(i=c.shift();i;)if(e.responseFields[i]&&(n[e.responseFields[i]]=t),!l&&o&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),l=i,i=c.shift())if("*"===i)i=l;else if("*"!==l&&l!==i){if(!(a=d[l+" "+i]||d["* "+i]))for(r in d)if((s=r.split(" "))[1]===i&&(a=d[l+" "+s[0]]||d["* "+s[0]])){!0===a?a=d[r]:!0!==d[r]&&(i=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e.throws)t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+l+" to "+i}}}return{state:"success",data:t}}(m,y,C,d),d?(m.ifModified&&((v=C.getResponseHeader("Last-Modified"))&&(_.lastModified[r]=v),(v=C.getResponseHeader("etag"))&&(_.etag[r]=v)),204===e||"HEAD"===m.type?k="nocontent":304===e?k="notmodified":(k=y.state,f=y.data,d=!(p=y.error))):(p=k,!e&&k||(k="error",e<0&&(e=0))),C.status=e,C.statusText=(t||k)+"",d?h.resolveWith(b,[f,k,C]):h.rejectWith(b,[C,k,p]),C.statusCode(w),w=void 0,u&&x.trigger(d?"ajaxSuccess":"ajaxError",[C,m,d?f:p]),g.fireWith(b,[C,k]),u&&(x.trigger("ajaxComplete",[C,m]),--_.active||_.event.trigger("ajaxStop")))}return C},getJSON:function(e,t,n){return _.get(e,t,n,"json")},getScript:function(e,t){return _.get(e,void 0,t,"script")}}),_.each(["get","post"],(function(e,t){_[t]=function(e,n,o,r){return g(n)&&(r=r||o,o=n,n=void 0),_.ajax(_.extend({url:e,type:t,dataType:r,data:n,success:o},_.isPlainObject(e)&&e))}})),_._evalUrl=function(e,t){return _.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){_.globalEval(e,t)}})},_.fn.extend({wrapAll:function(e){var t;return this[0]&&(g(e)&&(e=e.call(this[0])),t=_(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map((function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e})).append(this)),this},wrapInner:function(e){return g(e)?this.each((function(t){_(this).wrapInner(e.call(this,t))})):this.each((function(){var t=_(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)}))},wrap:function(e){var t=g(e);return this.each((function(n){_(this).wrapAll(t?e.call(this,n):e)}))},unwrap:function(e){return this.parent(e).not("body").each((function(){_(this).replaceWith(this.childNodes)})),this}}),_.expr.pseudos.hidden=function(e){return!_.expr.pseudos.visible(e)},_.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},_.ajaxSettings.xhr=function(){try{return new n.XMLHttpRequest}catch(e){}};var Gt={0:200,1223:204},Xt=_.ajaxSettings.xhr();h.cors=!!Xt&&"withCredentials"in Xt,h.ajax=Xt=!!Xt,_.ajaxTransport((function(e){var t,o;if(h.cors||Xt&&!e.crossDomain)return{send:function(r,i){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];for(a in e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest"),r)s.setRequestHeader(a,r[a]);t=function(e){return function(){t&&(t=o=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===e?s.abort():"error"===e?"number"!=typeof s.status?i(0,"error"):i(s.status,s.statusText):i(Gt[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=t(),o=s.onerror=s.ontimeout=t("error"),void 0!==s.onabort?s.onabort=o:s.onreadystatechange=function(){4===s.readyState&&n.setTimeout((function(){t&&o()}))},t=t("abort");try{s.send(e.hasContent&&e.data||null)}catch(e){if(t)throw e}},abort:function(){t&&t()}}})),_.ajaxPrefilter((function(e){e.crossDomain&&(e.contents.script=!1)})),_.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return _.globalEval(e),e}}}),_.ajaxPrefilter("script",(function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")})),_.ajaxTransport("script",(function(e){var t,n;if(e.crossDomain||e.scriptAttrs)return{send:function(o,r){t=_("<script>").attr(e.scriptAttrs||{}).prop({charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&r("error"===e.type?404:200,e.type)}),a.head.appendChild(t[0])},abort:function(){n&&n()}}}));var Vt,Qt=[],Kt=/(=)\?(?=&|$)|\?\?/;_.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Qt.pop()||_.expando+"_"+Tt++;return this[e]=!0,e}}),_.ajaxPrefilter("json jsonp",(function(e,t,o){var r,i,a,s=!1!==e.jsonp&&(Kt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Kt.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=g(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Kt,"$1"+r):!1!==e.jsonp&&(e.url+=(At.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||_.error(r+" was not called"),a[0]},e.dataTypes[0]="json",i=n[r],n[r]=function(){a=arguments},o.always((function(){void 0===i?_(n).removeProp(r):n[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Qt.push(r)),a&&g(i)&&i(a[0]),a=i=void 0})),"script"})),h.createHTMLDocument=((Vt=a.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Vt.childNodes.length),_.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(h.createHTMLDocument?((o=(t=a.implementation.createHTMLDocument("")).createElement("base")).href=a.location.href,t.head.appendChild(o)):t=a),i=!n&&[],(r=z.exec(e))?[t.createElement(r[1])]:(r=Ce([e],t,i),i&&i.length&&_(i).remove(),_.merge([],r.childNodes)));var o,r,i},_.fn.load=function(e,t,n){var o,r,i,a=this,s=e.indexOf(" ");return s>-1&&(o=yt(e.slice(s)),e=e.slice(0,s)),g(t)?(n=t,t=void 0):t&&"object"==typeof t&&(r="POST"),a.length>0&&_.ajax({url:e,type:r||"GET",dataType:"html",data:t}).done((function(e){i=arguments,a.html(o?_("<div>").append(_.parseHTML(e)).find(o):e)})).always(n&&function(e,t){a.each((function(){n.apply(this,i||[e.responseText,t,e])}))}),this},_.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],(function(e,t){_.fn[t]=function(e){return this.on(t,e)}})),_.expr.pseudos.animated=function(e){return _.grep(_.timers,(function(t){return e===t.elem})).length},_.offset={setOffset:function(e,t,n){var o,r,i,a,s,l,d=_.css(e,"position"),c=_(e),u={};"static"===d&&(e.style.position="relative"),s=c.offset(),i=_.css(e,"top"),l=_.css(e,"left"),("absolute"===d||"fixed"===d)&&(i+l).indexOf("auto")>-1?(a=(o=c.position()).top,r=o.left):(a=parseFloat(i)||0,r=parseFloat(l)||0),g(t)&&(t=t.call(e,n,_.extend({},s))),null!=t.top&&(u.top=t.top-s.top+a),null!=t.left&&(u.left=t.left-s.left+r),"using"in t?t.using.call(e,u):c.css(u)}},_.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each((function(t){_.offset.setOffset(this,e,t)}));var t,n,o=this[0];return o?o.getClientRects().length?(t=o.getBoundingClientRect(),n=o.ownerDocument.defaultView,{top:t.top+n.pageYOffset,left:t.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,o=this[0],r={top:0,left:0};if("fixed"===_.css(o,"position"))t=o.getBoundingClientRect();else{for(t=this.offset(),n=o.ownerDocument,e=o.offsetParent||n.documentElement;e&&(e===n.body||e===n.documentElement)&&"static"===_.css(e,"position");)e=e.parentNode;e&&e!==o&&1===e.nodeType&&((r=_(e).offset()).top+=_.css(e,"borderTopWidth",!0),r.left+=_.css(e,"borderLeftWidth",!0))}return{top:t.top-r.top-_.css(o,"marginTop",!0),left:t.left-r.left-_.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map((function(){for(var e=this.offsetParent;e&&"static"===_.css(e,"position");)e=e.offsetParent;return e||ae}))}}),_.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},(function(e,t){var n="pageYOffset"===t;_.fn[e]=function(o){return U(this,(function(e,o,r){var i;if(w(e)?i=e:9===e.nodeType&&(i=e.defaultView),void 0===r)return i?i[t]:e[o];i?i.scrollTo(n?i.pageXOffset:r,n?r:i.pageYOffset):e[o]=r}),e,o,arguments.length)}})),_.each(["top","left"],(function(e,t){_.cssHooks[t]=Xe(h.pixelPosition,(function(e,n){if(n)return n=Ge(e,t),$e.test(n)?_(e).position()[t]+"px":n}))})),_.each({Height:"height",Width:"width"},(function(e,t){_.each({padding:"inner"+e,content:t,"":"outer"+e},(function(n,o){_.fn[o]=function(r,i){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(!0===r||!0===i?"margin":"border");return U(this,(function(t,n,r){var i;return w(t)?0===o.indexOf("outer")?t["inner"+e]:t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===r?_.css(t,n,s):_.style(t,n,r,s)}),t,a?r:void 0,a)}}))})),_.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),(function(e,t){_.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}})),_.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)}}),_.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,o){return this.on(t,e,n,o)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}}),_.proxy=function(e,t){var n,o,r;if("string"==typeof t&&(n=e[t],t=e,e=n),g(e))return o=l.call(arguments,2),(r=function(){return e.apply(t||this,o.concat(l.call(arguments)))}).guid=e.guid=e.guid||_.guid++,r},_.holdReady=function(e){e?_.readyWait++:_.ready(!0)},_.isArray=Array.isArray,_.parseJSON=JSON.parse,_.nodeName=N,_.isFunction=g,_.isWindow=w,_.camelCase=V,_.type=k,_.now=Date.now,_.isNumeric=function(e){var t=_.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},void 0===(o=function(){return _}.apply(t,[]))||(e.exports=o);var Jt=n.jQuery,Zt=n.$;return _.noConflict=function(e){return n.$===_&&(n.$=Zt),e&&n.jQuery===_&&(n.jQuery=Jt),_},r||(n.jQuery=n.$=_),_}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={CALENDAR:"js-calendar",BTN_PREV_MONTH:"js-calendar__btn-prev-month",BTN_NEXT_MONTH:"js-calendar__btn-next-month",DRAWN_DATE:"js-calendar__drawn-date",DAYS_CONTAINER:"js-calendar__days-container",DAY_WEEK:"js-calendar__day-week",DAY_WEEK_ANOTHER_MONTH:"js-calendar__day-week_theme_another-month",RANGE_DAY:"calendar__day-week_theme_range-day",RANGE_DAY_START:"calendar__day-week_range-day-start",RANGE_DAY_END:"calendar__day-week_range-day-end",RANGE_DAY_MIDDLE:"calendar__day-week_theme_range-day-middle",BTN_APPLY:"js-calendar__btn-apply",BTN_CLEAR:"js-calendar__btn-clear"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(3),i=n(6),a=["Январь","Февраль","Март","Апрель","Май","Июнь","Июль","Август","Сентябрь","Октябрь","Ноябрь","Декабрь"],s=function(e){var t=e.attr("data-date");return i.isCorrectDateStr(t)?i.parseDateString(t):new Date};t.getRenderedDate=s;var l=function(e,t){return new Date(t,e+1,0).getDate()},d=function(e,t){var n;void 0===t&&(t=!0);var o=document.createElement("div");o.innerHTML=String(e);var r=["calendar__day-week","js-calendar__day-week"];return t||r.push.apply(r,["calendar__day-week_theme_another-month","js-calendar__day-week_theme_another-month"]),(n=o.classList).add.apply(n,r),o};t.updateCalendar=function(e,t){e.attr("data-date",i.dateToString(t)),function(e,t){var n=a[t.getMonth()]+" "+t.getFullYear();e.find("."+r.default.DRAWN_DATE).text(n)}(e,t);var n=function(e){var t=document.createDocumentFragment(),n=l(e.getMonth(),e.getFullYear()),o=l(e.getMonth()-1,e.getFullYear()),r=new Date(e.getFullYear(),e.getMonth(),1),i=(r.getDay()||7)-1;r.setDate(n);for(var a=(r.getDay()||7)-1,s=o-i+1;s<=o;s+=1)t.appendChild(d(s,!1));for(s=1;s<=n;s+=1)t.appendChild(d(s));if(a<6){s=a+1;for(var c=1;s<=6;s+=1,c+=1)t.appendChild(d(c,!1))}return t}(t);!function(e,t){var n=new Date;if(n.getMonth()===t.getMonth()&&n.getFullYear()===t.getFullYear()){var o=n.getDate()-1;e.querySelectorAll(".calendar__day-week:not(.calendar__day-week_theme_another-month)")[o].classList.add("calendar__day-week_theme_today")}}(n,t),e.find("."+r.default.DAYS_CONTAINER).html("").append(n)};t.redrawRange=function(e){!function(e){e.find("."+r.default.DAY_WEEK).removeClass([r.default.RANGE_DAY,r.default.RANGE_DAY_MIDDLE,r.default.RANGE_DAY_START,r.default.RANGE_DAY_END])}(e),function(e){var t=s(e),n=i.getStartAndEndRange(e),a=n.start,l=void 0===a?null:a,d=n.end,c=void 0===d?null:d,u=null===l,f=null===c;if(f&&u)return!0;if(i.xor(f,u)){var p=l;return u&&(p=c),p.getMonth()===t.getMonth()&&p.getFullYear()===t.getFullYear()&&e.find("."+r.default.DAY_WEEK+":not(."+r.default.DAY_WEEK_ANOTHER_MONTH+")").each((function(){var e=o(this);parseInt(e.text(),10)===p.getDate()&&e.addClass(r.default.RANGE_DAY)})),!0}var m=l.getMonth()===t.getMonth()&&l.getFullYear()===t.getFullYear(),b=c.getMonth()===t.getMonth()&&c.getFullYear()===t.getFullYear(),x=l.getFullYear()<=t.getFullYear()&&l.getMonth()<=t.getMonth()&&c.getFullYear()>=t.getFullYear()&&c.getMonth()>=t.getMonth();!(m||x||b)||e.find("."+r.default.DAY_WEEK+":not(."+r.default.DAY_WEEK_ANOTHER_MONTH+")").each((function(){var e=o(this),t=parseInt(e.text(),10);m&&t===l.getDate()&&e.addClass([r.default.RANGE_DAY,r.default.RANGE_DAY_START]),b&&t===c.getDate()&&e.addClass([r.default.RANGE_DAY,r.default.RANGE_DAY_END]),x&&(!m||t>l.getDate())&&(!b||t<c.getDate())&&e.addClass(r.default.RANGE_DAY_MIDDLE)}))}(e)}},function(e,t,n){"use strict";e.exports=function(e,t){return t||(t={}),"string"!=typeof(e=e&&e.__esModule?e.default:e)?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e)}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){return/\d{1,2}\.\d{1,2}\.\d{4}/i.test(e)};t.isCorrectDateStr=o;t.dateToString=function(e){return e.getDate()+"."+(e.getMonth()+1)+"."+e.getFullYear()};var r=function(e){var t=e.split(".").map((function(e){return parseInt(e,10)})),n=t[0],o=t[1],r=t[2];return new Date(r,o-1,n)};t.parseDateString=r;t.getStartAndEndRange=function(e){var t=e.attr("data-range-start"),n=e.attr("data-range-end"),i=null,a=null;return o(t)&&(i=r(t)),o(n)&&(a=r(n)),{start:i,end:a}};t.xor=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(e.length<2)throw new TypeError("Expected at least 2 parameters");var n=!1;return e.reduce((function(e,t){return e!==t&&(n=!0),!1})),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={BTN_INTER:"js-dropdown-guest__btn-apply",BTN_CLEAR:"js-dropdown-guest__btn-clear",BTN_PLUS:"js-dropdown-counter__btn-plus",BTN_MINUS:"js-dropdown-counter__btn-minus",HEAD:"js-dropdown-head",COUNTER:"js-dropdown-counter",DROPDOWN:"js-dropdown-guest"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={DATE_RANGE:"js-date-range",DROPDOWN_HEAD:"js-date-range__dropdown-head",DROPDOWN_HEAD_LEFT:"js-date-range__dropdown-head-left",DROPDOWN_HEAD_RIGHT:"js-date-range__dropdown-head-right",RANGE_SELECT:"date-range_range-select",CALENDAR:"js-calendar"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.getCounterValues=function(e){return e.dropdown("counters")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){var t=e%10,n=e%100,o=0;return 1===t&&(n>20||1===e)&&(o=0),t>=2&&t<=4&&(o=1),(t>=5&&t<=9||0===t||n>=11&&n<=20)&&(o=2),o};t.getIndexGraduation=o;t.createGuestText=function(e,t){var n=[];if(e>0){var r=["ь","я","ей"],i=o(e);n.push(e+" гост"+r[i])}if(t>0){r=["ец","ца","цев"],i=o(t);n.push(t+" младен"+r[i])}return n.join(", ")};t.groupingElementValues=function(e){var t=0,n=0,o=0;return e.forEach((function(e){var r=e.text.toLowerCase();"взрослые"===r||"дети"===r?n+=e.value:o+=e.value,t+=e.value})),{allGuests:t,adults:n,babies:o}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={LIKE_BTN:"js-like-button",CHECKED:"like-button_checked",ICON:"js-like-button__icon",COUNTER:"js-like-button__counter"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={SLIDER:"js-range-slider",LINE:"js-range-slider__line",POINT:"js-range-slider__point",BG_LINE:"js-range-slider__bg-line",VALUES:"js-range-slider__head-value"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(14);o.fn.button=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o="button_disable",r="button_hidden";t.default=function(e,t){switch(void 0===t&&(t=null),e){case"disable":null===t?this.toggleClass(o):this.toggleClass(o,t);break;case"hidden":null===t?this.toggleClass(r):this.toggleClass(r,t);break;default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(3),i=n(4);o("."+r.default.CALENDAR).on("click.calendar.change-month","."+r.default.BTN_PREV_MONTH+", ."+r.default.BTN_NEXT_MONTH,(function(e){var t=o(e.delegateTarget),n=o(e.target),a=i.getRenderedDate(t),s=a.getMonth();n.hasClass(r.default.BTN_PREV_MONTH)&&a.setMonth(s-1),n.hasClass(r.default.BTN_NEXT_MONTH)&&a.setMonth(s+1),i.updateCalendar(t,a),i.redrawRange(t)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(17);o.fn.calendar=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(e,t){switch(void 0===t&&(t=null),e){case"select-date":if(null===t)throw new Error("expected parameter of type 'start' | 'end'");return this.attr("data-select-date",t),this;default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(3),i=n(4),a=n(6),s=function(e){var t=o(e.delegateTarget),n=o(e.currentTarget),s=i.getRenderedDate(t),l=function(e,t){var n=new Date(t.getFullYear(),t.getMonth()),o=parseInt(e.text(),10);if(e.hasClass(r.default.DAY_WEEK_ANOTHER_MONTH)){var i=n.getMonth();o<7?i+=1:i-=1,n.setMonth(i)}return n.setDate(o),n}(n,s);l.getMonth()!==s.getMonth()&&i.updateCalendar(t,l);var d=a.getStartAndEndRange(t),c=d.start,u=void 0===c?null:c,f=d.end,p=void 0===f?null:f,m=t.attr("data-select-date")||"start";return function(e){var t=e.targetDate,n=e.rangeStart,o=void 0===n?null:n,r=e.rangeEnd,i=void 0===r?null:r,s=e.selectDate,l=void 0===s?"start":s;if(t<new Date)return!1;var d=null===i,c=null===o;return!(!c||!d)||(!!a.xor(d,c)||("start"===l&&!d&&t<i||"end"===l&&!c&&t>o))}({targetDate:l,rangeStart:u,rangeEnd:p,selectDate:m})&&(t.attr("data-range-"+m,a.dateToString(l)),i.redrawRange(t)),!0};o("."+r.default.CALENDAR).each((function(){o(this).on("click.calendar.select-date","."+r.default.DAY_WEEK,s)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(3),i=n(6);o("."+r.default.CALENDAR).on("click.calendar.apply","."+r.default.BTN_APPLY,(function(e){var t=o(e.delegateTarget),n=i.getStartAndEndRange(t),r=n.start,a=void 0===r?null:r,s=n.end,l=void 0===s?null:s;t.trigger("apply",[a,l])}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(3),i=n(4);o("."+r.default.CALENDAR).on("click.calendar.clear","."+r.default.BTN_CLEAR,(function(e){var t=o(e.delegateTarget);t.attr("data-range-start",""),t.attr("data-range-end",""),i.redrawRange(t),t.trigger("clear")}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(8);o("."+r.default.DATE_RANGE).on("click.date-range.select-date-range","."+r.default.DROPDOWN_HEAD,(function(e){var t=o(e.delegateTarget),n=o(e.currentTarget);if(n.dropdownHead("select-date"))t.removeClass(r.default.RANGE_SELECT),n.dropdownHead("select-date",!1);else{t.addClass(r.default.RANGE_SELECT),t.find("."+r.default.DROPDOWN_HEAD).dropdownHead("select-date",!1),n.dropdownHead("select-date",!0);var i=n.hasClass(r.default.DROPDOWN_HEAD_LEFT)?"start":"end";t.find("."+r.default.CALENDAR).calendar("select-date",i)}return!0}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.dateToString=function(e){return("0"+String(e.getDate())).slice(-2)+"."+("0"+String(e.getMonth()+1)).slice(-2)+"."+e.getFullYear()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(24);o.fn.dropdownCounter=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o="js-dropdown-counter__value",r="js-dropdown-counter__label",i="js-dropdown-counter__btn-minus";t.default=function(e,t){switch(void 0===t&&(t=null),e){case"reset":this.find("."+o).text("0"),this.find("."+i).button("disable",!0);break;case"value":if(null===t){var n=this.find("."+o).text();try{return parseInt(n,10)}catch(e){return console.error(e),0}}this.find(o).text(String(t));break;case"text":if(null===t)return this.find("."+r).text();break;default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(7),i=n(9),a=n(10);o("."+r.default.DROPDOWN).on("click.dropdown-guest.update-guest","."+r.default.BTN_INTER,(function(e){var t=o(e.delegateTarget),n=i.getCounterValues(t),s=a.groupingElementValues(n),l=s.allGuests,d=s.adults,c=s.babies;if(0===l)t.find("."+r.default.HEAD).dropdownHead("value","Сколько гостей");else{var u=a.createGuestText(d,c);t.find("."+r.default.HEAD).dropdownHead("value",u)}t.dropdown("expand",!1)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(7);o("."+r.default.DROPDOWN).on("click.dropdown-guest.clear-guest","."+r.default.BTN_CLEAR,(function(e){var t=o(e.delegateTarget);t.find("."+r.default.COUNTER).dropdownCounter("reset"),o(e.currentTarget).button("hidden",!0),t.find("."+r.default.HEAD).dropdownHead("value","Сколько гостей"),t.dropdown("expand",!1)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(28);o.fn.dropdownHead=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o="js-dropdown-head__text";t.default=function(e,t){switch(void 0===t&&(t=null),e){case"set-theme":return this.addClass("dropdown-head_theme_"+t),this;case"remove-theme":return this.removeClass("dropdown-head_theme_"+t),this;case"value":return null===t?this.find("."+o).text():(this.find("."+o).text(t),this);case"select-date":return null===t?this.hasClass("dropdown-head_theme_select-date"):(this.toggleClass("dropdown-head_theme_select-date",t),this);default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={"спальни":["спальня","спальни","спален"],"кровати":["кровать","кровати","кроватей"],"ванные комнаты":["ванная комната","ванные комнаты","ванныx комнат"]}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={EXPANDED:"dropdown_expanded",HEAD:"js-dropdown-head",COUNTER:"js-dropdown-counter"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(32);o.fn.dropdown=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(30);t.default=function(e,t){switch(void 0===t&&(t=null),e){case"expand":if(null===t)return this.hasClass(r.default.EXPANDED);if("boolean"!=typeof t)throw new TypeError("Expected boolean.");this.toggleClass(r.default.EXPANDED,t),t?this.find("."+r.default.HEAD).dropdownHead("set-theme","expanded"):this.find("."+r.default.HEAD).dropdownHead("remove-theme","expanded");break;case"counters":if(null===t){var n=[];return this.find("."+r.default.COUNTER).each((function(){var e=o(this);n.push({text:e.dropdownCounter("text"),value:e.dropdownCounter("value")})})),n}break;default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={SLIDER:"js-image-slider",IMAGE:"image-slider__image",IMAGE_SELECTED:"image-slider__image_selected",ITEM:"js-image-slider__item",ITEM_SELECTED:"image-slider__item_theme_selected",NAV_BTN:"js-image-slider__nav-button",BTN_PREV:"js-image-slider__nav-button-prev",BTN_NEXT:"js-image-slider__nav-button-next",INDEX_ITEM:"js-image-slider__image_index-item"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(33);o("."+r.default.SLIDER).on("click.image-slider.change-image","."+r.default.NAV_BTN,(function(e){var t=o(e.delegateTarget),n=o(e.currentTarget),i=function(e){if(0===e.length)return-1;try{return parseInt(e,10)}catch(e){return console.error(e),-1}}(t.attr("data-selected-image"));if(-1===i)return!1;var a=t.find("."+r.default.IMAGE),s=t.find("."+r.default.ITEM);return a.eq(i).removeClass(r.default.IMAGE_SELECTED),s.eq(i).removeClass(r.default.ITEM_SELECTED),n.hasClass(r.default.BTN_PREV)?(i-=1)<0&&(i=a.length-1):(i+=1)>a.length-1&&(i=0),t.find("."+r.default.INDEX_ITEM).text(i),t.attr("data-selected-image",i),a.eq(i).addClass(r.default.IMAGE_SELECTED),s.eq(i).addClass(r.default.ITEM_SELECTED),!0}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(36);o.fn.likeButton=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(11);t.default=function(e,t){switch(void 0===t&&(t=null),e){case"checked":if(null===t)return this.hasClass(o.default.CHECKED);if("boolean"!=typeof t)throw new TypeError("Expected boolean type parameter.");return this.toggleClass(o.default.CHECKED,t),this.find("."+o.default.ICON).text(t?"favorite":"favorite_border"),this;case"likes":if(null===t){var n=this.find("."+o.default.COUNTER).text();return parseInt(n,10)}if("number"!=typeof t)throw new TypeError("Expected number parameter.");return this.find("."+o.default.COUNTER).text(t),this;default:throw new Error("Unknown command '"+e+"'")}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={MENU_ITEM:"js-menu-item-expandable",BTN_EXPAND:"js-menu-item-expandable__btn-expand",EXPANDED:"menu-item-expandable_expanded"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(37);o("."+r.default.MENU_ITEM).on("click.menu-item-expandable.expand",(function(e){o(e.delegateTarget).toggleClass(r.default.EXPANDED)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e){var t=e.range,n=e.step;this._stepSize=n;var o=t[0],r=t[1];this._rangeMin=o,this._range=r-o,this._steps=Math.floor(this._range/n),this._callback=null,this._pointMinStep=0,this._pointMaxStep=this._steps}return e.prototype.update=function(e,t){null===t?this.updatePointSteps(e):this.updatePointStep(e,t),this.toggleUpdateEvent()},e.prototype.onUpdate=function(e){this._callback=e},e.prototype.initModel=function(e){var t=e[0],n=e[1];this._pointMinStep=this.valueToPointStep(t),this._pointMaxStep=this.valueToPointStep(n),this.toggleUpdateEvent()},e.prototype.updatePointSteps=function(e){var t=this.positionToStep(e),n=this.stepToPointPosition(this._pointMinStep),o=this.stepToPointPosition(this._pointMaxStep),r=Math.abs(n-e),i=Math.abs(o-e);r<i?t<=this._pointMaxStep&&(this._pointMinStep=t):i<r?t>=this._pointMinStep&&(this._pointMaxStep=t):i===r&&(e<n?this._pointMinStep=t:e>o&&(this._pointMaxStep=t))},e.prototype.updatePointStep=function(e,t){var n=this.positionToStep(e);"min"===t&&n<=this._pointMaxStep&&(this._pointMinStep=n),"max"===t&&n>=this._pointMinStep&&(this._pointMaxStep=n)},e.prototype.toggleUpdateEvent=function(){if(null!==this._callback){var e=[this.stepToPointPosition(this._pointMinStep),this.stepToPointPosition(this._pointMaxStep)],t=this.getValuesStr();this._callback(e,t)}},e.prototype.getValuesStr=function(){var e=this.stepToValue(this._pointMinStep),t=this.stepToValue(this._pointMaxStep);return this.divideNumberByDigits(e)+"₽ - "+this.divideNumberByDigits(t)+"₽"},e.prototype.divideNumberByDigits=function(e){var t=String(e);if(t.length<=3)return t;for(var n=t.split("").reverse(),o=0,r=[];o+3<=n.length;)r.push.apply(r,n.slice(o,o+3)),r.push(" "),o+=3;return r.push.apply(r,n.slice(o)),r.push(" "),r.reverse().join("")},e.prototype.valueToPointStep=function(e){return Math.round(e/this._stepSize)},e.prototype.stepToPointPosition=function(e){return e/this._steps},e.prototype.stepToValue=function(e){return e*this._stepSize+this._rangeMin},e.prototype.positionToStep=function(e){return Math.round(e*this._steps)},e}();t.default=o},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(12),i=function(){function e(e,t){this._$slider=e,this._$line=e.find("."+r.default.LINE),this._$bgLine=e.find("."+r.default.BG_LINE),this._$values=e.find("."+r.default.VALUES),this._$point1=o(e.find("."+r.default.POINT).get()[0]),this._$point2=o(e.find("."+r.default.POINT).get()[1]),this._$document=o(document),this._model=t,this._lineBorderWidth=parseInt(this._$line.css("border-left-width")||"0",10),this._pointSelectedType=null,this._$point1.css("z-index",5),this._$point2.css("z-index",6),t.onUpdate(this.update.bind(this)),this.setSliderEventHandlers(),this.initModel()}return e.prototype.initModel=function(){var e=[parseInt(this._$slider.attr("data-start-min")||"0",10),parseInt(this._$slider.attr("data-start-max")||"1000",10)];this._model.initModel(e)},e.prototype.setSliderEventHandlers=function(){this._$line.on("mousedown.rangeSlider.update",this.sliderMouseDownHandler.bind(this))},e.prototype.updateModel=function(e){this._model.update(this.getTargetPosition(e),this._pointSelectedType)},e.prototype.sliderMouseDownHandler=function(e){var t=this,n=o(e.target);n.hasClass(r.default.POINT)?(this._pointSelectedType="min"===n.attr("data-type")?"min":"max","max"===this._pointSelectedType?this._$point2.css("z-index",6):this._$point2.css("z-index",4),this._$document.on("mousemove.rangeSlider.update",this.pointMouseMoveHandler.bind(this)).one("mouseup.rangeSlider.offUpdate",(function(){t._$document.off("mousemove.rangeSlider.update")}))):(this._pointSelectedType=null,this.updateModel(e))},e.prototype.pointMouseMoveHandler=function(e){this.updateModel(e)},e.prototype.update=function(e,t){var n=e[0],o=e[1];this.setPointPosition(this._$point1,n),this.setPointPosition(this._$point2,o),this.updateBgLine(e),this._$values.text(t)},e.prototype.setPointPosition=function(e,t){var n=t*this._$line.innerWidth()-e.outerWidth(!1)/2;e.css("left",n+"px")},e.prototype.getPointPosition=function(e){var t=this._$line.innerWidth(),n=e.outerWidth(!1)/2,o=parseInt(e.css("left")||"-8",10);return(Math.abs(o)+n)/t},e.prototype.updateBgLine=function(e){var t=this._$line.innerWidth(),n=e[0]*t,o=t-t*e[1];this._$bgLine.css("left",n+"px").css("right",o+"px")},e.prototype.getTargetPosition=function(e){var t=this._$line.innerWidth(),n=this._$line.offset().left+this._lineBorderWidth,o=(e.pageX-n)/t;return o>1?1:o<0?0:o},e}();t.default=i},function(e,t,n){"use strict";n.r(t),t.default=n.p+"images/banners/login-registration.png"},function(e,t,n){var o=function(e){e.keys().forEach(e)};n(43),o(n(82)),o(n(97)),o(n(242))},function(e,t,n){var o=n(44);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){t=e.exports=n(0)(!1);var o=n(5),r=n(45),i=n(46),a=n(47),s=n(48),l=n(49),d=n(50),c=n(51),u=n(52),f=n(53),p=n(54),m=n(55),b=n(56),x=n(57),h=n(58),g=n(59),w=n(60),y=n(61),v=n(62),k=n(63),_=n(64),C=n(65),E=n(66),j=n(67),T=n(68),A=n(69),D=n(70),N=n(71),z=n(72),F=n(73),M=n(74),S=n(75),I=n(76),B=n(77),O=n(78),R=n(79),P=n(80),L=o(r),H=o(i),q=o(a),W=o(s),$=o(l),U=o(d),Y=o(c),G=o(u),X=o(f),V=o(p),Q=o(m),K=o(b),J=o(x),Z=o(h),ee=o(g),te=o(w),ne=o(y),oe=o(v),re=o(k),ie=o(_),ae=o(C),se=o(E),le=o(j),de=o(T),ce=o(A),ue=o(D),fe=o(N),pe=o(z),me=o(F),be=o(M),xe=o(S),he=o(I),ge=o(B),we=o(O),ye=o(R),ve=o(P);t.push([e.i,"@font-face{font-family:\"Font Awesome 5 Brands\";font-family:'Font Awesome 5 Brands';src:url("+L+');src:local("☺"),url('+H+') format("woff"),url('+q+') format("truetype"),url('+W+') format("svg");font-weight:normal;font-style:normal}@font-face{font-family:"Montserrat";src:url('+$+");src:url("+U+') format("woff"),url('+Y+') format("truetype"),url('+G+') format("svg");font-weight:bold;font-style:normal}@font-face{font-family:"Montserrat";src:url('+X+");src:url("+V+') format("woff"),url('+Q+') format("truetype"),url('+K+') format("svg");font-weight:900;font-style:normal}@font-face{font-family:"Montserrat";src:url('+J+");src:url("+Z+') format("woff"),url('+ee+') format("truetype"),url('+te+') format("svg");font-weight:900;font-style:italic}@font-face{font-family:"Montserrat";src:url('+ne+");src:url("+oe+') format("woff"),url('+re+') format("truetype"),url('+ie+') format("svg");font-weight:normal;font-style:normal}@font-face{font-family:"Quicksand";src:url('+ae+");src:url("+se+') format("woff"),url('+le+') format("truetype"),url('+de+') format("svg");font-weight:bold;font-style:normal}@font-face{font-family:"Quicksand";src:url('+ce+");src:url("+ue+') format("woff"),url('+fe+') format("truetype"),url('+pe+') format("svg");font-weight:300;font-style:normal}@font-face{font-family:"Quicksand";src:url('+me+");src:url("+be+') format("woff"),url('+xe+') format("truetype"),url('+he+') format("svg");font-weight:normal;font-style:normal}@font-face{font-family:"Material Icons";src:url('+ge+");src:url("+we+') format("woff"),url('+ye+') format("truetype"),url('+ve+') format("svg");font-weight:normal;font-style:normal}\n',""])},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Font Awesome 5 Brands-Regular-400.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Font Awesome 5 Brands-Regular-400.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Font Awesome 5 Brands-Regular-400.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Font Awesome 5 Brands-Regular-400.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Bold.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Bold.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Bold.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Bold.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBold.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBold.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBold.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBold.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBoldItalic.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBoldItalic.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBoldItalic.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-ExtraBoldItalic.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Regular.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Regular.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Regular.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Montserrat-Regular.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Bold.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Bold.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Bold.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Bold.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Light.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Light.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Light.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Light.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Regular.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Regular.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Regular.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/Quicksand-Regular.svg"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/MaterialIcons-Regular.eot"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/MaterialIcons-Regular.woff"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/MaterialIcons-Regular.ttf"},function(e,t,n){"use strict";n.r(t),t.default=n.p+"fonts/MaterialIcons-Regular.svg"},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,o=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var r,i=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(r=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(e,t,n){var o={"./button/button.ts":83,"./button/plugin/handler.ts":14,"./button/plugin/plugin.ts":13,"./calendar/calendar.ts":84,"./calendar/calendar__btn-apply.ts":19,"./calendar/calendar__btn-change-month.ts":15,"./calendar/calendar__btn-clear.ts":20,"./calendar/calendar__day-week.ts":18,"./calendar/classes.ts":3,"./calendar/lib.ts":6,"./calendar/plugin/handler.ts":17,"./calendar/plugin/plugin.ts":16,"./calendar/view/view.ts":4,"./date-range/classes.ts":8,"./date-range/date-range.ts":85,"./date-range/date-range__dropdown.ts":21,"./date-range/lib.ts":22,"./dropdown-counter/dropdown-counter.ts":86,"./dropdown-counter/plugin/handler.ts":24,"./dropdown-counter/plugin/plugin.ts":23,"./dropdown-guest/classes.ts":7,"./dropdown-guest/dropdown-guest.ts":87,"./dropdown-guest/dropdown-guest__btn-apply.ts":25,"./dropdown-guest/dropdown-guest__btn-clear.ts":26,"./dropdown-guest/lib.ts":10,"./dropdown-guest/view/view.ts":9,"./dropdown-head/dropdown-head.ts":88,"./dropdown-head/plugin/handler.ts":28,"./dropdown-head/plugin/plugin.ts":27,"./dropdown-room-amenities/case-tables.ts":29,"./dropdown-room-amenities/dropdown-room-amenities.ts":89,"./dropdown/classes.ts":30,"./dropdown/dropdown.ts":90,"./dropdown/plugin/handler.ts":32,"./dropdown/plugin/plugin.ts":31,"./expandable-checkbox-list/expandable-checkbox-list.ts":91,"./header/header__menu-mobile-btn.ts":92,"./image-slider/classes.ts":33,"./image-slider/image-slider.ts":93,"./image-slider/image-slider__nav-button.ts":34,"./like-button/classes.ts":11,"./like-button/like-button.ts":94,"./like-button/plugin/handler.ts":36,"./like-button/plugin/plugin.ts":35,"./menu-item-expandable/classes.ts":37,"./menu-item-expandable/menu-item-expandable.ts":95,"./menu-item-expandable/menu-item-expandable__btn-expand.ts":38,"./range-slider/classes.ts":12,"./range-slider/model/model.ts":39,"./range-slider/range-slider.ts":96,"./range-slider/view/view.ts":40};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id=82},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(13)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2);n(15);var r=n(3),i=n(4);n(16),n(18),n(19),n(20),o("."+r.default.CALENDAR).each((function(){var e=o(this),t=i.getRenderedDate(e);i.updateCalendar(e,t)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(8);n(21);var i=n(22),a=function(e){e.removeClass(r.default.RANGE_SELECT),e.find("."+r.default.DROPDOWN_HEAD).dropdownHead("select-date",!1)};o("."+r.default.DATE_RANGE).on("apply",(function(e,t,n){e.preventDefault();var s=o(e.delegateTarget);null!==t?s.find("."+r.default.DROPDOWN_HEAD_LEFT).dropdownHead("value",i.dateToString(t)):s.find("."+r.default.DROPDOWN_HEAD_LEFT).dropdownHead("value","ДД.ММ.ГГГГ"),null!==n?s.find("."+r.default.DROPDOWN_HEAD_RIGHT).dropdownHead("value",i.dateToString(n)):s.find("."+r.default.DROPDOWN_HEAD_RIGHT).dropdownHead("value","ДД.ММ.ГГГГ"),a(s)})).on("clear",(function(e){e.preventDefault();var t=o(e.delegateTarget);t.find("."+r.default.DROPDOWN_HEAD).dropdownHead("value","ДД.ММ.ГГГГ"),a(t)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2);n(23);var r="js-dropdown-counter__btn-minus",i="js-dropdown-counter__btn-plus",a="js-dropdown-counter__value";o(".js-dropdown-counter").on("click.dropdown-counter.change-value","."+r+", ."+i,(function(e){var t=o(e.delegateTarget),n=o(e.target),i=t.find("."+a),s=0;try{s=parseInt(i.text(),10)}catch(e){return console.error(e),!1}return n.hasClass(r)?((s-=1)<0&&(s=0),0===s&&n.button("disable",!0)):1===(s+=1)&&t.find("."+r).button("disable",!1),i.text(String(s)),!0}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(7),i=n(9),a=n(10);n(25),n(26);o("."+r.default.DROPDOWN).on("click.dropdown-guest.check-counters","."+r.default.BTN_PLUS+", ."+r.default.BTN_MINUS,(function(e){var t=o(e.delegateTarget),n=i.getCounterValues(t),s=0===a.groupingElementValues(n).allGuests;t.find("."+r.default.BTN_CLEAR).button("hidden",s)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(27)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(29),i="js-dropdown-counter__btn-plus",a="js-dropdown-counter__btn-minus",s="js-dropdown-head";o("."+"js-dropdown-room-amenities").on("click.room-amenities.handler","."+a+", ."+i,(function(e){var t=o(e.delegateTarget),n=t.find("."+s),i=t.dropdown("counters");if(0===function(e){var t=0;return e.forEach((function(e){t+=e.value})),t}(i))n.dropdownHead("value","Удобства номера");else{var a=function(e,t){if(e.length<=t)return e;var n=0,o=[];return e.split(", ").forEach((function(e){if(n+e.length<=t)o.push(e),n+=e.length;else{var r=e.split(" ").slice(0,2).join(" ");n+r.length<=t&&(o.push(r),n+=r.length)}})),o.join(", ")+"..."}(function(e){var t=[];return e.forEach((function(e){if(e.value>0&&Object.prototype.hasOwnProperty.apply(r.default,[e.text])){var n=r.default[e.text],o=(i=e.value,s=i%100,l=0,1===(a=i%10)&&(s>20||1===i)&&(l=0),a>=2&&a<=4&&(l=1),(a>=5&&a<=9||0===a||s>=11&&s<=20)&&(l=2),l);t.push(e.value+" "+n[o])}var i,a,s,l})),t.join(", ")}(i),22);n.dropdownHead("value",a)}}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2);n(31),o(".dropdown").on("click.dropdown.expand",".dropdown-head",(function(e){var t=o(e.delegateTarget),n=t.dropdown("expand");t.dropdown("expand",!n)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r="js-expandable-checkbox-list__icon",i="expandable-checkbox-list_expanded";o("."+"js-expandable-checkbox-list").on("click.expandable-checkbox-list.expand","."+r,(function(e){o(e.delegateTarget).toggleClass(i)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r="js-header__menu-mobile-btn",i="header_extended";o("."+"js-header").on("click.header.expand-menu","."+r,(function(e){o(e.delegateTarget).toggleClass(i)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(34)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2);n(35);var r=n(11);o("."+r.default.LIKE_BTN).on("click.like-button.checked",(function(e){var t=o(e.delegateTarget),n=t.likeButton("checked"),r=t.likeButton("likes");(r=n?r-=1:r+=1)<0&&(r=0),t.likeButton("likes",r),t.likeButton("checked",!n)}))},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),n(38)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=n(2),r=n(39),i=n(40),a=n(12);o("."+a.default.SLIDER).each((function(){var e=this;o((function(){var t=o(e),n=[parseInt(t.attr("data-range-min")||"0",10),parseInt(t.attr("data-range-max")||"1000",10)],a=parseInt(t.attr("data-step")||"1",10);new i.default(t,new r.default({range:n,step:a}))}))}))},function(e,t,n){var o={"./block-head/block-head.scss":98,"./bullet-list-item/bullet-list-item.scss":100,"./bullet-list/bullet-list.scss":102,"./button/button.scss":104,"./buttons-demo/buttons-demo.scss":106,"./calendar/calendar.scss":108,"./card-account-registration/card-account-registration.scss":110,"./card-authentication/card-authentication.scss":112,"./card-book-room/card-book-room.scss":114,"./card-container/card-container.scss":116,"./card-room-information/card-room-information.scss":118,"./card-selection-room/card-selection-room.scss":120,"./cards/cards.scss":122,"./checkbox-button/checkbox-button.scss":124,"./checkbox-list/checkbox-list.scss":126,"./color-demo-item/color-demo-item.scss":128,"./colors-and-type/colors-and-type.scss":130,"./colors-demo/colors-demo.scss":132,"./comment/comment.scss":134,"./comments/comments.scss":136,"./container-content/container-content.scss":138,"./copyright-bar/copyright-bar.scss":140,"./date-range/date-range.scss":142,"./date-range/date-range__dropdown.scss":144,"./dropdown-counter/dropdown-counter.scss":146,"./dropdown-filter-date/dropdown-filter-date.scss":148,"./dropdown-guest/dropdown-guest.scss":150,"./dropdown-head/dropdown-head.scss":152,"./dropdown-room-amenities/dropdown-room-amenities.scss":154,"./dropdown/dropdown.scss":156,"./expandable-checkbox-list/expandable-checkbox-list.scss":158,"./footer-creative/footer-creative.scss":160,"./footer-nav/footer-nav.scss":162,"./footer/footer.scss":164,"./form-elements/form-elements.scss":166,"./header-footer/header-footer.scss":168,"./header/header.scss":170,"./hotel-rooms/hotel-rooms.scss":172,"./html-body/html-body.scss":174,"./image-slider/image-slider.scss":176,"./input-checkbox/input-checkbox.scss":178,"./input-radio/input-radio.scss":180,"./input-text/input-text.scss":182,"./input-toggle/input-toggle.scss":184,"./like-button/like-button.scss":186,"./like-buttons/like-buttons.scss":188,"./logo/logo.scss":190,"./menu-item-expandable/menu-item-expandable.scss":192,"./menu-item/menu-item.scss":194,"./menu/menu.scss":196,"./page-container/page-container.scss":198,"./pagination/pagination.scss":200,"./radio-button/radio-button.scss":202,"./radio-buttons/radio-buttons.scss":204,"./range-slider/range-slider.scss":206,"./rating-buttons/rating-buttons.scss":208,"./rating/rating.scss":210,"./receipt/receipt.scss":212,"./rich-checkbox-button/rich-checkbox-button.scss":214,"./rich-checkbox-buttons/rich-checkbox-buttons.scss":216,"./room-advantage/room-advantage.scss":218,"./room-advantages/room-advantages.scss":220,"./room-details-banner/room-details-banner.scss":222,"./room-head/room-head.scss":224,"./room-impressions/room-impressions.scss":226,"./search-filters/search-filters.scss":228,"./text-demo-item/text-demo-item.scss":230,"./text-demo/text-demo.scss":232,"./text-field/text-field.scss":234,"./text/text.scss":236,"./toggle-button/toggle-button.scss":238,"./toggle-buttons/toggle-buttons.scss":240};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id=97},function(e,t,n){var o=n(99);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".block-head{width:100%}.block-head::after{display:block;content:'';clear:both}.block-head__help{float:right}.block-head__title{float:left}\n",""])},function(e,t,n){var o=n(101);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".bullet-list-item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.bullet-list-item__maker-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;height:1.7143rem;margin-right:0.7143rem}.bullet-list-item__marker{display:block;width:.7143rem;height:.7143rem;background-color:rgba(31,32,65,0.25098);border-radius:50%}\n",""])},function(e,t,n){var o=n(103);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".bullet-list{width:100%;max-width:270px}.bullet-list:not(:last-child){margin-bottom:0.7143rem}.bullet-list__head{margin:0rem 0rem 0.8571rem 1.4286rem}.bullet-list__head_bottom_big{margin-bottom:1.2143rem}\n",""])},function(e,t,n){var o=n(105);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".button{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;height:100%;max-height:3.1429rem;display:inline-block;text-align:center;vertical-align:top;cursor:pointer}.button:active,.button:hover,.button:focus{text-decoration:none;outline:none}.button:visited{text-decoration:none}.button::after{content:'';height:100%;display:inline-block;vertical-align:middle}.button_theme_default-long{display:block;width:100%;height:3.1429rem;border-radius:1.5714rem;padding:0rem 19.7px;font-size:0.8571rem;line-height:1.0714rem;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);font-family:Montserrat;font-style:normal;font-weight:bold;text-transform:uppercase;color:white;position:relative}.button_theme_default-long:hover{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.button_theme_default-long:active{background:#bc9cff}.button_theme_default-long:focus{-webkit-box-shadow:0px 0px 10px rgba(31,32,65,0.501961);box-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_theme_default{height:3.1429rem;border-radius:1.5714rem;padding:0rem 19.7px;font-size:0.8571rem;line-height:1.0714rem;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);font-family:Montserrat;font-style:normal;font-weight:bold;text-transform:uppercase;color:white;padding-top:0.1429rem}.button_theme_default:hover{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.button_theme_default:active{background:#bc9cff}.button_theme_default:focus{-webkit-box-shadow:0px 0px 10px rgba(31,32,65,0.501961);box-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_theme_icon{width:3.1429rem;height:3.1429rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;color:rgba(31,32,65,0.501961)}.button_theme_light{height:3.1429rem;font-family:Montserrat;font-style:normal;font-weight:bold;font-size:0.8571rem;line-height:1.0714rem;border-radius:1.5714rem;border:0.1429rem solid #bc9cff;color:#bc9cff;text-transform:uppercase;padding:0rem 1.1786rem}.button_theme_light:hover{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.button_theme_light:active{-webkit-box-shadow:0px 0px 10px rgba(31,32,65,0.501961);box-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_theme_light:focus{-webkit-box-shadow:0px 0px 10px rgba(31,32,65,0.501961);box-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_theme_round-icon{width:2.8571rem;height:2.8571rem;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);border-radius:1.5714rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.4286rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;color:#ffffff}.button_theme_round-little{width:2.1429rem;height:2.1429rem;border:0.0714rem solid rgba(31,32,65,0.25);border-radius:1.5714rem;color:rgba(31,32,65,0.501961);font-family:Montserrat;font-style:normal;font-weight:normal;font-size:1.2857rem;line-height:2.1429rem}.button_theme_round{width:2.8571rem;height:2.8571rem;border-radius:1.5714rem;font-family:Montserrat;font-style:normal;font-weight:normal;font-size:0.8571rem;line-height:1.0714rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;color:#ffffff}.button_theme_social{width:1.7143rem;height:1.7143rem;font-family:'Font Awesome 5 Brands';font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.6429rem;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;padding:0}.button_theme_social:hover{opacity:0.86}.button_theme_social:active{background:#bc9cff;-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;opacity:1}.button_theme_social:focus{background:rgba(31,32,65,0.501961);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;opacity:1}.button_theme_text{font-family:Montserrat;font-style:normal;font-weight:bold;font-size:0.8571rem;line-height:1.0714rem;text-transform:uppercase;color:#bc9cff}.button_theme_text:hover{text-shadow:0px 0px 10px #bc9cff}.button_theme_text:active{text-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_theme_text:focus{text-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.button_background_gradient-primary{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%)}.button_background_gradient-success{background:-webkit-gradient(linear, left top, left bottom, from(#6FCF97), to(#66D2EA));background:-o-linear-gradient(top, #6FCF97 0%, #66D2EA 100%);background:linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%)}.button_background_none{background:none}.button_hover-theme_gradient-primary:hover{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff;color:#ffffff;font-weight:bold}.button_hover-theme_gradient-primary:active{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-box-shadow:0px 0px 10px #6fcf97;box-shadow:0px 0px 10px #6fcf97;color:#ffffff;font-weight:bold}.button_hover-theme_gradient-success:hover{background:-webkit-gradient(linear, left top, left bottom, from(#6FCF97), to(#66D2EA));background:-o-linear-gradient(top, #6FCF97 0%, #66D2EA 100%);background:linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%);-webkit-box-shadow:0px 0px 10px #6fcf97;box-shadow:0px 0px 10px #6fcf97;color:#ffffff;font-weight:bold}.button_hover-theme_gradient-success:active{background:-webkit-gradient(linear, left top, left bottom, from(#6FCF97), to(#66D2EA));background:-o-linear-gradient(top, #6FCF97 0%, #66D2EA 100%);background:linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%);-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff;color:#ffffff;font-weight:bold}.button_disable{opacity:0.5}.button_disable:active,.button_disable:hover,.button_disable:focus{-webkit-box-shadow:none;box-shadow:none;text-shadow:none}.button_font-weight_bold{font-weight:bold}.button_hidden{display:none}.button_horizontal-size_big{padding:0rem 1.6429rem}.button_size_sm{height:2.4286rem;padding:0 1.3571rem}.button_text-color_text-secondary{color:rgba(31,32,65,0.501961)}.button__icon{position:absolute;right:0;top:0;width:3.1429rem;height:100%;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;text-align:center;color:#ffffff;text-transform:none}\n",""])},function(e,t,n){var o=n(107);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".buttons-demo__head{margin-bottom:1.1429rem}.buttons-demo__row{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;margin-bottom:2.1429rem}.buttons-demo__button{margin-right:1.4286rem}\n",""])},function(e,t,n){var o=n(109);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".calendar{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:100%;max-width:320px;padding:1.4286rem 1.4286rem;background:#ffffff;border:0.0714rem solid rgba(31,32,65,0.25098);box-sizing:border-box;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);border-radius:0.2857rem}.calendar__btn-change-month{width:1.7143rem;height:1.7143rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;text-align:center;color:#bc9cff;cursor:pointer}.calendar__btn-change-month:hover{text-shadow:0px 0px 2px #bc9cff}.calendar__btn-control{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.calendar__date-navigation{margin-bottom:2.0714rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.calendar__days-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-bottom:1.4286rem}.calendar__day-week{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;max-width:14.28571%;height:2.8571rem;line-height:2.8571rem;text-align:center;font-family:Montserrat;font-style:normal;font-weight:normal;font-size:0.8571rem;color:rgba(31,32,65,0.501961);cursor:pointer}.calendar__day-week_range-day-end{position:relative;z-index:1}.calendar__day-week_range-day-end::after{content:'';left:0;top:0;z-index:-1;width:50%;height:100%;position:absolute;display:block;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);opacity:0.25}.calendar__day-week_range-day-start{position:relative;z-index:1;color:#fff}.calendar__day-week_range-day-start::after{content:'';right:0;top:0;z-index:-1;width:50%;height:100%;position:absolute;display:block;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);opacity:0.25}.calendar__day-week_theme_another-month{color:rgba(31,32,65,0.25098)}.calendar__day-week_theme_range-day-middle{position:relative;z-index:2}.calendar__day-week_theme_range-day-middle::after{content:'';left:0;top:0;z-index:1;width:100%;height:100%;position:absolute;display:block;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);opacity:0.25}.calendar__day-week_theme_range-day{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);border-radius:1.5714rem;color:#fff;font-weight:bold}.calendar__day-week_theme_today{background:-webkit-gradient(linear, left top, left bottom, from(#6fcf97), to(#66d2ea));background:-o-linear-gradient(top, #6fcf97 0%, #66d2ea 100%);background:linear-gradient(180deg, #6fcf97 0%, #66d2ea 100%);border-radius:50%;font-weight:bold;color:#fff}.calendar__weekday-name{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;height:2.8571rem;width:100%;max-width:2.8571rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}.calendar__weekday-names{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around}\n",""])},function(e,t,n){var o=n(111);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-account-registration__date-of-birth{margin-bottom:1.6429rem}.card-account-registration__email{margin-bottom:0.7143rem}.card-account-registration__form{margin-bottom:2rem;width:100%}.card-account-registration__have-account{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.card-account-registration__input-name{margin-bottom:0.7143rem}.card-account-registration__input-surname{margin-bottom:0.7143rem}.card-account-registration__password{margin-bottom:0.5rem}.card-account-registration__select-gender{margin-bottom:1.7857rem}.card-account-registration__special-offers{margin-bottom:1.7143rem}.card-account-registration__title{margin-bottom:1.3571rem;width:100%}\n",""])},function(e,t,n){var o=n(113);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-authentication__head{width:100%;margin-bottom:1.3571rem}.card-authentication__form{margin-bottom:2.1429rem;width:100%}.card-authentication__email{margin-bottom:0.7143rem}.card-authentication__password{margin-bottom:1.4286rem}.card-authentication__no-account{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}\n",""])},function(e,t,n){var o=n(115);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-book-room__head{margin-bottom:1.4286rem;width:100%}.card-book-room__date-range{margin-bottom:1.5714rem;width:100%}.card-book-room__dropdown-guest{margin-bottom:1.5714rem;width:100%}.card-book-room__receipt{margin-bottom:1.3571rem;width:100%}.card-book-room__booking-button{width:100%}\n",""])},function(e,t,n){var o=n(117);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-container{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;max-width:380px;min-width:380px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;background:#FFFFFF;border:0.0714rem solid #0000001f;box-sizing:border-box;-webkit-box-shadow:0rem 0rem 1.7857rem #00000033;box-shadow:0rem 0rem 1.7857rem #00000033;border-radius:0.2857rem;padding:2.8571rem 2.1429rem 2.1429rem 2.0714rem}@media (max-width: 400px){.card-container{padding:2.1429rem 0.7143rem;max-width:100%;min-width:auto}}\n",""])},function(e,t,n){var o=n(119);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-room-information{width:270px;background:#fff;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);border-radius:0.2857rem}.card-room-information__image-slider{height:151px;border-radius:0.2857rem 0.2857rem 0rem 0rem}.card-room-information__body{padding:1.4286rem 1.2143rem 1.4286rem 1.4286rem}.card-room-information__head{padding-bottom:0.5rem;border-bottom:0.0714rem solid rgba(31,32,65,0.101961)}.card-room-information__rating-comments{padding:0.5714rem 0.2143rem 0rem 0rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}.card-room-information__comments{text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}.card-room-information__comments:active,.card-room-information__comments:hover,.card-room-information__comments:focus{text-decoration:none;outline:none}.card-room-information__comments:visited{text-decoration:none}.card-room-information__comments:hover,.card-room-information__comments:active{-webkit-text-decoration:underline rgba(31,32,65,0.25098);text-decoration:underline rgba(31,32,65,0.25098)}\n",""])},function(e,t,n){var o=n(121);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".card-selection-room__title{margin-bottom:1.5rem}.card-selection-room__date-range{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;margin-bottom:1.6429rem;width:100%}.card-selection-room__dropdown-guest{margin-bottom:2.2857rem;width:100%}.card-selection-room__button-find{width:100%}\n",""])},function(e,t,n){var o=n(123);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".cards{padding-top:150px;background-color:#e5e5e5}.cards__container-content{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}@media (max-width: 1100px){.cards__container-content{-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around}}@media (max-width: 768px){.cards__container-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}}.cards__column{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;max-width:380px;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media (max-width: 768px){.cards__column{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}}@media (max-width: 380px){.cards__column{max-width:100%;width:100%}}.cards__item{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;margin-bottom:2.8571rem;width:100%}\n",""])},function(e,t,n){var o=n(125);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".checkbox-button{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none}.checkbox-button__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;min-width:320px}.checkbox-button__text{margin-left:0.7143rem;word-break:normal;width:100%;max-width:200px}\n",""])},function(e,t,n){var o=n(127);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".checkbox-list__button:not(:last-child){margin-bottom:0.7143rem}.checkbox-list__head{margin-bottom:1.2143rem}\n",""])},function(e,t,n){var o=n(129);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".color-demo-item{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.color-demo-item__color-square{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;min-width:5rem;max-width:5rem;min-height:5rem;max-height:5rem;border-radius:0.4286rem}.color-demo-item__description{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;margin-left:2.9286rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}\n",""])},function(e,t,n){var o=n(131);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".colors-and-type{width:100%;background-color:#fff;-webkit-justify-content:space-around;-ms-flex-pack:distribute;justify-content:space-around;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.colors-and-type__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;padding:4.7857rem 3.8571rem 0rem 0.7143rem;margin:0 auto}@media (max-width: 992px){.colors-and-type__container-content{padding:4.7857rem 0rem 0rem 0rem}}@media (max-width: 768px){.colors-and-type__container-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}}@media (max-width: 768px){.colors-and-type__text-demo{margin-top:2.8571rem}}\n",""])},function(e,t,n){var o=n(133);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".colors-demo{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:auto}.colors-demo__color-demo:not(:last-child){margin-bottom:1.4286rem}\n",""])},function(e,t,n){var o=n(135);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".comment{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;width:100%;min-width:300px}.comment__aside{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.comment__avatar-container{display:block;width:3.4286rem;height:3.4286rem}.comment__avatar-image{max-width:100%;max-height:100%;height:auto;border:0.1429rem solid #fff;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.1);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.1);border-radius:2.2857rem}.comment__like-button{margin-top:0.8571rem}.comment__head-body{margin-left:0.7143rem}.comment__head{margin-bottom:0.7143rem}\n",""])},function(e,t,n){var o=n(137);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".comments__head{margin-bottom:1.3571rem}.comments__comment:not(:last-child){margin-bottom:1.6429rem}\n",""])},function(e,t,n){var o=n(139);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;min-width:320px;max-width:1190px;margin:0 auto;padding:0 1.0714rem}@media (max-width: 768px){.container-content{padding:0 0.7143rem}}\n",""])},function(e,t,n){var o=n(141);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".copyright-bar{height:5rem;background:#fff;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804)}.copyright-bar__container-content{height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.copyright-bar__social-button:not(:last-child){margin-right:1.4286rem}.copyright-bar__social-buttons{padding-bottom:0.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width: 768px){.copyright-bar__copyright-text{margin-right:0.7143rem}}\n",""])},function(e,t,n){var o=n(143);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".date-range{width:100%;max-width:100%}.date-range__dropdowns{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width: 380px){.date-range__dropdowns{-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}}.date-range__dropdown{width:100%;max-width:150px}@media (max-width: 330px){.date-range__dropdown{max-width:50%}}.date-range__dropdown-head{margin-bottom:0.2857rem}.date-range_range-select .date-range__container{display:block}.date-range__container{width:100%;position:relative;margin-top:0.3571rem;display:none}.date-range__calendar{position:absolute;z-index:999}\n",""])},function(e,t,n){var o=n(145);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".date-range__dropdown{width:100%;max-width:150px}@media (max-width: 330px){.date-range__dropdown{max-width:50%}}\n",""])},function(e,t,n){var o=n(147);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown-counter{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.dropdown-counter__value{width:100%;max-width:2.2857rem;min-width:2.2857rem}.dropdown-counter__control{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}\n",""])},function(e,t,n){var o=n(149);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown-filter-date{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.dropdown-filter-date__head{margin-bottom:0.3571rem}\n",""])},function(e,t,n){var o=n(151);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown-guest{width:320px;max-width:100%}.dropdown-guest__counter{padding:0.5rem 0.5rem 0rem 1.0714rem}.dropdown-guest__btn-container{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;padding:1.3571rem 0.5rem 0.9286rem 1.0714rem}\n",""])},function(e,t,n){var o=n(153);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown-head{width:100%;height:3.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;background-color:#fff;border:0.0714rem solid rgba(31,32,65,0.25098);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:0.2857rem;color:rgba(31,32,65,0.74902);cursor:pointer}.dropdown-head:hover{border-color:rgba(31,32,65,0.501961)}.dropdown-head__text{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;padding-left:1rem;overflow:hidden}.dropdown-head__icon{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:3.1429rem;height:3.1429rem;min-width:3.1429rem;padding-left:0.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;color:rgba(31,32,65,0.74902)}.dropdown-head_theme_expanded{border-radius:0.2857rem 0.2857rem 0rem 0rem;border-color:rgba(31,32,65,0.501961)}.dropdown-head_theme_select-date{border-color:rgba(31,32,65,0.501961)}\n",""])},function(e,t,n){var o=n(155);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown-room-amenities__counter{padding:0.4286rem 0.4286rem 0rem 1.0714rem}.dropdown-room-amenities__counter:last-child{padding-bottom:0.5714rem}\n",""])},function(e,t,n){var o=n(157);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".dropdown{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.dropdown__block-head{margin-bottom:0.2857rem}.dropdown__body{position:relative;display:none}.dropdown__content{position:absolute;width:100%;left:0;top:0;z-index:999;background:#fff;border:0.0714rem solid rgba(31,32,65,0.501961);border-top:0;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);border-radius:0rem 0rem 0.2857rem 0.2857rem}.dropdown_expanded .dropdown__body{display:block}\n",""])},function(e,t,n){var o=n(159);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".expandable-checkbox-list{width:100%;max-width:266px}.expandable-checkbox-list__head{height:3.1429rem;margin-bottom:0.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.expandable-checkbox-list__body{display:none}.expandable-checkbox-list__checkbox:not(:last-child){margin-bottom:0.7143rem}.expandable-checkbox-list__icon{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:3.1429rem;height:3.1429rem;min-width:3.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;color:rgba(31,32,65,0.74902);cursor:pointer}.expandable-checkbox-list__icon:hover,.expandable-checkbox-list__icon:active{color:#bc9cff}.expandable-checkbox-list__icon:active{font-size:2rem}.expandable-checkbox-list_expanded .expandable-checkbox-list__body{display:block}.expandable-checkbox-list_expanded .expandable-checkbox-list__icon{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg);padding:0rem 0rem 0.1429rem 0.1429rem}\n",""])},function(e,t,n){var o=n(161);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".footer-creative{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;background:#fff;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804)}.footer-creative__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding:7.1429rem 0rem 110px 0rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.footer-creative__logo{margin-bottom:1.2143rem}.footer-creative__site-description{margin-bottom:1.9286rem;width:100%;max-width:560px;text-align:center}.footer-creative__social-button:not(:last-child){margin-right:1.4286rem}.footer-creative__social-buttons{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}\n",""])},function(e,t,n){var o=n(163);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".footer-nav__title{margin-bottom:1.5rem}\n",""])},function(e,t,n){var o=n(165);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".footer{background-color:#fff;-webkit-box-shadow:0rem 0.0714rem 0rem rgba(31,32,65,0.101961);box-shadow:0rem 0.0714rem 0rem rgba(31,32,65,0.101961)}.footer__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding:7.1429rem 0rem 5.7143rem 0rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}@media (max-width: 992px){.footer__container-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}}.footer__logo{margin-bottom:1.2143rem}@media (max-width: 992px){.footer__logo{margin:0 auto 1.2143rem auto}}.footer__nav{margin-top:0.3571rem;width:100%;max-width:160px}@media (max-width: 992px){.footer__nav{display:none}}.footer__site-description{width:100%;max-width:260px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.footer__subscribe-container{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;margin-top:0.3571rem;width:100%;max-width:260px}@media (max-width: 992px){.footer__subscribe-container{margin-top:1.4286rem}}.footer__subscribe-description{margin-bottom:1.6429rem}.footer__subscribe-title{margin-bottom:1.2857rem}\n",""])},function(e,t,n){var o=n(167);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".form-elements{width:100%}.form-elements__column{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.form-elements__column:not(:last-child){margin-right:0.7143rem}@media (max-width: 768px){.form-elements__column{width:100%;margin-right:0rem}}.form-elements__comment{max-width:63%}@media (max-width: 768px){.form-elements__comment{max-width:100%}}.form-elements__container-content{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;padding-top:140px}@media (max-width: 1200px){.form-elements__container-content{padding-top:5rem}}@media (max-width: 768px){.form-elements__container-content{padding-top:1.4286rem}}.form-elements__item{margin-bottom:1.4286rem;min-width:320px}@media (max-width: 400px){.form-elements__item{min-width:auto}}.form-elements__row{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.form-elements__row:not(:last-child){margin-bottom:7.1429rem}\n",""])},function(e,t,n){var o=n(169);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".header-footer{background:#e5e5e5;padding:150px 0}.header-footer__header{margin-bottom:2.8571rem}.header-footer__copyright-bar{margin:0.0714rem 0rem 2.8571rem 0rem}\n",""])},function(e,t,n){var o=n(171);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".header{background-color:#fff;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.0509804)}.header__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;height:5rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media (max-width: 992px){.header__container-content{padding-left:0.7143rem;-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;height:auto}}.header__head{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media (max-width: 992px){.header__head{width:100%;height:5rem}}.header__personal-area-buttons{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width: 768px){.header__personal-area-buttons{width:100%;max-width:300px;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}}.header__btn-login{margin-right:1.4286rem}@media (max-width: 768px){.header__btn-login{margin-right:0}}.header__logo{-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto}.header__nav-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media (max-width: 992px){.header__nav-container{display:none;width:100%}}.header__personal-area{margin-left:1.5714rem}@media (max-width: 992px){.header__personal-area{margin:1.4286rem 0rem 1.4286rem 0rem}}.header__user-name{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding-left:1.4286rem;border-left:0.0714rem solid rgba(31,32,65,0.101961)}@media (max-width: 992px){.header__user-name{padding:1.4286rem 0rem 0rem 0rem;border-left:none;border-top:0.0714rem solid rgba(31,32,65,0.101961)}}.header__menu-mobile-btn{display:none}@media (max-width: 992px){.header__menu-mobile-btn{display:block}}.header_extended .header__nav-container{display:block}\n",""])},function(e,t,n){var o=n(173);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".hotel-rooms{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.hotel-rooms__title{margin-bottom:0.1429rem}.hotel-rooms__body{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.hotel-rooms__room-information{margin-top:1.2857rem}.hotel-rooms__pagination{margin-top:2.8571rem;padding-right:1.1429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}\n",""])},function(e,t,n){var o=n(175);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,"html,body{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;background:#ffffff}html{max-width:1920px;font-size:14px;font-family:Arial, Helvetica, sans-serif}\n",""])},function(e,t,n){var o=n(177);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".image-slider{width:100%;max-height:100%}.image-slider:hover .image-slider__nav-button{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.image-slider__container{display:block;width:100%;height:100%;position:relative}.image-slider__items{position:absolute;right:1.0714rem;bottom:1.0714rem;z-index:1000;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.image-slider__nav-button-icon{font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;color:#fff;-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.image-slider__nav-button{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:absolute;top:0;width:3rem;height:100%;z-index:999;border-radius:0.2857rem 0rem 0rem 0rem;display:none;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background:-webkit-gradient(linear, left top, right top, from(rgba(0,0,0,0.5)), color-stop(99.99%, rgba(0,0,0,0)), to(rgba(255,255,255,0)));background:-o-linear-gradient(left, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0) 99.99%, rgba(255,255,255,0) 100%);background:linear-gradient(90deg, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0) 99.99%, rgba(255,255,255,0) 100%);cursor:pointer}.image-slider__nav-button_right{right:0;-webkit-transform:matrix(-1, 0, 0, 1, 0, 0);-ms-transform:matrix(-1, 0, 0, 1, 0, 0);transform:matrix(-1, 0, 0, 1, 0, 0)}.image-slider__item{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:0.5357rem;height:0.5357rem;border-radius:50%;border:0.0714rem solid #ffffff;-webkit-box-shadow:0rem 0.3571rem 0.3571rem #1f20414d;box-shadow:0rem 0.3571rem 0.3571rem #1f20414d}.image-slider__item:not(:last-child){margin-right:3.75px}.image-slider__item_theme_selected{background-color:#fff}.image-slider__image{width:100%;height:auto;max-height:100%;z-index:-1;display:none}.image-slider__image_selected{border-radius:0.2857rem 0.2857rem 0rem 0rem;z-index:2;display:block}.image-slider__image_index-item{display:block;position:absolute;left:40px;top:20px;color:#6fcf97;font-size:2rem;font-weight:bold;z-index:2}\n",""])},function(e,t,n){var o=n(179);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".input-checkbox{display:block;cursor:pointer}.input-checkbox__input{display:none}.input-checkbox__input:checked+.input-checkbox__new-input{border-color:#bc9cff;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}.input-checkbox__input:hover+.input-checkbox__new-input{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.input-checkbox__input:active+.input-checkbox__new-input{-webkit-box-shadow:0px 0px 5px rgba(31,32,65,0.501961);box-shadow:0px 0px 5px rgba(31,32,65,0.501961)}.input-checkbox__input:focus+.input-checkbox__new-input{border-color:rgba(31,32,65,0.501961)}.input-checkbox__new-input{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;width:1.4286rem;height:1.4286rem;background:#fff;border:0.0714rem solid rgba(31,32,65,0.25098);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:0.2857rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1rem;font-weight:bold;color:white;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n",""])},function(e,t,n){var o=n(181);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".input-radio{display:block;cursor:pointer}.input-radio__input-indicator{display:none;width:0.8571rem;height:0.8571rem;background:-webkit-gradient(linear, left top, left bottom, from(#bc9cff), to(#8ba4f9));background:-o-linear-gradient(top, #bc9cff 0%, #8ba4f9 100%);background:linear-gradient(180deg, #bc9cff 0%, #8ba4f9 100%);border-radius:0.7143rem}.input-radio__input{display:none}.input-radio__input:checked+.input-radio__new-input{border-color:#bc9cff}.input-radio__input:checked+.input-radio__new-input>.input-radio__input-indicator{display:block}.input-radio__input:hover+.input-radio__new-input{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.input-radio__input:active+.input-radio__new-input{-webkit-box-shadow:0px 0px 5px rgba(31,32,65,0.501961);box-shadow:0px 0px 5px rgba(31,32,65,0.501961)}.input-radio__input:focus+.input-radio__new-input{border-color:rgba(31,32,65,0.501961)}.input-radio__new-input{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;width:1.4286rem;height:1.4286rem;background:#fff;border:0.0714rem solid rgba(31,32,65,0.25098);border-radius:0.7143rem;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}\n",""])},function(e,t,n){var o=n(183);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".input-text{width:100%}.input-text_use-icon-right .input-text__input{padding-right:3.1429rem}.input-text__container{width:100%;position:relative}.input-text__icon-right{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;color:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;width:100%;max-width:3.1429rem;min-width:3.1429rem;height:100%;max-height:3.1429rem;position:absolute;right:0;top:0;cursor:pointer}.input-text__icon-right:hover{text-shadow:0px 0px 10px #bc9cff}.input-text__icon-right:active{text-shadow:0px 0px 10px rgba(31,32,65,0.501961)}.input-text__input{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;min-width:0;height:3.1429rem;padding:0rem 1rem 0.1429rem 1rem;font-family:Montserrat;font-style:normal;font-weight:normal;font-size:0.9786rem;line-height:1.2857rem;color:rgba(31,32,65,0.25098);background-color:#fff;border:0.0714rem solid rgba(31,32,65,0.25098);border-radius:0.2857rem}.input-text__input::-webkit-input-placeholder{color:rgba(31,32,65,0.25098);opacity:1}.input-text__input::-moz-placeholder{color:rgba(31,32,65,0.25098);opacity:1}.input-text__input:-ms-input-placeholder{color:rgba(31,32,65,0.25098);opacity:1}.input-text__input::-ms-input-placeholder{color:rgba(31,32,65,0.25098);opacity:1}.input-text__input::placeholder{color:rgba(31,32,65,0.25098);opacity:1}.input-text__input:hover,.input-text__input:focus{line-height:1.7143rem;color:rgba(31,32,65,0.74902);border-color:rgba(31,32,65,0.501961)}\n",""])},function(e,t,n){var o=n(185);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".input-toggle{display:block;cursor:pointer}.input-toggle__input{display:none}.input-toggle__input:checked+.input-toggle__switch{border-color:#bc9cff}.input-toggle__input:checked+.input-toggle__switch .input-toggle__switch-indicator{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);float:right}.input-toggle__switch-indicator{display:block;float:left;width:0.8571rem;height:0.8571rem;background:rgba(31,32,65,0.25098);border-radius:0.7143rem}.input-toggle__switch{width:2.8571rem;height:1.4286rem;background:white;border:0.0714rem solid rgba(31,32,65,0.25098);-webkit-box-sizing:border-box;box-sizing:border-box;border-radius:0.7143rem;padding:0.2143rem}.input-toggle__switch:hover{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.input-toggle__switch:active{-webkit-box-shadow:0px 0px 5px rgba(31,32,65,0.501961);box-shadow:0px 0px 5px rgba(31,32,65,0.501961)}\n",""])},function(e,t,n){var o=n(187);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".like-button{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:2.8571rem;height:1.4286rem;background:white;border:0.0714rem solid rgba(31,32,65,0.25098);box-sizing:border-box;border-radius:0.7143rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;cursor:pointer}.like-button:hover{-webkit-box-shadow:0px 0px 10px rgba(31,32,65,0.25098);box-shadow:0px 0px 10px rgba(31,32,65,0.25098)}.like-button:active{-webkit-box-shadow:0px 0px 5px rgba(31,32,65,0.501961);box-shadow:0px 0px 5px rgba(31,32,65,0.501961)}.like-button_checked{border-color:#bc9cff}.like-button_checked .like-button__icon{background:#bc9cff;-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}.like-button_checked .like-button__counter{color:#bc9cff}.like-button_checked:hover{-webkit-box-shadow:0px 0px 10px #bc9cff;box-shadow:0px 0px 10px #bc9cff}.like-button__counter{width:0.8571rem;font-family:Montserrat;font-style:normal;font-weight:normal;font-size:0.7143rem;line-height:1.2143rem;text-align:center;color:rgba(31,32,65,0.25098);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.like-button__icon{width:1.2857rem;height:1.2857rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:0.7143rem;line-height:0.6429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center;color:rgba(31,32,65,0.25098);display:flex;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}\n",""])},function(e,t,n){var o=n(189);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".like-buttons__button:not(:last-child){margin-right:0.7143rem}.like-buttons__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.like-buttons__head{margin-bottom:1.0714rem}\n",""])},function(e,t,n){var o=n(191);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".logo{text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.logo:active,.logo:hover,.logo:focus{text-decoration:none;outline:none}.logo:visited{text-decoration:none}.logo__text{margin-left:11.5px;width:3.9286rem;height:1rem}.logo__icon{width:3.4286rem;height:3.4286rem}.logo__icon-main{width:2.8571rem;height:2.8571rem}\n",""])},function(e,t,n){var o=n(193);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".menu-item-expandable{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;display:block;cursor:pointer}.menu-item-expandable__head{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.menu-item-expandable__btn-expand{width:1.6429rem;height:1.5rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.5rem;text-align:center;color:rgba(31,32,65,0.501961)}.menu-item-expandable__body{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;position:relative;display:none}.menu-item-expandable__list{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;z-index:999;min-width:100%;position:absolute;left:-0.5rem;top:0;background:#fff;padding:0.5rem;margin:0;border-radius:0rem 0rem 0.2857rem 0.2857rem;-webkit-box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.25098);box-shadow:0rem 0.7143rem 1.4286rem rgba(31,32,65,0.25098)}.menu-item-expandable__list-item{list-style-type:none;margin-top:0.7143rem}.menu-item-expandable__link{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none;cursor:pointer}.menu-item-expandable__link:hover{-webkit-text-decoration:underline rgba(31,32,65,0.501961);text-decoration:underline rgba(31,32,65,0.501961)}.menu-item-expandable__link:active{outline:none;text-decoration:none;text-shadow:0px 0px 5px rgba(31,32,65,0.501961)}.menu-item-expandable_expanded .menu-item-expandable__body{display:block}\n",""])},function(e,t,n){var o=n(195);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;text-decoration:none}.menu-item:hover{-webkit-text-decoration:underline rgba(31,32,65,0.501961);text-decoration:underline rgba(31,32,65,0.501961)}.menu-item:active{outline:none;text-decoration:none;text-shadow:0px 0px 5px rgba(31,32,65,0.501961)}\n",""])},function(e,t,n){var o=n(197);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".menu{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}@media (max-width: 992px){.menu{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}}.menu_theme_vertical{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}.menu_theme_vertical .menu__item{margin:0rem 0rem 1.5rem 0rem}.menu__item:not(:last-child){margin-right:1.5rem}@media (max-width: 992px){.menu__item:not(:last-child){margin:0rem 0rem 1.5rem 0rem}}\n",""])},function(e,t,n){var o=n(199);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".page-container{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.page-container__main{-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto}.page-container__copyright-bar{border-top:0.0714rem solid #e5e5e5}\n",""])},function(e,t,n){var o=n(201);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".pagination{width:100%;max-width:240px}.pagination__head{margin-bottom:1.0714rem}.pagination__buttons{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.pagination__bottom-text{margin-top:0.5714rem}\n",""])},function(e,t,n){var o=n(203);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".radio-button{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.radio-button__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.radio-button__text{margin-left:0.7143rem}\n",""])},function(e,t,n){var o=n(205);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".radio-buttons__head{margin-bottom:1.1429rem}.radio-buttons__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.radio-buttons__button:not(:last-child){margin-right:1.4286rem}\n",""])},function(e,t,n){var o=n(207);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".range-slider{width:100%;min-width:266px}.range-slider__bg-line{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;position:absolute;top:0;bottom:0;left:0;right:0;z-index:1;width:auto;background:-webkit-gradient(linear, left top, left bottom, from(#6fcf97), to(#66d2ea));background:-o-linear-gradient(top, #6fcf97 0%, #66d2ea 100%);background:linear-gradient(180deg, #6fcf97 0%, #66d2ea 100%)}.range-slider__bottom-text{margin-top:0.6429rem}.range-slider__head{margin-bottom:1.6429rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.range-slider__line{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;z-index:1;width:100%;height:0.4286rem;border-radius:0.2143rem;position:relative;border:0.0714rem solid rgba(31,32,65,0.25098)}.range-slider__point{display:block;position:absolute;top:-0.4286rem;left:-8px;z-index:2;width:0.8571rem;height:0.8571rem;background:-webkit-gradient(linear, left top, left bottom, from(#6fcf97), to(#66d2ea));background:-o-linear-gradient(top, #6fcf97 0%, #66d2ea 100%);background:linear-gradient(180deg, #6fcf97 0%, #66d2ea 100%);border:0.1429rem solid #ffffff;border-radius:0.7143rem}\n",""])},function(e,t,n){var o=n(209);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".rating-buttons__head{margin-bottom:1.0714rem}.rating-buttons__container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row}.rating-buttons__rating:not(:last-child){margin-right:1.4286rem}\n",""])},function(e,t,n){var o=n(211);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".rating{width:120px}.rating__star{display:inline-block;vertical-align:middle;width:1.7143rem;height:1.7143rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:1.7143rem;line-height:1.7143rem;text-align:center;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.rating__star:hover{background:#6fcf97;-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}.rating__star:active{text-shadow:0px 0px 10px #6fcf97}\n",""])},function(e,t,n){var o=n(213);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".receipt__item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:start;-webkit-justify-content:flex-start;-ms-flex-pack:start;justify-content:flex-start;margin-bottom:1.1429rem}.receipt__text-container{width:100%;max-width:215px;margin-right:0.3571rem}.receipt__icon{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;width:1.4286rem;height:1.4286rem;border-radius:50%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border:0.0714rem solid rgba(31,32,65,0.25098);color:rgba(31,32,65,0.25098);cursor:pointer}.receipt__price{-webkit-box-flex:1;-webkit-flex:auto;-ms-flex:auto;flex:auto}.receipt__total-sum{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}.receipt__total-sum:not(:only-child){margin-top:2.2143rem}.receipt__separate-line{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;margin:0 0.3571rem;height:0.0714rem;border-bottom:0.0714rem dotted rgba(31,32,65,0.25098)}\n",""])},function(e,t,n){var o=n(215);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".rich-checkbox-button{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}.rich-checkbox-button__container{margin-left:0.7143rem;width:270px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.rich-checkbox-button__text{margin-bottom:0.3571rem}\n",""])},function(e,t,n){var o=n(217);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".rich-checkbox-buttons__head{margin-bottom:1.1429rem}.rich-checkbox-buttons__button:not(:last-child){margin-bottom:0.6429rem}\n",""])},function(e,t,n){var o=n(219);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-advantage{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;border-bottom:0.0714rem solid rgba(31,32,65,0.101961);padding-bottom:1.2143rem}.room-advantage__icon{width:3.4286rem;height:3.4286rem;font-family:Material Icons;font-style:normal;font-weight:normal;font-size:3.4286rem;line-height:3.4286rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center;background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;margin-right:0.7143rem}\n",""])},function(e,t,n){var o=n(221);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-advantages__head{margin-bottom:1.3571rem}.room-advantages__room-advantage:not(:last-child){margin-bottom:1.6429rem}\n",""])},function(e,t,n){var o=n(223);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-details-banner{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width: 768px){.room-details-banner{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}}.room-details-banner__img-column{width:32%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}@media (max-width: 768px){.room-details-banner__img-column{width:100%}}.room-details-banner__img-item-container{height:50%}@media (max-width: 768px){.room-details-banner__img-item-container{height:auto}}.room-details-banner__img-item{width:100%}.room-details-banner__main-img-container{width:68%}@media (max-width: 768px){.room-details-banner__main-img-container{width:100%}}.room-details-banner__main-img{width:100%;height:100%}\n",""])},function(e,t,n){var o=n(225);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-head{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}.room-head__luxury{margin-left:0.3571rem}.room-head__price-number{margin-right:0.2857rem}.room-head__room-number{text-decoration:none;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline;cursor:pointer}.room-head__room-number:active,.room-head__room-number:hover,.room-head__room-number:focus{text-decoration:none;outline:none}.room-head__room-number:visited{text-decoration:none}.room-head__room-number:hover,.room-head__room-number:active{-webkit-text-decoration:underline rgba(31,32,65,0.25098);text-decoration:underline rgba(31,32,65,0.25098)}.room-head__room-price{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:baseline;-webkit-align-items:baseline;-ms-flex-align:baseline;align-items:baseline}\n",""])},function(e,t,n){var o=n(227);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-impressions__head{margin-bottom:1.4286rem}.room-impressions__body{width:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:end;-webkit-align-items:flex-end;-ms-flex-align:end;align-items:flex-end}.room-impressions__diagram-counter{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;position:absolute;left:0;top:0;padding-top:2.5rem;width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.room-impressions__diagram-image{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.room-impressions__diagram{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;margin-bottom:0.1429rem;width:120px;height:120px;display:block;position:relative}.room-impressions__help-item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start}.room-impressions__help-list{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;list-style:none;margin-left:2.1429rem}.room-impressions__help-marker{width:0.7143rem;min-width:0.7143rem;height:0.7143rem;display:block;border-radius:50%}.room-impressions__help-marker_color_very-good{background:-webkit-gradient(linear, left top, left bottom, from(#FFE39C), to(#FFBA9C));background:-o-linear-gradient(top, #FFE39C 0%, #FFBA9C 100%);background:linear-gradient(180deg, #FFE39C 0%, #FFBA9C 100%)}.room-impressions__help-marker_color_good{background:-webkit-gradient(linear, left top, left bottom, from(#6FCF97), to(#66D2EA));background:-o-linear-gradient(top, #6FCF97 0%, #66D2EA 100%);background:linear-gradient(180deg, #6FCF97 0%, #66D2EA 100%)}.room-impressions__help-marker_color_normal{background:-webkit-gradient(linear, left top, left bottom, from(#BC9CFF), to(#8BA4F9));background:-o-linear-gradient(top, #BC9CFF 0%, #8BA4F9 100%);background:linear-gradient(180deg, #BC9CFF 0%, #8BA4F9 100%)}.room-impressions__help-marker_color_bad{background:-webkit-gradient(linear, left top, left bottom, from(#919191), to(#3D4975));background:-o-linear-gradient(top, #919191 0%, #3D4975 100%);background:linear-gradient(180deg, #919191 0%, #3D4975 100%)}.room-impressions__marker-container{margin-right:0.3571rem;width:0.7143rem;min-width:0.7143rem;height:1.7143rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}\n",""])},function(e,t,n){var o=n(229);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".search-filters{width:266px}.search-filters__checkbox-list{margin-bottom:2.0714rem}.search-filters__dropdown-filter-date{margin-bottom:1.5714rem}.search-filters__dropdown-guest{margin-bottom:2.2857rem}.search-filters__dropdown-room-amenities{margin-bottom:1.1429rem}.search-filters__range-slider{margin-bottom:1.7857rem}.search-filters__rich-checkbox-buttons{margin-bottom:2.2143rem}\n",""])},function(e,t,n){var o=n(231);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".text-demo-item{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;max-width:400px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex}.text-demo-item__value{margin-left:2.2143rem}.text-demo-item__name{width:100%;min-width:2.6429rem;max-width:2.6429rem;text-align:right}\n",""])},function(e,t,n){var o=n(233);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".text-demo{width:auto}.text-demo__item :not(:last-child){margin-bottom:3.5714rem}\n",""])},function(e,t,n){var o=n(235);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".text-field{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.text-field__head{margin-bottom:0.2857rem}\n",""])},function(e,t,n){var o=n(237);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".text{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;font-family:Quicksand;font-style:normal;font-weight:bold;color:#1F2041}.text_theme_h1{font-size:1.7143rem;line-height:2.1429rem}.text_theme_h2{font-size:1.3571rem;line-height:1.7143rem}.text_theme_h3{font-family:Montserrat;font-size:0.8571rem;line-height:1.0714rem;text-transform:uppercase}.text_theme_body{font-family:Montserrat;font-weight:normal;font-size:1rem;line-height:1.7143rem;color:rgba(31,32,65,0.74902)}.text_white-space_nowrap{white-space:nowrap}.text_white-space_pre{white-space:pre}.text_transform_none{text-transform:none}.text_transform_uppercase{text-transform:uppercase}.text_line-height_big{line-height:2.1429rem}.text_line-height_middle{line-height:1.4286rem}.text_line-height_small{line-height:1.2857rem}.text_line-height_very-small{line-height:1.0714rem}.text_horizontal_middle{width:100%;text-align:center}.text_horizontal_right{text-align:right}.text_font-weight_bold{font-weight:bold}.text_font-weight_normal{font-weight:normal}.text_color_important-text{color:#000000}.text_color_text-title{color:#1F2041}.text_color_text-primary{color:rgba(31,32,65,0.74902)}.text_color_text-secondary{color:rgba(31,32,65,0.501961)}.text_color_light-title{color:rgba(31,32,65,0.25098)}.text_color_primary{color:#bc9cff}.text_font-name_montserrat{font-family:Montserrat}.text_size_small{font-size:0.8571rem}.text_no-select{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.text_vertical-middle{vertical-align:middle}.text_vertical-middle::before{content:'';display:inline-block;height:100%;vertical-align:middle}.text_word-break_break-all{word-break:break-all}\n",""])},function(e,t,n){var o=n(239);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".toggle-button{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}.toggle-button__text{margin-left:0.7143rem}\n",""])},function(e,t,n){var o=n(241);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".toggle-buttons__head{margin-bottom:0.9286rem}.toggle-buttons__button:not(:last-child){margin-bottom:0.7143rem}\n",""])},function(e,t,n){var o={"./landing-page/landing-page.scss":243,"./registration/registration.scss":246,"./room-details/room-details.scss":248,"./search-room/search-room.scss":250,"./sign-in/sign-in.scss":252,"./ui-kit/ui-kit.scss":254};function r(e){var t=i(e);return n(t)}function i(e){if(!n.o(o,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return o[e]}r.keys=function(){return Object.keys(o)},r.resolve=i,e.exports=r,r.id=242},function(e,t,n){var o=n(244);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){t=e.exports=n(0)(!1);var o=n(5)(n(245));t.push([e.i,".landing-page__banner{width:100%;max-width:1920px;margin:0 auto;height:830px;display:block;background-image:url("+o+");background-position:100% 100%;background-repeat:no-repeat;background-size:cover}.landing-page__banner-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;position:relative;width:100%;height:100%;padding-top:5rem}.landing-page__description{width:100%;max-width:290px;position:absolute;right:-0.4286rem;bottom:1.5rem}\n",""])},function(e,t,n){"use strict";n.r(t),t.default=n.p+"images/banners/landing-page.jpg"},function(e,t,n){var o=n(247);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){t=e.exports=n(0)(!1);var o=n(5)(n(41));t.push([e.i,".registration__banner{width:100%;max-width:1920px;margin:0 auto;height:702px;display:block;background-image:url("+o+");background-position:100% 100%;background-repeat:no-repeat;background-size:cover}.registration__banner-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;height:100%;padding-top:2.1429rem;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center}\n",""])},function(e,t,n){var o=n(249);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".room-details{border-bottom:0.0714rem solid #e5e5e5}.room-details__banner{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;margin:0 auto;width:100%;max-width:1440px;min-width:320px}.room-details__cancel-reservation-head{margin-bottom:1.2143rem}.room-details__cancel-reservation{max-width:340px}.room-details__comments{margin-bottom:2.4286rem}.room-details__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding:4.8571rem 0rem 5.1429rem 0rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}@media (max-width: 1200px){.room-details__container-content{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}}.room-details__info-item{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap}.room-details__info-item:not(:last-child){margin-bottom:1.1429rem}@media (max-width: 1200px){.room-details__info-item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}}.room-details__main-info{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding-top:0.1429rem;width:100%;margin-right:5rem}@media (max-width: 1200px){.room-details__main-info{margin:0rem 0rem 2.8571rem 0rem}}.room-details__room-advantages{margin-right:107px}@media (max-width: 1200px){.room-details__room-advantages{margin:0rem 0rem 2.1429rem 0rem}}.room-details__rules{margin-right:6.5714rem}@media (max-width: 1200px){.room-details__rules{margin:0rem 0rem 2.1429rem 0rem}}\n",""])},function(e,t,n){var o=n(251);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".search-room__container-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding:2.2143rem 0rem 5.2143rem 0rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-flex-wrap:nowrap;-ms-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between}.search-room__hotel-rooms{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%}.search-room__search-filters{margin-right:4.3571rem}\n",""])},function(e,t,n){var o=n(253);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){t=e.exports=n(0)(!1);var o=n(5)(n(41));t.push([e.i,".sign-in__banner{width:100%;max-width:1920px;margin:0 auto;height:684px;display:block;background-image:url("+o+");background-position:100% 100%;background-repeat:no-repeat;background-size:cover}.sign-in__banner-content{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;width:100%;height:100%;position:relative;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-webkit-flex-direction:row;-ms-flex-direction:row;flex-direction:row;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center}\n",""])},function(e,t,n){var o=n(255);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(1)(o,r);o.locals&&(e.exports=o.locals)},function(e,t,n){(e.exports=n(0)(!1)).push([e.i,".ui-kit{padding-bottom:3.5714rem}.ui-kit__head{padding:0;margin:0;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;padding:2.1429rem 0rem 0rem 2.1429rem;width:100%;max-width:1440px;margin:0 auto}\n",""])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qcyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2pxdWVyeS9kaXN0L2pxdWVyeS5qcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9jbGFzc2VzLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhbGVuZGFyL3ZpZXcvdmlldy50cyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9saWIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tZ3Vlc3QvY2xhc3Nlcy50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kYXRlLXJhbmdlL2NsYXNzZXMudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tZ3Vlc3Qvdmlldy92aWV3LnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWd1ZXN0L2xpYi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9saWtlLWJ1dHRvbi9jbGFzc2VzLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JhbmdlLXNsaWRlci9jbGFzc2VzLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2J1dHRvbi9wbHVnaW4vcGx1Z2luLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2J1dHRvbi9wbHVnaW4vaGFuZGxlci50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9jYWxlbmRhcl9fYnRuLWNoYW5nZS1tb250aC50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9wbHVnaW4vcGx1Z2luLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhbGVuZGFyL3BsdWdpbi9oYW5kbGVyLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhbGVuZGFyL2NhbGVuZGFyX19kYXktd2Vlay50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9jYWxlbmRhcl9fYnRuLWFwcGx5LnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhbGVuZGFyL2NhbGVuZGFyX19idG4tY2xlYXIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZGF0ZS1yYW5nZS9kYXRlLXJhbmdlX19kcm9wZG93bi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kYXRlLXJhbmdlL2xpYi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1jb3VudGVyL3BsdWdpbi9wbHVnaW4udHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tY291bnRlci9wbHVnaW4vaGFuZGxlci50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1ndWVzdC9kcm9wZG93bi1ndWVzdF9fYnRuLWFwcGx5LnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWd1ZXN0L2Ryb3Bkb3duLWd1ZXN0X19idG4tY2xlYXIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24taGVhZC9wbHVnaW4vcGx1Z2luLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWhlYWQvcGx1Z2luL2hhbmRsZXIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tcm9vbS1hbWVuaXRpZXMvY2FzZS10YWJsZXMudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24vY2xhc3Nlcy50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi9wbHVnaW4vcGx1Z2luLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duL3BsdWdpbi9oYW5kbGVyLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2ltYWdlLXNsaWRlci9jbGFzc2VzLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2ltYWdlLXNsaWRlci9pbWFnZS1zbGlkZXJfX25hdi1idXR0b24udHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbGlrZS1idXR0b24vcGx1Z2luL3BsdWdpbi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9saWtlLWJ1dHRvbi9wbHVnaW4vaGFuZGxlci50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9tZW51LWl0ZW0tZXhwYW5kYWJsZS9jbGFzc2VzLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL21lbnUtaXRlbS1leHBhbmRhYmxlL21lbnUtaXRlbS1leHBhbmRhYmxlX19idG4tZXhwYW5kLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JhbmdlLXNsaWRlci9tb2RlbC9tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYW5nZS1zbGlkZXIvdmlldy92aWV3LnRzIiwid2VicGFjazovLy8uL2NodW5rcy9pbWFnZXMvYmFubmVycy9sb2dpbi1yZWdpc3RyYXRpb24ucG5nIiwid2VicGFjazovLy8uL2luZGV4LnRzIiwid2VicGFjazovLy8uL3N0eWxlcy9mb250cy5zY3NzP2JmNzAiLCJ3ZWJwYWNrOi8vLy4vc3R5bGVzL2ZvbnRzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL0ZvbnQgQXdlc29tZSA1IEJyYW5kcy1SZWd1bGFyLTQwMC5lb3QiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL0ZvbnQgQXdlc29tZSA1IEJyYW5kcy1SZWd1bGFyLTQwMC53b2ZmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Gb250IEF3ZXNvbWUgNSBCcmFuZHMtUmVndWxhci00MDAudHRmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Gb250IEF3ZXNvbWUgNSBCcmFuZHMtUmVndWxhci00MDAuc3ZnIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUJvbGQuZW90Iiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUJvbGQud29mZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1Cb2xkLnR0ZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1Cb2xkLnN2ZyIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGQuZW90Iiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZC53b2ZmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZC50dGYiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtRXh0cmFCb2xkLnN2ZyIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGRJdGFsaWMuZW90Iiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZEl0YWxpYy53b2ZmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZEl0YWxpYy50dGYiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtRXh0cmFCb2xkSXRhbGljLnN2ZyIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1SZWd1bGFyLmVvdCIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1SZWd1bGFyLndvZmYiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci50dGYiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci5zdmciLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1Cb2xkLmVvdCIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLUJvbGQud29mZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLUJvbGQudHRmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9RdWlja3NhbmQtQm9sZC5zdmciLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1MaWdodC5lb3QiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1MaWdodC53b2ZmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9RdWlja3NhbmQtTGlnaHQudHRmIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9RdWlja3NhbmQtTGlnaHQuc3ZnIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9RdWlja3NhbmQtUmVndWxhci5lb3QiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1SZWd1bGFyLndvZmYiLCJ3ZWJwYWNrOi8vLy4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1SZWd1bGFyLnR0ZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLVJlZ3VsYXIuc3ZnIiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIuZW90Iiwid2VicGFjazovLy8uL2NodW5rcy9mb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIud29mZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnR0ZiIsIndlYnBhY2s6Ly8vLi9jaHVua3MvZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnN2ZyIsIndlYnBhY2s6Ly8vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2NrcyBzeW5jIC50cyQiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYnV0dG9uL2J1dHRvbi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9jYWxlbmRhci50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kYXRlLXJhbmdlL2RhdGUtcmFuZ2UudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tY291bnRlci9kcm9wZG93bi1jb3VudGVyLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWd1ZXN0L2Ryb3Bkb3duLWd1ZXN0LnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWhlYWQvZHJvcGRvd24taGVhZC50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1yb29tLWFtZW5pdGllcy9kcm9wZG93bi1yb29tLWFtZW5pdGllcy50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi9kcm9wZG93bi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9leHBhbmRhYmxlLWNoZWNrYm94LWxpc3QvZXhwYW5kYWJsZS1jaGVja2JveC1saXN0LnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2hlYWRlci9oZWFkZXJfX21lbnUtbW9iaWxlLWJ0bi50cyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbWFnZS1zbGlkZXIvaW1hZ2Utc2xpZGVyLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2xpa2UtYnV0dG9uL2xpa2UtYnV0dG9uLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL21lbnUtaXRlbS1leHBhbmRhYmxlL21lbnUtaXRlbS1leHBhbmRhYmxlLnRzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JhbmdlLXNsaWRlci9yYW5nZS1zbGlkZXIudHMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3Mgc3luYyAuKHNhfHNjfGMpc3MkIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Jsb2NrLWhlYWQvYmxvY2staGVhZC5zY3NzPzZmNGIiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYmxvY2staGVhZC9ibG9jay1oZWFkLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYnVsbGV0LWxpc3QtaXRlbS9idWxsZXQtbGlzdC1pdGVtLnNjc3M/ZjRjMCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9idWxsZXQtbGlzdC1pdGVtL2J1bGxldC1saXN0LWl0ZW0uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9idWxsZXQtbGlzdC9idWxsZXQtbGlzdC5zY3NzP2ViN2YiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYnVsbGV0LWxpc3QvYnVsbGV0LWxpc3Quc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9idXR0b24vYnV0dG9uLnNjc3M/YTJjNCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9idXR0b24vYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYnV0dG9ucy1kZW1vL2J1dHRvbnMtZGVtby5zY3NzPzAxZTMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvYnV0dG9ucy1kZW1vL2J1dHRvbnMtZGVtby5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhbGVuZGFyL2NhbGVuZGFyLnNjc3M/Y2RmNiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYWxlbmRhci9jYWxlbmRhci5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NhcmQtYWNjb3VudC1yZWdpc3RyYXRpb24vY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbi5zY3NzP2M3ZDgiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbi9jYXJkLWFjY291bnQtcmVnaXN0cmF0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZC1hdXRoZW50aWNhdGlvbi9jYXJkLWF1dGhlbnRpY2F0aW9uLnNjc3M/NzY3OSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLWF1dGhlbnRpY2F0aW9uL2NhcmQtYXV0aGVudGljYXRpb24uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLWJvb2stcm9vbS9jYXJkLWJvb2stcm9vbS5zY3NzP2RmY2MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZC1ib29rLXJvb20vY2FyZC1ib29rLXJvb20uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLWNvbnRhaW5lci9jYXJkLWNvbnRhaW5lci5zY3NzPzFlYmEiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZC1jb250YWluZXIvY2FyZC1jb250YWluZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLXJvb20taW5mb3JtYXRpb24vY2FyZC1yb29tLWluZm9ybWF0aW9uLnNjc3M/YTdlMSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLXJvb20taW5mb3JtYXRpb24vY2FyZC1yb29tLWluZm9ybWF0aW9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZC1zZWxlY3Rpb24tcm9vbS9jYXJkLXNlbGVjdGlvbi1yb29tLnNjc3M/NDc1OSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkLXNlbGVjdGlvbi1yb29tL2NhcmQtc2VsZWN0aW9uLXJvb20uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jYXJkcy9jYXJkcy5zY3NzP2ZlOGMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2FyZHMvY2FyZHMuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jaGVja2JveC1idXR0b24vY2hlY2tib3gtYnV0dG9uLnNjc3M/NDllZSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jaGVja2JveC1idXR0b24vY2hlY2tib3gtYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY2hlY2tib3gtbGlzdC9jaGVja2JveC1saXN0LnNjc3M/NjI1NyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jaGVja2JveC1saXN0L2NoZWNrYm94LWxpc3Quc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jb2xvci1kZW1vLWl0ZW0vY29sb3ItZGVtby1pdGVtLnNjc3M/OTM2NiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jb2xvci1kZW1vLWl0ZW0vY29sb3ItZGVtby1pdGVtLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29sb3JzLWFuZC10eXBlL2NvbG9ycy1hbmQtdHlwZS5zY3NzP2FlODYiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29sb3JzLWFuZC10eXBlL2NvbG9ycy1hbmQtdHlwZS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NvbG9ycy1kZW1vL2NvbG9ycy1kZW1vLnNjc3M/YzhkNCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jb2xvcnMtZGVtby9jb2xvcnMtZGVtby5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NvbW1lbnQvY29tbWVudC5zY3NzP2Y1YTIiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29tbWVudC9jb21tZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29tbWVudHMvY29tbWVudHMuc2Nzcz8wOTAyIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NvbW1lbnRzL2NvbW1lbnRzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29udGFpbmVyLWNvbnRlbnQvY29udGFpbmVyLWNvbnRlbnQuc2Nzcz9jMmJjIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2NvbnRhaW5lci1jb250ZW50L2NvbnRhaW5lci1jb250ZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvY29weXJpZ2h0LWJhci9jb3B5cmlnaHQtYmFyLnNjc3M/YzU2YSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9jb3B5cmlnaHQtYmFyL2NvcHlyaWdodC1iYXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kYXRlLXJhbmdlL2RhdGUtcmFuZ2Uuc2Nzcz8xZjViIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2RhdGUtcmFuZ2UvZGF0ZS1yYW5nZS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2RhdGUtcmFuZ2UvZGF0ZS1yYW5nZV9fZHJvcGRvd24uc2Nzcz9kZGRjIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2RhdGUtcmFuZ2UvZGF0ZS1yYW5nZV9fZHJvcGRvd24uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1jb3VudGVyL2Ryb3Bkb3duLWNvdW50ZXIuc2Nzcz82MGRjIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWNvdW50ZXIvZHJvcGRvd24tY291bnRlci5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWZpbHRlci1kYXRlL2Ryb3Bkb3duLWZpbHRlci1kYXRlLnNjc3M/ZjM2MCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1maWx0ZXItZGF0ZS9kcm9wZG93bi1maWx0ZXItZGF0ZS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWd1ZXN0L2Ryb3Bkb3duLWd1ZXN0LnNjc3M/ZGZiZiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9kcm9wZG93bi1ndWVzdC9kcm9wZG93bi1ndWVzdC5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLWhlYWQvZHJvcGRvd24taGVhZC5zY3NzPzVmNTMiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24taGVhZC9kcm9wZG93bi1oZWFkLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24tcm9vbS1hbWVuaXRpZXMvZHJvcGRvd24tcm9vbS1hbWVuaXRpZXMuc2Nzcz80OGVkIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duLXJvb20tYW1lbml0aWVzL2Ryb3Bkb3duLXJvb20tYW1lbml0aWVzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZHJvcGRvd24vZHJvcGRvd24uc2Nzcz83MTQxIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Ryb3Bkb3duL2Ryb3Bkb3duLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZXhwYW5kYWJsZS1jaGVja2JveC1saXN0L2V4cGFuZGFibGUtY2hlY2tib3gtbGlzdC5zY3NzP2RkODgiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvZXhwYW5kYWJsZS1jaGVja2JveC1saXN0L2V4cGFuZGFibGUtY2hlY2tib3gtbGlzdC5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvb3Rlci1jcmVhdGl2ZS9mb290ZXItY3JlYXRpdmUuc2Nzcz9jOGRkIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvb3Rlci1jcmVhdGl2ZS9mb290ZXItY3JlYXRpdmUuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9mb290ZXItbmF2L2Zvb3Rlci1uYXYuc2Nzcz80NGQ1Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvb3Rlci1uYXYvZm9vdGVyLW5hdi5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvb3Rlci9mb290ZXIuc2Nzcz9iOGYyIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvb3Rlci9mb290ZXIuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9mb3JtLWVsZW1lbnRzL2Zvcm0tZWxlbWVudHMuc2Nzcz84MTg0Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2Zvcm0tZWxlbWVudHMvZm9ybS1lbGVtZW50cy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2hlYWRlci1mb290ZXIvaGVhZGVyLWZvb3Rlci5zY3NzPzE3YzIiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaGVhZGVyLWZvb3Rlci9oZWFkZXItZm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaGVhZGVyL2hlYWRlci5zY3NzP2I5NjQiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaGVhZGVyL2hlYWRlci5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2hvdGVsLXJvb21zL2hvdGVsLXJvb21zLnNjc3M/YTJhZiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9ob3RlbC1yb29tcy9ob3RlbC1yb29tcy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2h0bWwtYm9keS9odG1sLWJvZHkuc2Nzcz8zYTM2Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2h0bWwtYm9keS9odG1sLWJvZHkuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbWFnZS1zbGlkZXIvaW1hZ2Utc2xpZGVyLnNjc3M/YWYwYiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbWFnZS1zbGlkZXIvaW1hZ2Utc2xpZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaW5wdXQtY2hlY2tib3gvaW5wdXQtY2hlY2tib3guc2Nzcz82MjVlIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2lucHV0LWNoZWNrYm94L2lucHV0LWNoZWNrYm94LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaW5wdXQtcmFkaW8vaW5wdXQtcmFkaW8uc2Nzcz8xZjIxIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2lucHV0LXJhZGlvL2lucHV0LXJhZGlvLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvaW5wdXQtdGV4dC9pbnB1dC10ZXh0LnNjc3M/ZjZlYSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbnB1dC10ZXh0L2lucHV0LXRleHQuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbnB1dC10b2dnbGUvaW5wdXQtdG9nZ2xlLnNjc3M/NTNiNyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9pbnB1dC10b2dnbGUvaW5wdXQtdG9nZ2xlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbGlrZS1idXR0b24vbGlrZS1idXR0b24uc2Nzcz8wYjIxIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2xpa2UtYnV0dG9uL2xpa2UtYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbGlrZS1idXR0b25zL2xpa2UtYnV0dG9ucy5zY3NzP2Q1ZDQiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbGlrZS1idXR0b25zL2xpa2UtYnV0dG9ucy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL2xvZ28vbG9nby5zY3NzP2M0NjIiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbG9nby9sb2dvLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbWVudS1pdGVtLWV4cGFuZGFibGUvbWVudS1pdGVtLWV4cGFuZGFibGUuc2Nzcz84ZDQ0Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL21lbnUtaXRlbS1leHBhbmRhYmxlL21lbnUtaXRlbS1leHBhbmRhYmxlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbWVudS1pdGVtL21lbnUtaXRlbS5zY3NzPzUyZWYiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbWVudS1pdGVtL21lbnUtaXRlbS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL21lbnUvbWVudS5zY3NzP2M0MjQiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvbWVudS9tZW51LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcGFnZS1jb250YWluZXIvcGFnZS1jb250YWluZXIuc2Nzcz9iOTI3Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3BhZ2UtY29udGFpbmVyL3BhZ2UtY29udGFpbmVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcGFnaW5hdGlvbi9wYWdpbmF0aW9uLnNjc3M/MTY0ZSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9wYWdpbmF0aW9uL3BhZ2luYXRpb24uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLnNjc3M/YmRiZCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYWRpby1idXR0b24vcmFkaW8tYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmFkaW8tYnV0dG9ucy9yYWRpby1idXR0b25zLnNjc3M/MTdhMyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYWRpby1idXR0b25zL3JhZGlvLWJ1dHRvbnMuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYW5nZS1zbGlkZXIvcmFuZ2Utc2xpZGVyLnNjc3M/ZTFlMCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yYW5nZS1zbGlkZXIvcmFuZ2Utc2xpZGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmF0aW5nLWJ1dHRvbnMvcmF0aW5nLWJ1dHRvbnMuc2Nzcz83YWVjIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JhdGluZy1idXR0b25zL3JhdGluZy1idXR0b25zLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmF0aW5nL3JhdGluZy5zY3NzPzQ2YTEiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmF0aW5nL3JhdGluZy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JlY2VpcHQvcmVjZWlwdC5zY3NzP2I3YjkiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmVjZWlwdC9yZWNlaXB0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmljaC1jaGVja2JveC1idXR0b24vcmljaC1jaGVja2JveC1idXR0b24uc2Nzcz8xNjAzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3JpY2gtY2hlY2tib3gtYnV0dG9uL3JpY2gtY2hlY2tib3gtYnV0dG9uLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmljaC1jaGVja2JveC1idXR0b25zL3JpY2gtY2hlY2tib3gtYnV0dG9ucy5zY3NzPzRhZjkiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvcmljaC1jaGVja2JveC1idXR0b25zL3JpY2gtY2hlY2tib3gtYnV0dG9ucy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20tYWR2YW50YWdlL3Jvb20tYWR2YW50YWdlLnNjc3M/NjYxMiIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yb29tLWFkdmFudGFnZS9yb29tLWFkdmFudGFnZS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20tYWR2YW50YWdlcy9yb29tLWFkdmFudGFnZXMuc2Nzcz8xYjBhIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20tYWR2YW50YWdlcy9yb29tLWFkdmFudGFnZXMuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yb29tLWRldGFpbHMtYmFubmVyL3Jvb20tZGV0YWlscy1iYW5uZXIuc2Nzcz8zNzBmIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20tZGV0YWlscy1iYW5uZXIvcm9vbS1kZXRhaWxzLWJhbm5lci5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20taGVhZC9yb29tLWhlYWQuc2Nzcz82Mzg0Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20taGVhZC9yb29tLWhlYWQuc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9yb29tLWltcHJlc3Npb25zL3Jvb20taW1wcmVzc2lvbnMuc2Nzcz9mMTgwIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3Jvb20taW1wcmVzc2lvbnMvcm9vbS1pbXByZXNzaW9ucy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3NlYXJjaC1maWx0ZXJzL3NlYXJjaC1maWx0ZXJzLnNjc3M/YzJhYSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy9zZWFyY2gtZmlsdGVycy9zZWFyY2gtZmlsdGVycy5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3RleHQtZGVtby1pdGVtL3RleHQtZGVtby1pdGVtLnNjc3M/ZWIzNCIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy90ZXh0LWRlbW8taXRlbS90ZXh0LWRlbW8taXRlbS5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3RleHQtZGVtby90ZXh0LWRlbW8uc2Nzcz8yNDY5Iiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3RleHQtZGVtby90ZXh0LWRlbW8uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy90ZXh0LWZpZWxkL3RleHQtZmllbGQuc2Nzcz8wNzdlIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3RleHQtZmllbGQvdGV4dC1maWVsZC5zY3NzIiwid2VicGFjazovLy8uL2Rlc2t0b3AuYmxvY2tzL3RleHQvdGV4dC5zY3NzP2ZkNzIiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvdGV4dC90ZXh0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvdG9nZ2xlLWJ1dHRvbi90b2dnbGUtYnV0dG9uLnNjc3M/MWE4ZSIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy90b2dnbGUtYnV0dG9uL3RvZ2dsZS1idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9kZXNrdG9wLmJsb2Nrcy90b2dnbGUtYnV0dG9ucy90b2dnbGUtYnV0dG9ucy5zY3NzP2NkNjciLCJ3ZWJwYWNrOi8vLy4vZGVza3RvcC5ibG9ja3MvdG9nZ2xlLWJ1dHRvbnMvdG9nZ2xlLWJ1dHRvbnMuc2NzcyIsIndlYnBhY2s6Ly8vLi9wYWdlcyBzeW5jIC4oc2F8c2N8YylzcyQiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvbGFuZGluZy1wYWdlL2xhbmRpbmctcGFnZS5zY3NzPzdhYzYiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvbGFuZGluZy1wYWdlL2xhbmRpbmctcGFnZS5zY3NzIiwid2VicGFjazovLy8uL2NodW5rcy9pbWFnZXMvYmFubmVycy9sYW5kaW5nLXBhZ2UuanBnIiwid2VicGFjazovLy8uL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uc2Nzcz81NmFjIiwid2VicGFjazovLy8uL3BhZ2VzL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uc2NzcyIsIndlYnBhY2s6Ly8vLi9wYWdlcy9yb29tLWRldGFpbHMvcm9vbS1kZXRhaWxzLnNjc3M/N2Y5YyIsIndlYnBhY2s6Ly8vLi9wYWdlcy9yb29tLWRldGFpbHMvcm9vbS1kZXRhaWxzLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvc2VhcmNoLXJvb20vc2VhcmNoLXJvb20uc2Nzcz80NGZhIiwid2VicGFjazovLy8uL3BhZ2VzL3NlYXJjaC1yb29tL3NlYXJjaC1yb29tLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vcGFnZXMvc2lnbi1pbi9zaWduLWluLnNjc3M/OGFkOCIsIndlYnBhY2s6Ly8vLi9wYWdlcy9zaWduLWluL3NpZ24taW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9wYWdlcy91aS1raXQvdWkta2l0LnNjc3M/OTAzMiIsIndlYnBhY2s6Ly8vLi9wYWdlcy91aS1raXQvdWkta2l0LnNjc3MiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwiY29uY2F0Iiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2UiLCJzb3VyY2VSb290Iiwiam9pbiIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJtZWRpYVF1ZXJ5IiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImxlbmd0aCIsImlkIiwiX2kiLCJwdXNoIiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwid2luZG93IiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJwYXJlbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RWxlbWVudCIsInN0eWxlVGFyZ2V0IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwib3B0aW9ucyIsImRvbVN0eWxlIiwicmVmcyIsImoiLCJwYXJ0cyIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJjc3MiLCJtZWRpYSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsIkVycm9yIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ1bmRlZmluZWQiLCJhdHRycyIsInR5cGUiLCJub25jZSIsImdldE5vbmNlIiwiYWRkQXR0cnMiLCJlbCIsImtleXMiLCJmb3JFYWNoIiwic2V0QXR0cmlidXRlIiwib2JqIiwidXBkYXRlIiwicmVtb3ZlIiwicmVzdWx0IiwidHJhbnNmb3JtIiwiZGVmYXVsdCIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsInVwZGF0ZUxpbmsiLCJocmVmIiwiYXBwbHlUb1RhZyIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwiaW5kZXgiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNzc05vZGUiLCJjcmVhdGVUZXh0Tm9kZSIsImNoaWxkTm9kZXMiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJnbG9iYWwiLCJmYWN0b3J5IiwidyIsIm5vR2xvYmFsIiwiYXJyIiwiZ2V0UHJvdG8iLCJnZXRQcm90b3R5cGVPZiIsInNsaWNlIiwiY2xhc3MydHlwZSIsImhhc093biIsImZuVG9TdHJpbmciLCJPYmplY3RGdW5jdGlvblN0cmluZyIsInN1cHBvcnQiLCJpc0Z1bmN0aW9uIiwibm9kZVR5cGUiLCJpc1dpbmRvdyIsInByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMiLCJzcmMiLCJub01vZHVsZSIsIkRPTUV2YWwiLCJjb2RlIiwibm9kZSIsImRvYyIsInZhbCIsInNjcmlwdCIsInRleHQiLCJnZXRBdHRyaWJ1dGUiLCJ0b1R5cGUiLCJqUXVlcnkiLCJzZWxlY3RvciIsImNvbnRleHQiLCJpbml0IiwicnRyaW0iLCJpc0FycmF5TGlrZSIsImpxdWVyeSIsImNvbnN0cnVjdG9yIiwidG9BcnJheSIsIm51bSIsInB1c2hTdGFjayIsImVsZW1zIiwicmV0IiwibWVyZ2UiLCJwcmV2T2JqZWN0IiwiZWFjaCIsImNhbGxiYWNrIiwiZWxlbSIsImZpcnN0IiwiZXEiLCJsYXN0IiwibGVuIiwiZW5kIiwic29ydCIsImV4dGVuZCIsImNvcHkiLCJjb3B5SXNBcnJheSIsImNsb25lIiwiZGVlcCIsImlzUGxhaW5PYmplY3QiLCJBcnJheSIsImlzQXJyYXkiLCJleHBhbmRvIiwiTWF0aCIsInJhbmRvbSIsInJlcGxhY2UiLCJpc1JlYWR5IiwiZXJyb3IiLCJtc2ciLCJub29wIiwicHJvdG8iLCJDdG9yIiwiaXNFbXB0eU9iamVjdCIsImdsb2JhbEV2YWwiLCJ0cmltIiwibWFrZUFycmF5IiwicmVzdWx0cyIsImluQXJyYXkiLCJzZWNvbmQiLCJncmVwIiwiaW52ZXJ0IiwibWF0Y2hlcyIsImNhbGxiYWNrRXhwZWN0IiwiYXJnIiwiZ3VpZCIsIml0ZXJhdG9yIiwic3BsaXQiLCJ0b0xvd2VyQ2FzZSIsIlNpenpsZSIsIkV4cHIiLCJnZXRUZXh0IiwiaXNYTUwiLCJ0b2tlbml6ZSIsImNvbXBpbGUiLCJzZWxlY3QiLCJvdXRlcm1vc3RDb250ZXh0Iiwic29ydElucHV0IiwiaGFzRHVwbGljYXRlIiwic2V0RG9jdW1lbnQiLCJkb2NFbGVtIiwiZG9jdW1lbnRJc0hUTUwiLCJyYnVnZ3lRU0EiLCJyYnVnZ3lNYXRjaGVzIiwiY29udGFpbnMiLCJEYXRlIiwicHJlZmVycmVkRG9jIiwiZGlycnVucyIsImRvbmUiLCJjbGFzc0NhY2hlIiwiY3JlYXRlQ2FjaGUiLCJ0b2tlbkNhY2hlIiwiY29tcGlsZXJDYWNoZSIsIm5vbm5hdGl2ZVNlbGVjdG9yQ2FjaGUiLCJzb3J0T3JkZXIiLCJhIiwiYiIsInBvcCIsInB1c2hfbmF0aXZlIiwiYm9vbGVhbnMiLCJ3aGl0ZXNwYWNlIiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJwc2V1ZG9zIiwicndoaXRlc3BhY2UiLCJSZWdFeHAiLCJyY29tbWEiLCJyY29tYmluYXRvcnMiLCJyZGVzY2VuZCIsInJwc2V1ZG8iLCJyaWRlbnRpZmllciIsIm1hdGNoRXhwciIsInJodG1sIiwicmlucHV0cyIsInJoZWFkZXIiLCJybmF0aXZlIiwicnF1aWNrRXhwciIsInJzaWJsaW5nIiwicnVuZXNjYXBlIiwiZnVuZXNjYXBlIiwiXyIsImVzY2FwZWQiLCJlc2NhcGVkV2hpdGVzcGFjZSIsImhpZ2giLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJyY3NzZXNjYXBlIiwiZmNzc2VzY2FwZSIsImNoIiwiYXNDb2RlUG9pbnQiLCJjaGFyQ29kZUF0IiwidW5sb2FkSGFuZGxlciIsImluRGlzYWJsZWRGaWVsZHNldCIsImFkZENvbWJpbmF0b3IiLCJkaXNhYmxlZCIsIm5vZGVOYW1lIiwiZGlyIiwibmV4dCIsImVscyIsInNlZWQiLCJuaWQiLCJtYXRjaCIsImdyb3VwcyIsIm5ld1NlbGVjdG9yIiwibmV3Q29udGV4dCIsIm93bmVyRG9jdW1lbnQiLCJleGVjIiwiZ2V0RWxlbWVudEJ5SWQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJ0ZXN0IiwidG9TZWxlY3RvciIsInRlc3RDb250ZXh0IiwicXVlcnlTZWxlY3RvckFsbCIsInFzYUVycm9yIiwicmVtb3ZlQXR0cmlidXRlIiwiY2FjaGUiLCJjYWNoZUxlbmd0aCIsInNoaWZ0IiwibWFya0Z1bmN0aW9uIiwiYXNzZXJ0IiwiYWRkSGFuZGxlIiwiaGFuZGxlciIsImF0dHJIYW5kbGUiLCJzaWJsaW5nQ2hlY2siLCJjdXIiLCJkaWZmIiwic291cmNlSW5kZXgiLCJjcmVhdGVJbnB1dFBzZXVkbyIsImNyZWF0ZUJ1dHRvblBzZXVkbyIsImNyZWF0ZURpc2FibGVkUHNldWRvIiwiaXNEaXNhYmxlZCIsImNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8iLCJhcmd1bWVudCIsIm1hdGNoSW5kZXhlcyIsIm5hbWVzcGFjZSIsIm5hbWVzcGFjZVVSSSIsImRvY3VtZW50RWxlbWVudCIsImhhc0NvbXBhcmUiLCJzdWJXaW5kb3ciLCJkZWZhdWx0VmlldyIsInRvcCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhdHRhY2hFdmVudCIsImNsYXNzTmFtZSIsImNyZWF0ZUNvbW1lbnQiLCJnZXRCeUlkIiwiZ2V0RWxlbWVudHNCeU5hbWUiLCJhdHRySWQiLCJmaW5kIiwiZ2V0QXR0cmlidXRlTm9kZSIsInRhZyIsInRtcCIsImlubmVySFRNTCIsImlucHV0IiwibWF0Y2hlc1NlbGVjdG9yIiwid2Via2l0TWF0Y2hlc1NlbGVjdG9yIiwibW96TWF0Y2hlc1NlbGVjdG9yIiwib01hdGNoZXNTZWxlY3RvciIsIm1zTWF0Y2hlc1NlbGVjdG9yIiwiZGlzY29ubmVjdGVkTWF0Y2giLCJjb21wYXJlRG9jdW1lbnRQb3NpdGlvbiIsImFkb3duIiwiYnVwIiwiY29tcGFyZSIsInNvcnREZXRhY2hlZCIsImF1cCIsImFwIiwiYnAiLCJ1bnNoaWZ0IiwiZXhwciIsImVsZW1lbnRzIiwiYXR0ciIsInNwZWNpZmllZCIsImVzY2FwZSIsInNlbCIsInVuaXF1ZVNvcnQiLCJkdXBsaWNhdGVzIiwiZGV0ZWN0RHVwbGljYXRlcyIsInNvcnRTdGFibGUiLCJ0ZXh0Q29udGVudCIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsInJlbGF0aXZlIiwicHJlRmlsdGVyIiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwiY2hlY2siLCJ3aGF0Iiwic2ltcGxlIiwiZm9yd2FyZCIsIm9mVHlwZSIsInhtbCIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5vZGVJbmRleCIsInN0YXJ0IiwidXNlQ2FjaGUiLCJsYXN0Q2hpbGQiLCJ1bmlxdWVJRCIsInBzZXVkbyIsImFyZ3MiLCJzZXRGaWx0ZXJzIiwibWF0Y2hlZCIsIm1hdGNoZXIiLCJ1bm1hdGNoZWQiLCJsYW5nIiwiZWxlbUxhbmciLCJoYXNoIiwibG9jYXRpb24iLCJhY3RpdmVFbGVtZW50IiwiaGFzRm9jdXMiLCJ0YWJJbmRleCIsImNoZWNrZWQiLCJzZWxlY3RlZCIsInNlbGVjdGVkSW5kZXgiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsInRva2VucyIsImNvbWJpbmF0b3IiLCJza2lwIiwiY2hlY2tOb25FbGVtZW50cyIsImRvbmVOYW1lIiwib2xkQ2FjaGUiLCJuZXdDYWNoZSIsImVsZW1lbnRNYXRjaGVyIiwibWF0Y2hlcnMiLCJjb25kZW5zZSIsIm5ld1VubWF0Y2hlZCIsIm1hcHBlZCIsInNldE1hdGNoZXIiLCJwb3N0RmlsdGVyIiwicG9zdEZpbmRlciIsInBvc3RTZWxlY3RvciIsInRlbXAiLCJwcmVNYXAiLCJwb3N0TWFwIiwicHJlZXhpc3RpbmciLCJjb250ZXh0cyIsIm11bHRpcGxlQ29udGV4dHMiLCJtYXRjaGVySW4iLCJtYXRjaGVyT3V0IiwibWF0Y2hlckZyb21Ub2tlbnMiLCJjaGVja0NvbnRleHQiLCJsZWFkaW5nUmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0IiwiZmlsdGVycyIsInBhcnNlT25seSIsInNvRmFyIiwicHJlRmlsdGVycyIsImNhY2hlZCIsInNldE1hdGNoZXJzIiwiZWxlbWVudE1hdGNoZXJzIiwiYnlTZXQiLCJieUVsZW1lbnQiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImRpcnJ1bnNVbmlxdWUiLCJtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMiLCJ0b2tlbiIsImNvbXBpbGVkIiwiZGVmYXVsdFZhbHVlIiwidW5pcXVlIiwiaXNYTUxEb2MiLCJlc2NhcGVTZWxlY3RvciIsInVudGlsIiwidHJ1bmNhdGUiLCJpcyIsInNpYmxpbmdzIiwicm5lZWRzQ29udGV4dCIsIm5lZWRzQ29udGV4dCIsInJzaW5nbGVUYWciLCJ3aW5ub3ciLCJxdWFsaWZpZXIiLCJub3QiLCJzZWxmIiwicm9vdGpRdWVyeSIsInJvb3QiLCJwYXJzZUhUTUwiLCJyZWFkeSIsInJwYXJlbnRzcHJldiIsImd1YXJhbnRlZWRVbmlxdWUiLCJjaGlsZHJlbiIsImNvbnRlbnRzIiwicHJldiIsInNpYmxpbmciLCJoYXMiLCJ0YXJnZXRzIiwiY2xvc2VzdCIsInByZXZBbGwiLCJhZGQiLCJhZGRCYWNrIiwicGFyZW50cyIsInBhcmVudHNVbnRpbCIsIm5leHRBbGwiLCJuZXh0VW50aWwiLCJwcmV2VW50aWwiLCJyZXZlcnNlIiwicm5vdGh0bWx3aGl0ZSIsIklkZW50aXR5IiwidiIsIlRocm93ZXIiLCJleCIsImFkb3B0VmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJmYWlsIiwidGhlbiIsIkNhbGxiYWNrcyIsImZsYWciLCJjcmVhdGVPcHRpb25zIiwiZmlyaW5nIiwibWVtb3J5IiwiZmlyZWQiLCJsb2NrZWQiLCJxdWV1ZSIsImZpcmluZ0luZGV4IiwiZmlyZSIsIm9uY2UiLCJzdG9wT25GYWxzZSIsImVtcHR5IiwiZGlzYWJsZSIsImxvY2siLCJmaXJlV2l0aCIsIkRlZmVycmVkIiwiZnVuYyIsInR1cGxlcyIsInN0YXRlIiwiYWx3YXlzIiwiZGVmZXJyZWQiLCJwaXBlIiwiZm5zIiwibmV3RGVmZXIiLCJ0dXBsZSIsInJldHVybmVkIiwicHJvZ3Jlc3MiLCJub3RpZnkiLCJvbkZ1bGZpbGxlZCIsIm9uUmVqZWN0ZWQiLCJvblByb2dyZXNzIiwibWF4RGVwdGgiLCJkZXB0aCIsInNwZWNpYWwiLCJ0aGF0IiwibWlnaHRUaHJvdyIsIlR5cGVFcnJvciIsIm5vdGlmeVdpdGgiLCJyZXNvbHZlV2l0aCIsInByb2Nlc3MiLCJleGNlcHRpb25Ib29rIiwic3RhY2tUcmFjZSIsInJlamVjdFdpdGgiLCJnZXRTdGFja0hvb2siLCJzZXRUaW1lb3V0Iiwic3RhdGVTdHJpbmciLCJ3aGVuIiwic2luZ2xlVmFsdWUiLCJyZW1haW5pbmciLCJyZXNvbHZlQ29udGV4dHMiLCJyZXNvbHZlVmFsdWVzIiwibWFzdGVyIiwidXBkYXRlRnVuYyIsInJlcnJvck5hbWVzIiwic3RhY2siLCJjb25zb2xlIiwid2FybiIsIm1lc3NhZ2UiLCJyZWFkeUV4Y2VwdGlvbiIsInJlYWR5TGlzdCIsImNvbXBsZXRlZCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJjYXRjaCIsInJlYWR5V2FpdCIsIndhaXQiLCJyZWFkeVN0YXRlIiwiZG9TY3JvbGwiLCJhY2Nlc3MiLCJjaGFpbmFibGUiLCJlbXB0eUdldCIsInJhdyIsImJ1bGsiLCJybXNQcmVmaXgiLCJyZGFzaEFscGhhIiwiZmNhbWVsQ2FzZSIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiY2FtZWxDYXNlIiwic3RyaW5nIiwiYWNjZXB0RGF0YSIsIm93bmVyIiwiRGF0YSIsInVpZCIsImNvbmZpZ3VyYWJsZSIsInNldCIsInByb3AiLCJoYXNEYXRhIiwiZGF0YVByaXYiLCJkYXRhVXNlciIsInJicmFjZSIsInJtdWx0aURhc2giLCJkYXRhQXR0ciIsInBhcnNlIiwiZ2V0RGF0YSIsInJlbW92ZURhdGEiLCJfZGF0YSIsIl9yZW1vdmVEYXRhIiwiZGVxdWV1ZSIsInN0YXJ0TGVuZ3RoIiwiaG9va3MiLCJfcXVldWVIb29rcyIsInN0b3AiLCJzZXR0ZXIiLCJjbGVhclF1ZXVlIiwiY291bnQiLCJkZWZlciIsInBudW0iLCJyY3NzTnVtIiwiY3NzRXhwYW5kIiwiaXNBdHRhY2hlZCIsImNvbXBvc2VkIiwiZ2V0Um9vdE5vZGUiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJkaXNwbGF5Iiwic3dhcCIsIm9sZCIsImFkanVzdENTUyIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwiZGVmYXVsdERpc3BsYXlNYXAiLCJnZXREZWZhdWx0RGlzcGxheSIsImJvZHkiLCJzaG93SGlkZSIsInNob3ciLCJ2YWx1ZXMiLCJoaWRlIiwidG9nZ2xlIiwicmNoZWNrYWJsZVR5cGUiLCJydGFnTmFtZSIsInJzY3JpcHRUeXBlIiwid3JhcE1hcCIsIm9wdGlvbiIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIl9kZWZhdWx0IiwiZ2V0QWxsIiwic2V0R2xvYmFsRXZhbCIsInJlZkVsZW1lbnRzIiwib3B0Z3JvdXAiLCJ0Ym9keSIsInRmb290IiwiY29sZ3JvdXAiLCJjYXB0aW9uIiwidGgiLCJkaXYiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ3cmFwIiwiYXR0YWNoZWQiLCJmcmFnbWVudCIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJub2RlcyIsImh0bWxQcmVmaWx0ZXIiLCJjaGVja0Nsb25lIiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJya2V5RXZlbnQiLCJybW91c2VFdmVudCIsInJ0eXBlbmFtZXNwYWNlIiwicmV0dXJuVHJ1ZSIsInJldHVybkZhbHNlIiwiZXhwZWN0U3luYyIsImVyciIsInNhZmVBY3RpdmVFbGVtZW50Iiwib24iLCJ0eXBlcyIsIm9uZSIsIm9yaWdGbiIsImV2ZW50Iiwib2ZmIiwibGV2ZXJhZ2VOYXRpdmUiLCJub3RBc3luYyIsInNhdmVkIiwiaXNUcmlnZ2VyIiwiZGVsZWdhdGVUeXBlIiwic3RvcFByb3BhZ2F0aW9uIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwicHJldmVudERlZmF1bHQiLCJ0cmlnZ2VyIiwiRXZlbnQiLCJoYW5kbGVPYmpJbiIsImV2ZW50SGFuZGxlIiwiZXZlbnRzIiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsImhhbmRsZSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiYmluZFR5cGUiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwicmVtb3ZlRXZlbnQiLCJuYXRpdmVFdmVudCIsImhhbmRsZXJRdWV1ZSIsImZpeCIsImRlbGVnYXRlVGFyZ2V0IiwicHJlRGlzcGF0Y2giLCJpc1Byb3BhZ2F0aW9uU3RvcHBlZCIsImN1cnJlbnRUYXJnZXQiLCJpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCIsInJuYW1lc3BhY2UiLCJwb3N0RGlzcGF0Y2giLCJtYXRjaGVkSGFuZGxlcnMiLCJtYXRjaGVkU2VsZWN0b3JzIiwiYnV0dG9uIiwiYWRkUHJvcCIsImhvb2siLCJvcmlnaW5hbEV2ZW50Iiwid3JpdGFibGUiLCJsb2FkIiwibm9CdWJibGUiLCJjbGljayIsImJlZm9yZXVubG9hZCIsInJldHVyblZhbHVlIiwicHJvcHMiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsIm5vdyIsImlzU2ltdWxhdGVkIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyQ29kZSIsImtleUNvZGUiLCJidXR0b25zIiwiY2xpZW50WCIsImNsaWVudFkiLCJvZmZzZXRYIiwib2Zmc2V0WSIsInBvaW50ZXJJZCIsInBvaW50ZXJUeXBlIiwic2NyZWVuWCIsInNjcmVlblkiLCJ0YXJnZXRUb3VjaGVzIiwidG9FbGVtZW50IiwidG91Y2hlcyIsIndoaWNoIiwiZm9jdXMiLCJibHVyIiwibW91c2VlbnRlciIsIm1vdXNlbGVhdmUiLCJwb2ludGVyZW50ZXIiLCJwb2ludGVybGVhdmUiLCJvcmlnIiwicmVsYXRlZCIsInJ4aHRtbFRhZyIsInJub0lubmVyaHRtbCIsInJjaGVja2VkIiwicmNsZWFuU2NyaXB0IiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiZGlzYWJsZVNjcmlwdCIsInJlc3RvcmVTY3JpcHQiLCJjbG9uZUNvcHlFdmVudCIsImRlc3QiLCJwZGF0YU9sZCIsInBkYXRhQ3VyIiwidWRhdGFPbGQiLCJ1ZGF0YUN1ciIsImZpeElucHV0IiwiZG9tTWFuaXAiLCJjb2xsZWN0aW9uIiwiaGFzU2NyaXB0cyIsImlOb0Nsb25lIiwidmFsdWVJc0Z1bmN0aW9uIiwiaHRtbCIsIl9ldmFsVXJsIiwia2VlcERhdGEiLCJjbGVhbkRhdGEiLCJkYXRhQW5kRXZlbnRzIiwiZGVlcERhdGFBbmRFdmVudHMiLCJzcmNFbGVtZW50cyIsImRlc3RFbGVtZW50cyIsImluUGFnZSIsImRldGFjaCIsImFwcGVuZCIsInByZXBlbmQiLCJhZnRlciIsInJlcGxhY2VXaXRoIiwicmVwbGFjZUNoaWxkIiwiYXBwZW5kVG8iLCJwcmVwZW5kVG8iLCJpbnNlcnRBZnRlciIsInJlcGxhY2VBbGwiLCJvcmlnaW5hbCIsImluc2VydCIsInJudW1ub25weCIsImdldFN0eWxlcyIsIm9wZW5lciIsImdldENvbXB1dGVkU3R5bGUiLCJyYm94U3R5bGUiLCJjdXJDU1MiLCJjb21wdXRlZCIsIndpZHRoIiwibWluV2lkdGgiLCJtYXhXaWR0aCIsImdldFByb3BlcnR5VmFsdWUiLCJwaXhlbEJveFN0eWxlcyIsImFkZEdldEhvb2tJZiIsImNvbmRpdGlvbkZuIiwiaG9va0ZuIiwiY29tcHV0ZVN0eWxlVGVzdHMiLCJjb250YWluZXIiLCJkaXZTdHlsZSIsInBpeGVsUG9zaXRpb25WYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJyb3VuZFBpeGVsTWVhc3VyZXMiLCJtYXJnaW5MZWZ0IiwicmlnaHQiLCJwaXhlbEJveFN0eWxlc1ZhbCIsImJveFNpemluZ1JlbGlhYmxlVmFsIiwicG9zaXRpb24iLCJzY3JvbGxib3hTaXplVmFsIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJwYXJzZUZsb2F0IiwiYmFja2dyb3VuZENsaXAiLCJjbGVhckNsb25lU3R5bGUiLCJib3hTaXppbmdSZWxpYWJsZSIsInBpeGVsUG9zaXRpb24iLCJyZWxpYWJsZU1hcmdpbkxlZnQiLCJzY3JvbGxib3hTaXplIiwiY3NzUHJlZml4ZXMiLCJlbXB0eVN0eWxlIiwidmVuZG9yUHJvcHMiLCJmaW5hbFByb3BOYW1lIiwiZmluYWwiLCJjc3NQcm9wcyIsImNhcE5hbWUiLCJ2ZW5kb3JQcm9wTmFtZSIsInJkaXNwbGF5c3dhcCIsInJjdXN0b21Qcm9wIiwiY3NzU2hvdyIsInZpc2liaWxpdHkiLCJjc3NOb3JtYWxUcmFuc2Zvcm0iLCJsZXR0ZXJTcGFjaW5nIiwiZm9udFdlaWdodCIsInNldFBvc2l0aXZlTnVtYmVyIiwic3VidHJhY3QiLCJtYXgiLCJib3hNb2RlbEFkanVzdG1lbnQiLCJkaW1lbnNpb24iLCJib3giLCJpc0JvcmRlckJveCIsImNvbXB1dGVkVmFsIiwiZXh0cmEiLCJkZWx0YSIsImNlaWwiLCJnZXRXaWR0aE9ySGVpZ2h0IiwidmFsdWVJc0JvcmRlckJveCIsIm9mZnNldFByb3AiLCJnZXRDbGllbnRSZWN0cyIsIlR3ZWVuIiwiZWFzaW5nIiwiY3NzSG9va3MiLCJvcGFjaXR5Iiwib3JpZ05hbWUiLCJpc0N1c3RvbVByb3AiLCJzZXRQcm9wZXJ0eSIsImlzRmluaXRlIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0Iiwic2Nyb2xsYm94U2l6ZUJ1Z2d5IiwibGVmdCIsIm1hcmdpbiIsInBhZGRpbmciLCJib3JkZXIiLCJwcmVmaXgiLCJzdWZmaXgiLCJleHBhbmQiLCJleHBhbmRlZCIsInByb3BIb29rcyIsInJ1biIsInBlcmNlbnQiLCJlYXNlZCIsImR1cmF0aW9uIiwicG9zIiwic3RlcCIsImZ4Iiwic2Nyb2xsVG9wIiwic2Nyb2xsTGVmdCIsImxpbmVhciIsInN3aW5nIiwiY29zIiwiUEkiLCJmeE5vdyIsImluUHJvZ3Jlc3MiLCJyZnh0eXBlcyIsInJydW4iLCJzY2hlZHVsZSIsImhpZGRlbiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImludGVydmFsIiwidGljayIsImNyZWF0ZUZ4Tm93IiwiZ2VuRngiLCJpbmNsdWRlV2lkdGgiLCJoZWlnaHQiLCJjcmVhdGVUd2VlbiIsImFuaW1hdGlvbiIsIkFuaW1hdGlvbiIsInR3ZWVuZXJzIiwicHJvcGVydGllcyIsInN0b3BwZWQiLCJwcmVmaWx0ZXJzIiwiY3VycmVudFRpbWUiLCJzdGFydFRpbWUiLCJ0d2VlbnMiLCJvcHRzIiwic3BlY2lhbEVhc2luZyIsIm9yaWdpbmFsUHJvcGVydGllcyIsIm9yaWdpbmFsT3B0aW9ucyIsImdvdG9FbmQiLCJwcm9wRmlsdGVyIiwiY29tcGxldGUiLCJ0aW1lciIsImFuaW0iLCJ0d2VlbmVyIiwib2xkZmlyZSIsInByb3BUd2VlbiIsInJlc3RvcmVEaXNwbGF5IiwiaXNCb3giLCJkYXRhU2hvdyIsInVucXVldWVkIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJwcmVmaWx0ZXIiLCJzcGVlZCIsIm9wdCIsInNwZWVkcyIsImZhZGVUbyIsInRvIiwiYW5pbWF0ZSIsIm9wdGFsbCIsImRvQW5pbWF0aW9uIiwiZmluaXNoIiwic3RvcFF1ZXVlIiwidGltZXJzIiwiY3NzRm4iLCJzbGlkZURvd24iLCJzbGlkZVVwIiwic2xpZGVUb2dnbGUiLCJmYWRlSW4iLCJmYWRlT3V0IiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImJvb2wiLCJhdHRyTmFtZXMiLCJsb3dlcmNhc2VOYW1lIiwicmZvY3VzYWJsZSIsInJjbGlja2FibGUiLCJzdHJpcEFuZENvbGxhcHNlIiwiZ2V0Q2xhc3MiLCJjbGFzc2VzVG9BcnJheSIsInJlbW92ZVByb3AiLCJwcm9wRml4IiwidGFiaW5kZXgiLCJwYXJzZUludCIsImFkZENsYXNzIiwiY2xhc3NlcyIsImN1clZhbHVlIiwiY2xhenoiLCJmaW5hbFZhbHVlIiwicmVtb3ZlQ2xhc3MiLCJ0b2dnbGVDbGFzcyIsInN0YXRlVmFsIiwiaXNWYWxpZFZhbHVlIiwiY2xhc3NOYW1lcyIsImhhc0NsYXNzIiwicnJldHVybiIsInZhbEhvb2tzIiwib3B0aW9uU2V0IiwiZm9jdXNpbiIsInJmb2N1c01vcnBoIiwic3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2siLCJvbmx5SGFuZGxlcnMiLCJidWJibGVUeXBlIiwib250eXBlIiwibGFzdEVsZW1lbnQiLCJldmVudFBhdGgiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsInRyaWdnZXJIYW5kbGVyIiwiYXR0YWNoZXMiLCJycXVlcnkiLCJwYXJzZVhNTCIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsInJicmFja2V0IiwickNSTEYiLCJyc3VibWl0dGVyVHlwZXMiLCJyc3VibWl0dGFibGUiLCJidWlsZFBhcmFtcyIsInRyYWRpdGlvbmFsIiwicGFyYW0iLCJ2YWx1ZU9yRnVuY3Rpb24iLCJzZXJpYWxpemUiLCJzZXJpYWxpemVBcnJheSIsInIyMCIsInJoYXNoIiwicmFudGlDYWNoZSIsInJoZWFkZXJzIiwicm5vQ29udGVudCIsInJwcm90b2NvbCIsInRyYW5zcG9ydHMiLCJhbGxUeXBlcyIsIm9yaWdpbkFuY2hvciIsImFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyIsInN0cnVjdHVyZSIsImRhdGFUeXBlRXhwcmVzc2lvbiIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwiaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMiLCJqcVhIUiIsImluc3BlY3RlZCIsInNlZWtpbmdUcmFuc3BvcnQiLCJpbnNwZWN0IiwicHJlZmlsdGVyT3JGYWN0b3J5IiwiZGF0YVR5cGVPclRyYW5zcG9ydCIsImFqYXhFeHRlbmQiLCJmbGF0T3B0aW9ucyIsImFqYXhTZXR0aW5ncyIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsInJlc3BvbnNlRmllbGRzIiwiY29udmVydGVycyIsImFqYXhTZXR1cCIsInNldHRpbmdzIiwiYWpheFByZWZpbHRlciIsImFqYXhUcmFuc3BvcnQiLCJhamF4IiwidHJhbnNwb3J0IiwiY2FjaGVVUkwiLCJyZXNwb25zZUhlYWRlcnNTdHJpbmciLCJyZXNwb25zZUhlYWRlcnMiLCJ0aW1lb3V0VGltZXIiLCJ1cmxBbmNob3IiLCJmaXJlR2xvYmFscyIsInVuY2FjaGVkIiwiY2FsbGJhY2tDb250ZXh0IiwiZ2xvYmFsRXZlbnRDb250ZXh0IiwiY29tcGxldGVEZWZlcnJlZCIsInN0YXR1c0NvZGUiLCJyZXF1ZXN0SGVhZGVycyIsInJlcXVlc3RIZWFkZXJzTmFtZXMiLCJzdHJBYm9ydCIsImdldFJlc3BvbnNlSGVhZGVyIiwiZ2V0QWxsUmVzcG9uc2VIZWFkZXJzIiwic2V0UmVxdWVzdEhlYWRlciIsIm92ZXJyaWRlTWltZVR5cGUiLCJtaW1lVHlwZSIsInN0YXR1cyIsImFib3J0Iiwic3RhdHVzVGV4dCIsImZpbmFsVGV4dCIsImNyb3NzRG9tYWluIiwiaG9zdCIsImhhc0NvbnRlbnQiLCJpZk1vZGlmaWVkIiwiaGVhZGVycyIsImJlZm9yZVNlbmQiLCJzdWNjZXNzIiwic2VuZCIsIm5hdGl2ZVN0YXR1c1RleHQiLCJyZXNwb25zZXMiLCJpc1N1Y2Nlc3MiLCJyZXNwb25zZSIsIm1vZGlmaWVkIiwiY3QiLCJmaW5hbERhdGFUeXBlIiwiZmlyc3REYXRhVHlwZSIsImFqYXhIYW5kbGVSZXNwb25zZXMiLCJjb252MiIsImN1cnJlbnQiLCJjb252IiwiZGF0YUZpbHRlciIsInRocm93cyIsImFqYXhDb252ZXJ0IiwiZ2V0SlNPTiIsImdldFNjcmlwdCIsIndyYXBBbGwiLCJmaXJzdEVsZW1lbnRDaGlsZCIsIndyYXBJbm5lciIsImh0bWxJc0Z1bmN0aW9uIiwidW53cmFwIiwidmlzaWJsZSIsIm9mZnNldEhlaWdodCIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwieGhyU3VjY2Vzc1N0YXR1cyIsIjAiLCIxMjIzIiwieGhyU3VwcG9ydGVkIiwiY29ycyIsImVycm9yQ2FsbGJhY2siLCJvcGVuIiwidXNlcm5hbWUiLCJ4aHJGaWVsZHMiLCJvbmxvYWQiLCJvbmVycm9yIiwib25hYm9ydCIsIm9udGltZW91dCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsInJlc3BvbnNlVHlwZSIsInJlc3BvbnNlVGV4dCIsImJpbmFyeSIsInNjcmlwdEF0dHJzIiwiY2hhcnNldCIsInNjcmlwdENoYXJzZXQiLCJldnQiLCJvbGRDYWxsYmFja3MiLCJyanNvbnAiLCJqc29ucCIsImpzb25wQ2FsbGJhY2siLCJvcmlnaW5hbFNldHRpbmdzIiwiY2FsbGJhY2tOYW1lIiwib3ZlcndyaXR0ZW4iLCJyZXNwb25zZUNvbnRhaW5lciIsImpzb25Qcm9wIiwiY3JlYXRlSFRNTERvY3VtZW50IiwiaW1wbGVtZW50YXRpb24iLCJrZWVwU2NyaXB0cyIsInBhcnNlZCIsInBhcmFtcyIsImFuaW1hdGVkIiwib2Zmc2V0Iiwic2V0T2Zmc2V0IiwiY3VyUG9zaXRpb24iLCJjdXJMZWZ0IiwiY3VyQ1NTVG9wIiwiY3VyVG9wIiwiY3VyT2Zmc2V0IiwiY3VyQ1NTTGVmdCIsImN1ckVsZW0iLCJ1c2luZyIsInJlY3QiLCJ3aW4iLCJwYWdlWU9mZnNldCIsInBhZ2VYT2Zmc2V0Iiwib2Zmc2V0UGFyZW50IiwicGFyZW50T2Zmc2V0Iiwic2Nyb2xsVG8iLCJIZWlnaHQiLCJXaWR0aCIsImRlZmF1bHRFeHRyYSIsImZ1bmNOYW1lIiwiaG92ZXIiLCJmbk92ZXIiLCJmbk91dCIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsInByb3h5IiwiaG9sZFJlYWR5IiwiaG9sZCIsInBhcnNlSlNPTiIsImlzTnVtZXJpYyIsImlzTmFOIiwiX2pRdWVyeSIsIl8kIiwiJCIsIm5vQ29uZmxpY3QiLCJDQUxFTkRBUiIsIkJUTl9QUkVWX01PTlRIIiwiQlROX05FWFRfTU9OVEgiLCJEUkFXTl9EQVRFIiwiREFZU19DT05UQUlORVIiLCJEQVlfV0VFSyIsIkRBWV9XRUVLX0FOT1RIRVJfTU9OVEgiLCJSQU5HRV9EQVkiLCJSQU5HRV9EQVlfU1RBUlQiLCJSQU5HRV9EQVlfRU5EIiwiUkFOR0VfREFZX01JRERMRSIsIkJUTl9BUFBMWSIsIkJUTl9DTEVBUiIsIk1PTlRIX05BTUVTIiwiZ2V0UmVuZGVyZWREYXRlIiwiJGNhbGVuZGFyIiwiZGF0ZVN0ciIsImlzQ29ycmVjdERhdGVTdHIiLCJwYXJzZURhdGVTdHJpbmciLCJnZXREYXlzSW5Nb250aCIsIm1vbnRoIiwieWVhciIsImdldERhdGUiLCJjcmVhdGVDYWxlbmRhckRheSIsImRheU51bWJlciIsImlzQ3VycmVudE1vbnRoIiwiZGF5IiwiY2xhc3NMaXN0IiwidXBkYXRlQ2FsZW5kYXIiLCJyZW5kZXJEYXRlIiwiZGF0ZVRvU3RyaW5nIiwiZGF0ZSIsImNhbGVuZGFySGVhZCIsImdldE1vbnRoIiwiZ2V0RnVsbFllYXIiLCJ1cGRhdGVDYWxlbmRhckhlYWQiLCJjYWxlbmRhckRheXMiLCJkYXlzSW5Nb250aCIsImRheXNJblByZXZNb250aCIsInRtcERhdGUiLCJkYXlXZWVrRmlyc3REYXkiLCJnZXREYXkiLCJzZXREYXRlIiwiZGF5V2Vla0xhc3REYXkiLCJjcmVhdGVDYWxlbmRhckRheXMiLCJkYXlzIiwiY3VycmVudERhdGUiLCJtYXJrQ3VycmVudERheSIsInJlZHJhd1JhbmdlIiwiZXJhc2VSYW5nZSIsInJhbmdlU3RhcnRJc051bGwiLCJyYW5nZVN0YXJ0IiwicmFuZ2VFbmRJc051bGwiLCJyYW5nZUVuZCIsInhvciIsIiRkYXkiLCJpc1JlbmRlclJhbmdlU3RhcnQiLCJpc1JlbmRlclJhbmdlRW5kIiwiaXNSZW5kZXJSYW5nZU1pZGRsZSIsImRyYXdSYW5nZSIsIm5lZWRRdW90ZXMiLCJnZXRTdGFydEFuZEVuZFJhbmdlIiwic3RhcnRTdHIiLCJlbmRTdHIiLCJyZWR1Y2UiLCJwcmV2aW91cyIsIkJUTl9JTlRFUiIsIkJUTl9QTFVTIiwiQlROX01JTlVTIiwiSEVBRCIsIkNPVU5URVIiLCJEUk9QRE9XTiIsIkRBVEVfUkFOR0UiLCJEUk9QRE9XTl9IRUFEIiwiRFJPUERPV05fSEVBRF9MRUZUIiwiRFJPUERPV05fSEVBRF9SSUdIVCIsIlJBTkdFX1NFTEVDVCIsImdldENvdW50ZXJWYWx1ZXMiLCIkZHJvcGRvd24iLCJkcm9wZG93biIsImdldEluZGV4R3JhZHVhdGlvbiIsIm9zdDEwIiwib3N0MTAwIiwiZ3JhZCIsImNyZWF0ZUd1ZXN0VGV4dCIsImFkdWx0cyIsImJhYmllcyIsImd1ZXN0VGV4dCIsIndvcmRFbmRpbmciLCJncm91cGluZ0VsZW1lbnRWYWx1ZXMiLCJhbGxHdWVzdHMiLCJMSUtFX0JUTiIsIkNIRUNLRUQiLCJJQ09OIiwiU0xJREVSIiwiTElORSIsIlBPSU5UIiwiQkdfTElORSIsIlZBTFVFUyIsIkNMQVNTRVMiLCJjb21tYW5kIiwiJGJ0bkNoYW5nZU1vbnRoIiwicmVuZGVyZWREYXRlIiwic2V0TW9udGgiLCJjYWxlbmRhciIsInNlbGVjdERheUhhbmRsZXIiLCJ0YXJnZXREYXRlIiwiZGF5RGF0ZSIsImdldERheURhdGUiLCJzZWxlY3REYXRlIiwiaXNQb3NzaWJsZVNldERhdGVSYW5nZSIsIiRkYXRlUmFuZ2UiLCIkZHJvcGRvd25IZWFkIiwiZHJvcGRvd25IZWFkIiwiZHJvcGRvd25Db3VudGVyIiwiY291bnRlclZhbHVlcyIsIm5ld1RleHQiLCLRgdC/0LDQu9GM0L3QuCIsItC60YDQvtCy0LDRgtC4IiwiRVhQQU5ERUQiLCIkY291bnRlciIsIklNQUdFIiwiSU1BR0VfU0VMRUNURUQiLCJJVEVNIiwiSVRFTV9TRUxFQ1RFRCIsIk5BVl9CVE4iLCJCVE5fUFJFViIsIkJUTl9ORVhUIiwiSU5ERVhfSVRFTSIsIiRzbGlkZXIiLCIkYnRuIiwiaW5kZXhJbWFnZSIsInNlbGVjdGVkSW1hZ2VBdHRyIiwicGFyc2VJbmRleEltYWdlIiwiJGltYWdlcyIsIiRpdGVtcyIsImxpa2VCdXR0b24iLCJsaWtlcyIsIk1FTlVfSVRFTSIsIkJUTl9FWFBBTkQiLCJjb25maWciLCJyYW5nZSIsIl9zdGVwU2l6ZSIsInJhbmdlTWluIiwicmFuZ2VNYXgiLCJfcmFuZ2VNaW4iLCJfcmFuZ2UiLCJfc3RlcHMiLCJmbG9vciIsIl9jYWxsYmFjayIsIl9wb2ludE1pblN0ZXAiLCJfcG9pbnRNYXhTdGVwIiwidGFyZ2V0UG9zaXRpb24iLCJ1cGRhdGVQb2ludFN0ZXBzIiwidXBkYXRlUG9pbnRTdGVwIiwidG9nZ2xlVXBkYXRlRXZlbnQiLCJvblVwZGF0ZSIsImluaXRNb2RlbCIsInN0YXJ0TWluIiwic3RhcnRNYXgiLCJ2YWx1ZVRvUG9pbnRTdGVwIiwidGFyZ2V0U3RlcCIsInBvc2l0aW9uVG9TdGVwIiwicG9pbnRNaW5Qb3NpdGlvbiIsInN0ZXBUb1BvaW50UG9zaXRpb24iLCJwb2ludE1heFBvc2l0aW9uIiwiZGlzdGFuY2VUb01pblBvaW50IiwiYWJzIiwiZGlzdGFuY2VUb01heFBvaW50IiwicG9zaXRpb25zIiwiZ2V0VmFsdWVzU3RyIiwidmFsTWluIiwic3RlcFRvVmFsdWUiLCJ2YWxNYXgiLCJkaXZpZGVOdW1iZXJCeURpZ2l0cyIsIm51bVN0ciIsInRtcE51bVN0ciIsImluZGV4U2xpY2UiLCJNb2RlbCIsIl8kc2xpZGVyIiwibW9kZWwiLCJfJGxpbmUiLCJfJGJnTGluZSIsIl8kdmFsdWVzIiwiXyRwb2ludDEiLCJfJHBvaW50MiIsIl8kZG9jdW1lbnQiLCJfbW9kZWwiLCJfbGluZUJvcmRlcldpZHRoIiwiX3BvaW50U2VsZWN0ZWRUeXBlIiwic2V0U2xpZGVyRXZlbnRIYW5kbGVycyIsInNsaWRlck1vdXNlRG93bkhhbmRsZXIiLCJ1cGRhdGVNb2RlbCIsImV2IiwiZ2V0VGFyZ2V0UG9zaXRpb24iLCIkdGFyZ2V0IiwicG9pbnRNb3VzZU1vdmVIYW5kbGVyIiwicG9zaXRpb25MZWZ0IiwicG9zaXRpb25SaWdodCIsInNldFBvaW50UG9zaXRpb24iLCJ1cGRhdGVCZ0xpbmUiLCJfJHBvaW50IiwiaW5uZXJXaWR0aCIsIm91dGVyV2lkdGgiLCJnZXRQb2ludFBvc2l0aW9uIiwid2lkdGhMaW5lIiwid2lkdGhDb250YWluZXIiLCJvZmZzZXRMaW5lIiwiVmlldyIsImltcG9ydEFsbCIsImxvY2FscyIsIl9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF82X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF85X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xMV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzEyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTNfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xNF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzE1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTZfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xN19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzE4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTlfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzIxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjJfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yM19fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzI0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjVfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yNl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzI3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjhfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yOV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzMwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8zMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzMzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8zNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNV9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF82X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzdfX18iLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF85X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzExX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI1X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI2X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI3X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI4X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzI5X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMwX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMxX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMyX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM0X19fIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM1X19fIiwiYmFzZVVybCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCIkMSIsIndlYnBhY2tDb250ZXh0IiwicmVxIiwid2VicGFja0NvbnRleHRSZXNvbHZlIiwiZGVzZWxlY3REYXRlUmFuZ2UiLCIkZGlzcGxheSIsImlzTmVlZEhpZGRlbiIsInN1bSIsImFkZENvdW50ZXJWYWx1ZXMiLCJ0ZXh0U2xpY2UiLCJtYXhMZW5ndGgiLCJsZW5OZXdUZXh0IiwicGhyYXNlIiwicGhyYXNlU2xpY2UiLCJjcm9wVGV4dFRvRGVzaXJlZExlbmd0aCIsImhlYWRUZXh0IiwicGhyYXNlTGlzdCIsImVuZGluZ0luZGV4IiwiY3JlYXRlTmV3SGVhZFRleHQiLCJpc0V4cGFuZGVkIl0sIm1hcHBpbmdzIjoiO2FBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFBTyxXQUU3RFAsT0FBT0MsZUFBZWIsRUFBUyxhQUFjLENBQUVtQixPQUFPLEtBUXZEckIsRUFBb0JzQixFQUFJLFNBQVNELEVBQU9FLEdBRXZDLEdBRFUsRUFBUEEsSUFBVUYsRUFBUXJCLEVBQW9CcUIsSUFDL0IsRUFBUEUsRUFBVSxPQUFPRixFQUNwQixHQUFXLEVBQVBFLEdBQThCLGlCQUFWRixHQUFzQkEsR0FBU0EsRUFBTUcsV0FBWSxPQUFPSCxFQUNoRixJ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QkMsR0FBaUMsNEJBQWdDQyxHQUFpQyxnR0FBc0dDLEdBQWlDLGFBQWVDLEdBQWlDLHdCQUE0QkMsR0FBaUMsNEJBQWdDQyxHQUFpQyx3R0FBOEdDLEdBQWlDLGFBQWVDLEdBQWlDLHdCQUE0QkMsR0FBaUMsNEJBQWdDQyxHQUFpQywwREFBNkQsTSw2QkM1RXQwRixPQUFlLGNBQTBCLCtDLDZCQ0F6QyxPQUFlLGNBQTBCLGdELDZCQ0F6QyxPQUFlLGNBQTBCLCtDLDZCQ0F6QyxPQUFlLGNBQTBCLCtDLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLDhCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLGtDLDZCQ0F6QyxPQUFlLGNBQTBCLG1DLDZCQ0F6QyxPQUFlLGNBQTBCLGtDLDZCQ0F6QyxPQUFlLGNBQTBCLGtDLDZCQ0F6QyxPQUFlLGNBQTBCLHdDLDZCQ0F6QyxPQUFlLGNBQTBCLHlDLDZCQ0F6QyxPQUFlLGNBQTBCLHdDLDZCQ0F6QyxPQUFlLGNBQTBCLHdDLDZCQ0F6QyxPQUFlLGNBQTBCLGdDLDZCQ0F6QyxPQUFlLGNBQTBCLGlDLDZCQ0F6QyxPQUFlLGNBQTBCLGdDLDZCQ0F6QyxPQUFlLGNBQTBCLGdDLDZCQ0F6QyxPQUFlLGNBQTBCLDRCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLDRCLDZCQ0F6QyxPQUFlLGNBQTBCLDRCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLDhCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLDZCLDZCQ0F6QyxPQUFlLGNBQTBCLCtCLDZCQ0F6QyxPQUFlLGNBQTBCLGdDLDZCQ0F6QyxPQUFlLGNBQTBCLCtCLDZCQ0F6QyxPQUFlLGNBQTBCLCtCLDZCQ0F6QyxPQUFlLGNBQTBCLG1DLDZCQ0F6QyxPQUFlLGNBQTBCLG9DLDZCQ0F6QyxPQUFlLGNBQTBCLG1DLDZCQ0F6QyxPQUFlLGNBQTBCLG1DLGND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bEQsRUFBUTA1QyxTQUFRajhDLEVBQU9ELFFBQVV3QyxFQUFRMDVDLFMsZ0JDakI1Q2w4QyxFQUFVQyxFQUFPRCxRQUFVLEVBQVEsRUFBUixFQUFnRSxHQUUzRixJQUVJdytDLEVBRmtDLEVBQVEsRUFFVnJDLENBREssRUFBUSxLQUdqRG44QyxFQUFRK0QsS0FBSyxDQUFDOUQsRUFBT0MsRUFBSSw4R0FBZ0hzK0MsRUFBZ0MsK25CQUFnb0IsTSxnQkNMenlCLElBQUloOEMsRUFBVSxFQUFRLEtBRUEsaUJBQVpBLElBQXNCQSxFQUFVLENBQUMsQ0FBQ3ZDLEVBQU9DLEVBQUlzQyxFQUFTLE1BT2hFLElBQUlrRCxFQUFVLENBQUMsS0FBTSxFQUVyQixlQVBJNkMsRUFRSixnQkFBcUJkLEdBRVIsRUFBUSxFQUFSLENBQWdFakYsRUFBU2tELEdBRW5GbEQsRUFBUTA1QyxTQUFRajhDLEVBQU9ELFFBQVV3QyxFQUFRMDVDLFMsaUJDakJsQ2o4QyxFQUFPRCxRQUFVLEVBQVEsRUFBUixFQUFnRSxJQUVuRitELEtBQUssQ0FBQzlELEVBQU9DLEVBQUksZ09BQWlPIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gNDIpO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCJ7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsICcnXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IG1vZHVsZXNbX2ldOyAvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG4gICAgICAvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuICAgICAgLy8gd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuICAgICAgLy8gSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXG4gICAgICBpZiAoaXRlbVswXSA9PSBudWxsIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGlmIChtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIihcIi5jb25jYXQoaXRlbVsyXSwgXCIpIGFuZCAoXCIpLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIilcIik7XG4gICAgICAgIH1cblxuICAgICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTtcblxuZnVuY3Rpb24gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtLCB1c2VTb3VyY2VNYXApIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8ICcnOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcblxuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodXNlU291cmNlTWFwICYmIHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSB0b0NvbW1lbnQoY3NzTWFwcGluZyk7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCkuY29uY2F0KHNvdXJjZSwgXCIgKi9cIik7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufSAvLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5cblxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWZcbiAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSk7XG4gIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgcmV0dXJuIFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbn0iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjQuMVxuICogaHR0cHM6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTktMDUtMDFUMjE6MDRaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcblxudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuXG52YXIgY29uY2F0ID0gYXJyLmNvbmNhdDtcblxudmFyIHB1c2ggPSBhcnIucHVzaDtcblxudmFyIGluZGV4T2YgPSBhcnIuaW5kZXhPZjtcblxudmFyIGNsYXNzMnR5cGUgPSB7fTtcblxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcblxudmFyIGhhc093biA9IGNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBmblRvU3RyaW5nID0gaGFzT3duLnRvU3RyaW5nO1xuXG52YXIgT2JqZWN0RnVuY3Rpb25TdHJpbmcgPSBmblRvU3RyaW5nLmNhbGwoIE9iamVjdCApO1xuXG52YXIgc3VwcG9ydCA9IHt9O1xuXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24oIG9iaiApIHtcblxuICAgICAgLy8gU3VwcG9ydDogQ2hyb21lIDw9NTcsIEZpcmVmb3ggPD01MlxuICAgICAgLy8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXG4gICAgICAvLyAoaS5lLiwgYHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9iamVjdFwiICkgPT09IFwiZnVuY3Rpb25cImApLlxuICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBjbGFzc2lmeSAqYW55KiBET00gbm9kZSBhcyBhIGZ1bmN0aW9uLlxuICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSBcIm51bWJlclwiO1xuICB9O1xuXG5cbnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7XG5cdFx0cmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcblx0fTtcblxuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub25jZTogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIG5vZGUsIGRvYyApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSwgdmFsLFxuXHRcdFx0c2NyaXB0ID0gZG9jLmNyZWF0ZUVsZW1lbnQoIFwic2NyaXB0XCIgKTtcblxuXHRcdHNjcmlwdC50ZXh0ID0gY29kZTtcblx0XHRpZiAoIG5vZGUgKSB7XG5cdFx0XHRmb3IgKCBpIGluIHByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMgKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA2NCssIEVkZ2UgMTgrXG5cdFx0XHRcdC8vIFNvbWUgYnJvd3NlcnMgZG9uJ3Qgc3VwcG9ydCB0aGUgXCJub25jZVwiIHByb3BlcnR5IG9uIHNjcmlwdHMuXG5cdFx0XHRcdC8vIE9uIHRoZSBvdGhlciBoYW5kLCBqdXN0IHVzaW5nIGBnZXRBdHRyaWJ1dGVgIGlzIG5vdCBlbm91Z2ggYXNcblx0XHRcdFx0Ly8gdGhlIGBub25jZWAgYXR0cmlidXRlIGlzIHJlc2V0IHRvIGFuIGVtcHR5IHN0cmluZyB3aGVuZXZlciBpdFxuXHRcdFx0XHQvLyBiZWNvbWVzIGJyb3dzaW5nLWNvbnRleHQgY29ubmVjdGVkLlxuXHRcdFx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL3doYXR3Zy9odG1sL2lzc3Vlcy8yMzY5XG5cdFx0XHRcdC8vIFNlZSBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNub25jZS1hdHRyaWJ1dGVzXG5cdFx0XHRcdC8vIFRoZSBgbm9kZS5nZXRBdHRyaWJ1dGVgIGNoZWNrIHdhcyBhZGRlZCBmb3IgdGhlIHNha2Ugb2Zcblx0XHRcdFx0Ly8gYGpRdWVyeS5nbG9iYWxFdmFsYCBzbyB0aGF0IGl0IGNhbiBmYWtlIGEgbm9uY2UtY29udGFpbmluZyBub2RlXG5cdFx0XHRcdC8vIHZpYSBhbiBvYmplY3QuXG5cdFx0XHRcdHZhbCA9IG5vZGVbIGkgXSB8fCBub2RlLmdldEF0dHJpYnV0ZSAmJiBub2RlLmdldEF0dHJpYnV0ZSggaSApO1xuXHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRzY3JpcHQuc2V0QXR0cmlidXRlKCBpLCB2YWwgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuNC4xXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1Bcblx0cnRyaW0gPSAvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2c7XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0aWYgKCBudW0gPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFpc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdGNvcHkgPSBvcHRpb25zWyBuYW1lIF07XG5cblx0XHRcdFx0Ly8gUHJldmVudCBPYmplY3QucHJvdG90eXBlIHBvbGx1dGlvblxuXHRcdFx0XHQvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXG5cdFx0XHRcdGlmICggbmFtZSA9PT0gXCJfX3Byb3RvX19cIiB8fCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cdFx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XG5cblx0XHRcdFx0XHQvLyBFbnN1cmUgcHJvcGVyIHR5cGUgZm9yIHRoZSBzb3VyY2UgdmFsdWVcblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICYmICFBcnJheS5pc0FycmF5KCBzcmMgKSApIHtcblx0XHRcdFx0XHRcdGNsb25lID0gW107XG5cdFx0XHRcdFx0fSBlbHNlIGlmICggIWNvcHlJc0FycmF5ICYmICFqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgKSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHt9O1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblxuXHRcdFx0XHRcdC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcblxuXHRcdFx0XHQvLyBEb24ndCBicmluZyBpbiB1bmRlZmluZWQgdmFsdWVzXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR0YXJnZXRbIG5hbWUgXSA9IGNvcHk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIG1vZGlmaWVkIG9iamVjdFxuXHRyZXR1cm4gdGFyZ2V0O1xufTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIFVuaXF1ZSBmb3IgZWFjaCBjb3B5IG9mIGpRdWVyeSBvbiB0aGUgcGFnZVxuXHRleHBhbmRvOiBcImpRdWVyeVwiICsgKCB2ZXJzaW9uICsgTWF0aC5yYW5kb20oKSApLnJlcGxhY2UoIC9cXEQvZywgXCJcIiApLFxuXG5cdC8vIEFzc3VtZSBqUXVlcnkgaXMgcmVhZHkgd2l0aG91dCB0aGUgcmVhZHkgbW9kdWxlXG5cdGlzUmVhZHk6IHRydWUsXG5cblx0ZXJyb3I6IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKCBtc2cgKTtcblx0fSxcblxuXHRub29wOiBmdW5jdGlvbigpIHt9LFxuXG5cdGlzUGxhaW5PYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0dmFyIHByb3RvLCBDdG9yO1xuXG5cdFx0Ly8gRGV0ZWN0IG9idmlvdXMgbmVnYXRpdmVzXG5cdFx0Ly8gVXNlIHRvU3RyaW5nIGluc3RlYWQgb2YgalF1ZXJ5LnR5cGUgdG8gY2F0Y2ggaG9zdCBvYmplY3RzXG5cdFx0aWYgKCAhb2JqIHx8IHRvU3RyaW5nLmNhbGwoIG9iaiApICE9PSBcIltvYmplY3QgT2JqZWN0XVwiICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdHByb3RvID0gZ2V0UHJvdG8oIG9iaiApO1xuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIG5vIHByb3RvdHlwZSAoZS5nLiwgYE9iamVjdC5jcmVhdGUoIG51bGwgKWApIGFyZSBwbGFpblxuXHRcdGlmICggIXByb3RvICkge1xuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fVxuXG5cdFx0Ly8gT2JqZWN0cyB3aXRoIHByb3RvdHlwZSBhcmUgcGxhaW4gaWZmIHRoZXkgd2VyZSBjb25zdHJ1Y3RlZCBieSBhIGdsb2JhbCBPYmplY3QgZnVuY3Rpb25cblx0XHRDdG9yID0gaGFzT3duLmNhbGwoIHByb3RvLCBcImNvbnN0cnVjdG9yXCIgKSAmJiBwcm90by5jb25zdHJ1Y3Rvcjtcblx0XHRyZXR1cm4gdHlwZW9mIEN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBmblRvU3RyaW5nLmNhbGwoIEN0b3IgKSA9PT0gT2JqZWN0RnVuY3Rpb25TdHJpbmc7XG5cdH0sXG5cblx0aXNFbXB0eU9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgbmFtZTtcblxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dFxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSwgb3B0aW9ucyApIHtcblx0XHRET01FdmFsKCBjb2RlLCB7IG5vbmNlOiBvcHRpb25zICYmIG9wdGlvbnMubm9uY2UgfSApO1xuXHR9LFxuXG5cdGVhY2g6IGZ1bmN0aW9uKCBvYmosIGNhbGxiYWNrICkge1xuXHRcdHZhciBsZW5ndGgsIGkgPSAwO1xuXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggb2JqICkgKSB7XG5cdFx0XHRsZW5ndGggPSBvYmoubGVuZ3RoO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrLmNhbGwoIG9ialsgaSBdLCBpLCBvYmpbIGkgXSApID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBvYmo7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5XG5cdHRyaW06IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdHJldHVybiB0ZXh0ID09IG51bGwgP1xuXHRcdFx0XCJcIiA6XG5cdFx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcblx0fSxcblxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1ha2VBcnJheTogZnVuY3Rpb24oIGFyciwgcmVzdWx0cyApIHtcblx0XHR2YXIgcmV0ID0gcmVzdWx0cyB8fCBbXTtcblxuXHRcdGlmICggYXJyICE9IG51bGwgKSB7XG5cdFx0XHRpZiAoIGlzQXJyYXlMaWtlKCBPYmplY3QoIGFyciApICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxuXHRcdFx0XHRcdHR5cGVvZiBhcnIgPT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFsgYXJyIF0gOiBhcnJcblx0XHRcdFx0KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHB1c2guY2FsbCggcmV0LCBhcnIgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gcmV0O1xuXHR9LFxuXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XG5cdFx0cmV0dXJuIGFyciA9PSBudWxsID8gLTEgOiBpbmRleE9mLmNhbGwoIGFyciwgZWxlbSwgaSApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdG1lcmdlOiBmdW5jdGlvbiggZmlyc3QsIHNlY29uZCApIHtcblx0XHR2YXIgbGVuID0gK3NlY29uZC5sZW5ndGgsXG5cdFx0XHRqID0gMCxcblx0XHRcdGkgPSBmaXJzdC5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaiBdO1xuXHRcdH1cblxuXHRcdGZpcnN0Lmxlbmd0aCA9IGk7XG5cblx0XHRyZXR1cm4gZmlyc3Q7XG5cdH0sXG5cblx0Z3JlcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgaW52ZXJ0ICkge1xuXHRcdHZhciBjYWxsYmFja0ludmVyc2UsXG5cdFx0XHRtYXRjaGVzID0gW10sXG5cdFx0XHRpID0gMCxcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aCxcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCBvbmx5IHNhdmluZyB0aGUgaXRlbXNcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxuXHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0Y2FsbGJhY2tJbnZlcnNlID0gIWNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpICk7XG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XG5cdFx0XHRcdG1hdGNoZXMucHVzaCggZWxlbXNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiBtYXRjaGVzO1xuXHR9LFxuXG5cdC8vIGFyZyBpcyBmb3IgaW50ZXJuYWwgdXNhZ2Ugb25seVxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcblx0XHR2YXIgbGVuZ3RoLCB2YWx1ZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0cmV0ID0gW107XG5cblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgdHJhbnNsYXRpbmcgZWFjaCBvZiB0aGUgaXRlbXMgdG8gdGhlaXIgbmV3IHZhbHVlc1xuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XG5cblx0XHRcdFx0aWYgKCB2YWx1ZSAhPSBudWxsICkge1xuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBHbyB0aHJvdWdoIGV2ZXJ5IGtleSBvbiB0aGUgb2JqZWN0LFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXG5cdFx0cmV0dXJuIGNvbmNhdC5hcHBseSggW10sIHJldCApO1xuXHR9LFxuXG5cdC8vIEEgZ2xvYmFsIEdVSUQgY291bnRlciBmb3Igb2JqZWN0c1xuXHRndWlkOiAxLFxuXG5cdC8vIGpRdWVyeS5zdXBwb3J0IGlzIG5vdCB1c2VkIGluIENvcmUgYnV0IG90aGVyIHByb2plY3RzIGF0dGFjaCB0aGVpclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxuXHRzdXBwb3J0OiBzdXBwb3J0XG59ICk7XG5cbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xuXHRqUXVlcnkuZm5bIFN5bWJvbC5pdGVyYXRvciBdID0gYXJyWyBTeW1ib2wuaXRlcmF0b3IgXTtcbn1cblxuLy8gUG9wdWxhdGUgdGhlIGNsYXNzMnR5cGUgbWFwXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxuZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdGNsYXNzMnR5cGVbIFwiW29iamVjdCBcIiArIG5hbWUgKyBcIl1cIiBdID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xufSApO1xuXG5mdW5jdGlvbiBpc0FycmF5TGlrZSggb2JqICkge1xuXG5cdC8vIFN1cHBvcnQ6IHJlYWwgaU9TIDguMiBvbmx5IChub3QgcmVwcm9kdWNpYmxlIGluIHNpbXVsYXRvcilcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxuXHQvLyBoYXNPd24gaXNuJ3QgdXNlZCBoZXJlIGR1ZSB0byBmYWxzZSBuZWdhdGl2ZXNcblx0Ly8gcmVnYXJkaW5nIE5vZGVsaXN0IGxlbmd0aCBpbiBJRVxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcblx0XHR0eXBlID0gdG9UeXBlKCBvYmogKTtcblxuXHRpZiAoIGlzRnVuY3Rpb24oIG9iaiApIHx8IGlzV2luZG93KCBvYmogKSApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxuXHRcdHR5cGVvZiBsZW5ndGggPT09IFwibnVtYmVyXCIgJiYgbGVuZ3RoID4gMCAmJiAoIGxlbmd0aCAtIDEgKSBpbiBvYmo7XG59XG52YXIgU2l6emxlID1cbi8qIVxuICogU2l6emxlIENTUyBTZWxlY3RvciBFbmdpbmUgdjIuMy40XG4gKiBodHRwczovL3NpenpsZWpzLmNvbS9cbiAqXG4gKiBDb3B5cmlnaHQgSlMgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHBzOi8vanMuZm91bmRhdGlvbi9cbiAqXG4gKiBEYXRlOiAyMDE5LTA0LTA4XG4gKi9cbihmdW5jdGlvbiggd2luZG93ICkge1xuXG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRub25uYXRpdmVTZWxlY3RvckNhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0c29ydE9yZGVyID0gZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHR9XG5cdFx0cmV0dXJuIDA7XG5cdH0sXG5cblx0Ly8gSW5zdGFuY2UgbWV0aG9kc1xuXHRoYXNPd24gPSAoe30pLmhhc093blByb3BlcnR5LFxuXHRhcnIgPSBbXSxcblx0cG9wID0gYXJyLnBvcCxcblx0cHVzaF9uYXRpdmUgPSBhcnIucHVzaCxcblx0cHVzaCA9IGFyci5wdXNoLFxuXHRzbGljZSA9IGFyci5zbGljZSxcblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXG5cdC8vIGh0dHBzOi8vanNwZXJmLmNvbS90aG9yLWluZGV4b2YtdnMtZm9yLzVcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xuXHRcdHZhciBpID0gMCxcblx0XHRcdGxlbiA9IGxpc3QubGVuZ3RoO1xuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0aWYgKCBsaXN0W2ldID09PSBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gaTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIC0xO1xuXHR9LFxuXG5cdGJvb2xlYW5zID0gXCJjaGVja2VkfHNlbGVjdGVkfGFzeW5jfGF1dG9mb2N1c3xhdXRvcGxheXxjb250cm9sc3xkZWZlcnxkaXNhYmxlZHxoaWRkZW58aXNtYXB8bG9vcHxtdWx0aXBsZXxvcGVufHJlYWRvbmx5fHJlcXVpcmVkfHNjb3BlZFwiLFxuXG5cdC8vIFJlZ3VsYXIgZXhwcmVzc2lvbnNcblxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxuXHR3aGl0ZXNwYWNlID0gXCJbXFxcXHgyMFxcXFx0XFxcXHJcXFxcblxcXFxmXVwiLFxuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCN2YWx1ZS1kZWYtaWRlbnRpZmllclxuXHRpZGVudGlmaWVyID0gXCIoPzpcXFxcXFxcXC58W1xcXFx3LV18W15cXDAtXFxcXHhhMF0pK1wiLFxuXG5cdC8vIEF0dHJpYnV0ZSBzZWxlY3RvcnM6IGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jYXR0cmlidXRlLXNlbGVjdG9yc1xuXHRhdHRyaWJ1dGVzID0gXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xuXHRcdC8vIE9wZXJhdG9yIChjYXB0dXJlIDIpXG5cdFx0XCIqKFsqXiR8IX5dPz0pXCIgKyB3aGl0ZXNwYWNlICtcblx0XHQvLyBcIkF0dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV0gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxuXHRcdFwiKig/OicoKD86XFxcXFxcXFwufFteXFxcXFxcXFwnXSkqKSd8XFxcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXFxcXCJdKSopXFxcInwoXCIgKyBpZGVudGlmaWVyICsgXCIpKXwpXCIgKyB3aGl0ZXNwYWNlICtcblx0XHRcIipcXFxcXVwiLFxuXG5cdHBzZXVkb3MgPSBcIjooXCIgKyBpZGVudGlmaWVyICsgXCIpKD86XFxcXCgoXCIgK1xuXHRcdC8vIFRvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHNlbGVjdG9ycyBuZWVkaW5nIHRva2VuaXplIGluIHRoZSBwcmVGaWx0ZXIsIHByZWZlciBhcmd1bWVudHM6XG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXG5cdFx0XCIoJygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwiKXxcIiArXG5cdFx0Ly8gMi4gc2ltcGxlIChjYXB0dXJlIDYpXG5cdFx0XCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIgKyBhdHRyaWJ1dGVzICsgXCIpKil8XCIgK1xuXHRcdC8vIDMuIGFueXRoaW5nIGVsc2UgKGNhcHR1cmUgMilcblx0XHRcIi4qXCIgK1xuXHRcdFwiKVxcXFwpfClcIixcblxuXHQvLyBMZWFkaW5nIGFuZCBub24tZXNjYXBlZCB0cmFpbGluZyB3aGl0ZXNwYWNlLCBjYXB0dXJpbmcgc29tZSBub24td2hpdGVzcGFjZSBjaGFyYWN0ZXJzIHByZWNlZGluZyB0aGUgbGF0dGVyXG5cdHJ3aGl0ZXNwYWNlID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwiK1wiLCBcImdcIiApLFxuXHRydHJpbSA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiK3woKD86XnxbXlxcXFxcXFxcXSkoPzpcXFxcXFxcXC4pKilcIiArIHdoaXRlc3BhY2UgKyBcIiskXCIsIFwiZ1wiICksXG5cblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cdHJjb21iaW5hdG9ycyA9IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKihbPit+XXxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIHdoaXRlc3BhY2UgKyBcIipcIiApLFxuXHRyZGVzY2VuZCA9IG5ldyBSZWdFeHAoIHdoaXRlc3BhY2UgKyBcInw+XCIgKSxcblxuXHRycHNldWRvID0gbmV3IFJlZ0V4cCggcHNldWRvcyApLFxuXHRyaWRlbnRpZmllciA9IG5ldyBSZWdFeHAoIFwiXlwiICsgaWRlbnRpZmllciArIFwiJFwiICksXG5cblx0bWF0Y2hFeHByID0ge1xuXHRcdFwiSURcIjogbmV3IFJlZ0V4cCggXCJeIyhcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIlRBR1wiOiBuZXcgUmVnRXhwKCBcIl4oXCIgKyBpZGVudGlmaWVyICsgXCJ8WypdKVwiICksXG5cdFx0XCJBVFRSXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgYXR0cmlidXRlcyApLFxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxuXHRcdFwiQ0hJTERcIjogbmV3IFJlZ0V4cCggXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiICsgd2hpdGVzcGFjZSArIFwiKig/OihbKy1dfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXG5cdFx0XCJib29sXCI6IG5ldyBSZWdFeHAoIFwiXig/OlwiICsgYm9vbGVhbnMgKyBcIikkXCIsIFwiaVwiICksXG5cdFx0Ly8gRm9yIHVzZSBpbiBsaWJyYXJpZXMgaW1wbGVtZW50aW5nIC5pcygpXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxuXHRcdFwibmVlZHNDb250ZXh0XCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfCkoPz1bXi1dfCQpXCIsIFwiaVwiIClcblx0fSxcblxuXHRyaHRtbCA9IC9IVE1MJC9pLFxuXHRyaW5wdXRzID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcblxuXHRybmF0aXZlID0gL15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxcblxuXHQvLyBFYXNpbHktcGFyc2VhYmxlL3JldHJpZXZhYmxlIElEIG9yIFRBRyBvciBDTEFTUyBzZWxlY3RvcnNcblx0cnF1aWNrRXhwciA9IC9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLFxuXG5cdHJzaWJsaW5nID0gL1srfl0vLFxuXG5cdC8vIENTUyBlc2NhcGVzXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCNlc2NhcGVkLWNoYXJhY3RlcnNcblx0cnVuZXNjYXBlID0gbmV3IFJlZ0V4cCggXCJcXFxcXFxcXChbXFxcXGRhLWZdezEsNn1cIiArIHdoaXRlc3BhY2UgKyBcIj98KFwiICsgd2hpdGVzcGFjZSArIFwiKXwuKVwiLCBcImlnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIF8sIGVzY2FwZWQsIGVzY2FwZWRXaGl0ZXNwYWNlICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlZCAtIDB4MTAwMDA7XG5cdFx0Ly8gTmFOIG1lYW5zIG5vbi1jb2RlcG9pbnRcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI0XG5cdFx0Ly8gV29ya2Fyb3VuZCBlcnJvbmVvdXMgbnVtZXJpYyBpbnRlcnByZXRhdGlvbiBvZiArXCIweFwiXG5cdFx0cmV0dXJuIGhpZ2ggIT09IGhpZ2ggfHwgZXNjYXBlZFdoaXRlc3BhY2UgP1xuXHRcdFx0ZXNjYXBlZCA6XG5cdFx0XHRoaWdoIDwgMCA/XG5cdFx0XHRcdC8vIEJNUCBjb2RlcG9pbnRcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdC8vIFN1cHBsZW1lbnRhbCBQbGFuZSBjb2RlcG9pbnQgKHN1cnJvZ2F0ZSBwYWlyKVxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTtcblx0fSxcblxuXHQvLyBDU1Mgc3RyaW5nL2lkZW50aWZpZXIgc2VyaWFsaXphdGlvblxuXHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI2NvbW1vbi1zZXJpYWxpemluZy1pZGlvbXNcblx0cmNzc2VzY2FwZSA9IC8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxcMC1cXHgxZlxceDdmLVxcdUZGRkZcXHctXS9nLFxuXHRmY3NzZXNjYXBlID0gZnVuY3Rpb24oIGNoLCBhc0NvZGVQb2ludCApIHtcblx0XHRpZiAoIGFzQ29kZVBvaW50ICkge1xuXG5cdFx0XHQvLyBVKzAwMDAgTlVMTCBiZWNvbWVzIFUrRkZGRCBSRVBMQUNFTUVOVCBDSEFSQUNURVJcblx0XHRcdGlmICggY2ggPT09IFwiXFwwXCIgKSB7XG5cdFx0XHRcdHJldHVybiBcIlxcdUZGRkRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udHJvbCBjaGFyYWN0ZXJzIGFuZCAoZGVwZW5kZW50IHVwb24gcG9zaXRpb24pIG51bWJlcnMgZ2V0IGVzY2FwZWQgYXMgY29kZSBwb2ludHNcblx0XHRcdHJldHVybiBjaC5zbGljZSggMCwgLTEgKSArIFwiXFxcXFwiICsgY2guY2hhckNvZGVBdCggY2gubGVuZ3RoIC0gMSApLnRvU3RyaW5nKCAxNiApICsgXCIgXCI7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXIgcG90ZW50aWFsbHktc3BlY2lhbCBBU0NJSSBjaGFyYWN0ZXJzIGdldCBiYWNrc2xhc2gtZXNjYXBlZFxuXHRcdHJldHVybiBcIlxcXFxcIiArIGNoO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9LFxuXG5cdGluRGlzYWJsZWRGaWVsZHNldCA9IGFkZENvbWJpbmF0b3IoXG5cdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiZmllbGRzZXRcIjtcblx0XHR9LFxuXHRcdHsgZGlyOiBcInBhcmVudE5vZGVcIiwgbmV4dDogXCJsZWdlbmRcIiB9XG5cdCk7XG5cbi8vIE9wdGltaXplIGZvciBwdXNoLmFwcGx5KCBfLCBOb2RlTGlzdCApXG50cnkge1xuXHRwdXNoLmFwcGx5KFxuXHRcdChhcnIgPSBzbGljZS5jYWxsKCBwcmVmZXJyZWREb2MuY2hpbGROb2RlcyApKSxcblx0XHRwcmVmZXJyZWREb2MuY2hpbGROb2Rlc1xuXHQpO1xuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMFxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XG5cdGFyclsgcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMubGVuZ3RoIF0ubm9kZVR5cGU7XG59IGNhdGNoICggZSApIHtcblx0cHVzaCA9IHsgYXBwbHk6IGFyci5sZW5ndGggP1xuXG5cdFx0Ly8gTGV2ZXJhZ2Ugc2xpY2UgaWYgcG9zc2libGVcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHRwdXNoX25hdGl2ZS5hcHBseSggdGFyZ2V0LCBzbGljZS5jYWxsKGVscykgKTtcblx0XHR9IDpcblxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcblx0XHQvLyBPdGhlcndpc2UgYXBwZW5kIGRpcmVjdGx5XG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xuXHRcdFx0dmFyIGogPSB0YXJnZXQubGVuZ3RoLFxuXHRcdFx0XHRpID0gMDtcblx0XHRcdC8vIENhbid0IHRydXN0IE5vZGVMaXN0Lmxlbmd0aFxuXHRcdFx0d2hpbGUgKCAodGFyZ2V0W2orK10gPSBlbHNbaSsrXSkgKSB7fVxuXHRcdFx0dGFyZ2V0Lmxlbmd0aCA9IGogLSAxO1xuXHRcdH1cblx0fTtcbn1cblxuZnVuY3Rpb24gU2l6emxlKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIG0sIGksIGVsZW0sIG5pZCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXG5cdFx0bmV3Q29udGV4dCA9IGNvbnRleHQgJiYgY29udGV4dC5vd25lckRvY3VtZW50LFxuXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxuXHRcdG5vZGVUeXBlID0gY29udGV4dCA/IGNvbnRleHQubm9kZVR5cGUgOiA5O1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFJldHVybiBlYXJseSBmcm9tIGNhbGxzIHdpdGggaW52YWxpZCBzZWxlY3RvciBvciBjb250ZXh0XG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxuXHRcdG5vZGVUeXBlICE9PSAxICYmIG5vZGVUeXBlICE9PSA5ICYmIG5vZGVUeXBlICE9PSAxMSApIHtcblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xuXHRpZiAoICFzZWVkICkge1xuXG5cdFx0aWYgKCAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IHByZWZlcnJlZERvYyApICE9PSBkb2N1bWVudCApIHtcblx0XHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdFx0fVxuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xuXG5cdFx0aWYgKCBkb2N1bWVudElzSFRNTCApIHtcblxuXHRcdFx0Ly8gSWYgdGhlIHNlbGVjdG9yIGlzIHN1ZmZpY2llbnRseSBzaW1wbGUsIHRyeSB1c2luZyBhIFwiZ2V0KkJ5KlwiIERPTSBtZXRob2Rcblx0XHRcdC8vIChleGNlcHRpbmcgRG9jdW1lbnRGcmFnbWVudCBjb250ZXh0LCB3aGVyZSB0aGUgbWV0aG9kcyBkb24ndCBleGlzdClcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XG5cblx0XHRcdFx0Ly8gSUQgc2VsZWN0b3Jcblx0XHRcdFx0aWYgKCAobSA9IG1hdGNoWzFdKSApIHtcblxuXHRcdFx0XHRcdC8vIERvY3VtZW50IGNvbnRleHRcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgY2FuIG1hdGNoIGVsZW1lbnRzIGJ5IG5hbWUgaW5zdGVhZCBvZiBJRFxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmVzdWx0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRWxlbWVudCBjb250ZXh0XG5cdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXG5cdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRpZiAoIG5ld0NvbnRleHQgJiYgKGVsZW0gPSBuZXdDb250ZXh0LmdldEVsZW1lbnRCeUlkKCBtICkpICYmXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcblx0XHRcdFx0XHRcdFx0ZWxlbS5pZCA9PT0gbSApIHtcblxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFR5cGUgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbMl0gKSB7XG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggc2VsZWN0b3IgKSApO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHRcdC8vIENsYXNzIHNlbGVjdG9yXG5cdFx0XHRcdH0gZWxzZSBpZiAoIChtID0gbWF0Y2hbM10pICYmIHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJlxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggbSApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gVGFrZSBhZHZhbnRhZ2Ugb2YgcXVlcnlTZWxlY3RvckFsbFxuXHRcdFx0aWYgKCBzdXBwb3J0LnFzYSAmJlxuXHRcdFx0XHQhbm9ubmF0aXZlU2VsZWN0b3JDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXG5cdFx0XHRcdCghcmJ1Z2d5UVNBIHx8ICFyYnVnZ3lRU0EudGVzdCggc2VsZWN0b3IgKSkgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA4IG9ubHlcblx0XHRcdFx0Ly8gRXhjbHVkZSBvYmplY3QgZWxlbWVudHNcblx0XHRcdFx0KG5vZGVUeXBlICE9PSAxIHx8IGNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gXCJvYmplY3RcIikgKSB7XG5cblx0XHRcdFx0bmV3U2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0XHRcdFx0bmV3Q29udGV4dCA9IGNvbnRleHQ7XG5cblx0XHRcdFx0Ly8gcVNBIGNvbnNpZGVycyBlbGVtZW50cyBvdXRzaWRlIGEgc2NvcGluZyByb290IHdoZW4gZXZhbHVhdGluZyBjaGlsZCBvclxuXHRcdFx0XHQvLyBkZXNjZW5kYW50IGNvbWJpbmF0b3JzLCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50LlxuXHRcdFx0XHQvLyBJbiBzdWNoIGNhc2VzLCB3ZSB3b3JrIGFyb3VuZCB0aGUgYmVoYXZpb3IgYnkgcHJlZml4aW5nIGV2ZXJ5IHNlbGVjdG9yIGluIHRoZVxuXHRcdFx0XHQvLyBsaXN0IHdpdGggYW4gSUQgc2VsZWN0b3IgcmVmZXJlbmNpbmcgdGhlIHNjb3BlIGNvbnRleHQuXG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHRlY2huaXF1ZS5cblx0XHRcdFx0aWYgKCBub2RlVHlwZSA9PT0gMSAmJiByZGVzY2VuZC50ZXN0KCBzZWxlY3RvciApICkge1xuXG5cdFx0XHRcdFx0Ly8gQ2FwdHVyZSB0aGUgY29udGV4dCBJRCwgc2V0dGluZyBpdCBmaXJzdCBpZiBuZWNlc3Nhcnlcblx0XHRcdFx0XHRpZiAoIChuaWQgPSBjb250ZXh0LmdldEF0dHJpYnV0ZSggXCJpZFwiICkpICkge1xuXHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y29udGV4dC5zZXRBdHRyaWJ1dGUoIFwiaWRcIiwgKG5pZCA9IGV4cGFuZG8pICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gUHJlZml4IGV2ZXJ5IHNlbGVjdG9yIGluIHRoZSBsaXN0XG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0XHRcdFx0aSA9IGdyb3Vwcy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRncm91cHNbaV0gPSBcIiNcIiArIG5pZCArIFwiIFwiICsgdG9TZWxlY3RvciggZ3JvdXBzW2ldICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XG5cblx0XHRcdFx0XHQvLyBFeHBhbmQgY29udGV4dCBmb3Igc2libGluZyBzZWxlY3RvcnNcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcblx0XHRcdFx0XHRcdGNvbnRleHQ7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRuZXdDb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIG5ld1NlbGVjdG9yIClcblx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHR9IGNhdGNoICggcXNhRXJyb3IgKSB7XG5cdFx0XHRcdFx0bm9ubmF0aXZlU2VsZWN0b3JDYWNoZSggc2VsZWN0b3IsIHRydWUgKTtcblx0XHRcdFx0fSBmaW5hbGx5IHtcblx0XHRcdFx0XHRpZiAoIG5pZCA9PT0gZXhwYW5kbyApIHtcblx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblx0XHQvLyBVc2UgKGtleSArIFwiIFwiKSB0byBhdm9pZCBjb2xsaXNpb24gd2l0aCBuYXRpdmUgcHJvdG90eXBlIHByb3BlcnRpZXMgKHNlZSBJc3N1ZSAjMTU3KVxuXHRcdGlmICgga2V5cy5wdXNoKCBrZXkgKyBcIiBcIiApID4gRXhwci5jYWNoZUxlbmd0aCApIHtcblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuIChjYWNoZVsga2V5ICsgXCIgXCIgXSA9IHZhbHVlKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xuXG5cdHRyeSB7XG5cdFx0cmV0dXJuICEhZm4oIGVsICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRlbCA9IG51bGw7XG5cdH1cbn1cblxuLyoqXG4gKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzXG4gKiBAcGFyYW0ge1N0cmluZ30gYXR0cnMgUGlwZS1zZXBhcmF0ZWQgbGlzdCBvZiBhdHRyaWJ1dGVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIFRoZSBtZXRob2QgdGhhdCB3aWxsIGJlIGFwcGxpZWRcbiAqL1xuZnVuY3Rpb24gYWRkSGFuZGxlKCBhdHRycywgaGFuZGxlciApIHtcblx0dmFyIGFyciA9IGF0dHJzLnNwbGl0KFwifFwiKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLm5leHRTaWJsaW5nKSApIHtcblx0XHRcdGlmICggY3VyID09PSBiICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGEgPyAxIDogLTE7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBpbnB1dCB0eXBlc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5wdXRQc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGJ1dHRvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvblBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiAobmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIpICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdFx0aW5EaXNhYmxlZEZpZWxkc2V0KCBlbGVtICkgPT09IGRpc2FibGVkO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cblx0XHQvLyBUcnkgdG8gd2lubm93IG91dCBlbGVtZW50cyB0aGF0IGNhbid0IGJlIGRpc2FibGVkIGJlZm9yZSB0cnVzdGluZyB0aGUgZGlzYWJsZWQgcHJvcGVydHkuXG5cdFx0Ly8gU29tZSB2aWN0aW1zIGdldCBjYXVnaHQgaW4gb3VyIG5ldCAobGFiZWwsIGxlZ2VuZCwgbWVudSwgdHJhY2spLCBidXQgaXQgc2hvdWxkbid0XG5cdFx0Ly8gZXZlbiBleGlzdCBvbiB0aGVtLCBsZXQgYWxvbmUgaGF2ZSBhIGJvb2xlYW4gdmFsdWUuXG5cdFx0fSBlbHNlIGlmICggXCJsYWJlbFwiIGluIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gZGlzYWJsZWQ7XG5cdFx0fVxuXG5cdFx0Ly8gUmVtYWluaW5nIGVsZW1lbnRzIGFyZSBuZWl0aGVyIDplbmFibGVkIG5vciA6ZGlzYWJsZWRcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH07XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBwb3NpdGlvbmFsc1xuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cbiAqL1xuZnVuY3Rpb24gY3JlYXRlUG9zaXRpb25hbFBzZXVkbyggZm4gKSB7XG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xuXHRcdGFyZ3VtZW50ID0gK2FyZ3VtZW50O1xuXHRcdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlZWQsIG1hdGNoZXMgKSB7XG5cdFx0XHR2YXIgaixcblx0XHRcdFx0bWF0Y2hJbmRleGVzID0gZm4oIFtdLCBzZWVkLmxlbmd0aCwgYXJndW1lbnQgKSxcblx0XHRcdFx0aSA9IG1hdGNoSW5kZXhlcy5sZW5ndGg7XG5cblx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIGZvdW5kIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXhlc1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggc2VlZFsgKGogPSBtYXRjaEluZGV4ZXNbaV0pIF0gKSB7XG5cdFx0XHRcdFx0c2VlZFtqXSA9ICEobWF0Y2hlc1tqXSA9IHNlZWRbal0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH0pO1xufVxuXG4vKipcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3Q9fSBjb250ZXh0XG4gKiBAcmV0dXJucyB7RWxlbWVudHxPYmplY3R8Qm9vbGVhbn0gVGhlIGlucHV0IG5vZGUgaWYgYWNjZXB0YWJsZSwgb3RoZXJ3aXNlIGEgZmFsc3kgdmFsdWVcbiAqL1xuZnVuY3Rpb24gdGVzdENvbnRleHQoIGNvbnRleHQgKSB7XG5cdHJldHVybiBjb250ZXh0ICYmIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICYmIGNvbnRleHQ7XG59XG5cbi8vIEV4cG9zZSBzdXBwb3J0IHZhcnMgZm9yIGNvbnZlbmllbmNlXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcblxuLyoqXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdH0gZWxlbSBBbiBlbGVtZW50IG9yIGEgZG9jdW1lbnRcbiAqIEByZXR1cm5zIHtCb29sZWFufSBUcnVlIGlmZiBlbGVtIGlzIGEgbm9uLUhUTUwgWE1MIG5vZGVcbiAqL1xuaXNYTUwgPSBTaXp6bGUuaXNYTUwgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5hbWVzcGFjZSA9IGVsZW0ubmFtZXNwYWNlVVJJLFxuXHRcdGRvY0VsZW0gPSAoZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0pLmRvY3VtZW50RWxlbWVudDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PThcblx0Ly8gQXNzdW1lIEhUTUwgd2hlbiBkb2N1bWVudEVsZW1lbnQgZG9lc24ndCB5ZXQgZXhpc3QsIHN1Y2ggYXMgaW5zaWRlIGxvYWRpbmcgaWZyYW1lc1xuXHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvNDgzM1xuXHRyZXR1cm4gIXJodG1sLnRlc3QoIG5hbWVzcGFjZSB8fCBkb2NFbGVtICYmIGRvY0VsZW0ubm9kZU5hbWUgfHwgXCJIVE1MXCIgKTtcbn07XG5cbi8qKlxuICogU2V0cyBkb2N1bWVudC1yZWxhdGVkIHZhcmlhYmxlcyBvbmNlIGJhc2VkIG9uIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudFxuICogQHJldHVybnMge09iamVjdH0gUmV0dXJucyB0aGUgY3VycmVudCBkb2N1bWVudFxuICovXG5zZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkge1xuXHR2YXIgaGFzQ29tcGFyZSwgc3ViV2luZG93LFxuXHRcdGRvYyA9IG5vZGUgPyBub2RlLm93bmVyRG9jdW1lbnQgfHwgbm9kZSA6IHByZWZlcnJlZERvYztcblxuXHQvLyBSZXR1cm4gZWFybHkgaWYgZG9jIGlzIGludmFsaWQgb3IgYWxyZWFkeSBzZWxlY3RlZFxuXHRpZiAoIGRvYyA9PT0gZG9jdW1lbnQgfHwgZG9jLm5vZGVUeXBlICE9PSA5IHx8ICFkb2MuZG9jdW1lbnRFbGVtZW50ICkge1xuXHRcdHJldHVybiBkb2N1bWVudDtcblx0fVxuXG5cdC8vIFVwZGF0ZSBnbG9iYWwgdmFyaWFibGVzXG5cdGRvY3VtZW50ID0gZG9jO1xuXHRkb2NFbGVtID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXHRkb2N1bWVudElzSFRNTCA9ICFpc1hNTCggZG9jdW1lbnQgKTtcblxuXHQvLyBTdXBwb3J0OiBJRSA5LTExLCBFZGdlXG5cdC8vIEFjY2Vzc2luZyBpZnJhbWUgZG9jdW1lbnRzIGFmdGVyIHVubG9hZCB0aHJvd3MgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNilcblx0aWYgKCBwcmVmZXJyZWREb2MgIT09IGRvY3VtZW50ICYmXG5cdFx0KHN1YldpbmRvdyA9IGRvY3VtZW50LmRlZmF1bHRWaWV3KSAmJiBzdWJXaW5kb3cudG9wICE9PSBzdWJXaW5kb3cgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSAxMSwgRWRnZVxuXHRcdGlmICggc3ViV2luZG93LmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJ1bmxvYWRcIiwgdW5sb2FkSGFuZGxlciwgZmFsc2UgKTtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMCBvbmx5XG5cdFx0fSBlbHNlIGlmICggc3ViV2luZG93LmF0dGFjaEV2ZW50ICkge1xuXHRcdFx0c3ViV2luZG93LmF0dGFjaEV2ZW50KCBcIm9udW5sb2FkXCIsIHVubG9hZEhhbmRsZXIgKTtcblx0XHR9XG5cdH1cblxuXHQvKiBBdHRyaWJ1dGVzXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBTdXBwb3J0OiBJRTw4XG5cdC8vIFZlcmlmeSB0aGF0IGdldEF0dHJpYnV0ZSByZWFsbHkgcmV0dXJucyBhdHRyaWJ1dGVzIGFuZCBub3QgcHJvcGVydGllc1xuXHQvLyAoZXhjZXB0aW5nIElFOCBib29sZWFucylcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRlbC5jbGFzc05hbWUgPSBcImlcIjtcblx0XHRyZXR1cm4gIWVsLmdldEF0dHJpYnV0ZShcImNsYXNzTmFtZVwiKTtcblx0fSk7XG5cblx0LyogZ2V0RWxlbWVudChzKUJ5KlxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gQ2hlY2sgaWYgZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpIHJldHVybnMgb25seSBlbGVtZW50c1xuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRlbC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlQ29tbWVudChcIlwiKSApO1xuXHRcdHJldHVybiAhZWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCIqXCIpLmxlbmd0aDtcblx0fSk7XG5cblx0Ly8gU3VwcG9ydDogSUU8OVxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKTtcblxuXHQvLyBTdXBwb3J0OiBJRTwxMFxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1lbnRzIGJ5IG5hbWVcblx0Ly8gVGhlIGJyb2tlbiBnZXRFbGVtZW50QnlJZCBtZXRob2RzIGRvbid0IHBpY2sgdXAgcHJvZ3JhbW1hdGljYWxseS1zZXQgbmFtZXMsXG5cdC8vIHNvIHVzZSBhIHJvdW5kYWJvdXQgZ2V0RWxlbWVudHNCeU5hbWUgdGVzdFxuXHRzdXBwb3J0LmdldEJ5SWQgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaWQgPSBleHBhbmRvO1xuXHRcdHJldHVybiAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUgfHwgIWRvY3VtZW50LmdldEVsZW1lbnRzQnlOYW1lKCBleHBhbmRvICkubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBJRCBmaWx0ZXIgYW5kIGZpbmRcblx0aWYgKCBzdXBwb3J0LmdldEJ5SWQgKSB7XG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoXCJpZFwiKSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXHRcdFx0XHRyZXR1cm4gZWxlbSA/IFsgZWxlbSBdIDogW107XG5cdFx0XHR9XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gIGZ1bmN0aW9uKCBpZCApIHtcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgbm9kZSA9IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZU5vZGUgIT09IFwidW5kZWZpbmVkXCIgJiZcblx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcblx0XHRcdFx0cmV0dXJuIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gYXR0cklkO1xuXHRcdFx0fTtcblx0XHR9O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgNiAtIDcgb25seVxuXHRcdC8vIGdldEVsZW1lbnRCeUlkIGlzIG5vdCByZWxpYWJsZSBhcyBhIGZpbmQgc2hvcnRjdXRcblx0XHRFeHByLmZpbmRbXCJJRFwiXSA9IGZ1bmN0aW9uKCBpZCwgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRcdHZhciBub2RlLCBpLCBlbGVtcyxcblx0XHRcdFx0XHRlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggaWQgKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0gKSB7XG5cblx0XHRcdFx0XHQvLyBWZXJpZnkgdGhlIGlkIGF0dHJpYnV0ZVxuXHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcblx0XHRcdFx0XHRpZiAoIG5vZGUgJiYgbm9kZS52YWx1ZSA9PT0gaWQgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRmFsbCBiYWNrIG9uIGdldEVsZW1lbnRzQnlOYW1lXG5cdFx0XHRcdFx0ZWxlbXMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlOYW1lKCBpZCApO1xuXHRcdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtc1tpKytdKSApIHtcblx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcblx0XHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIFsgZWxlbSBdO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9XG5cblx0Ly8gVGFnXG5cdEV4cHIuZmluZFtcIlRBR1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgP1xuXHRcdGZ1bmN0aW9uKCB0YWcsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxuXHRcdFx0fSBlbHNlIGlmICggc3VwcG9ydC5xc2EgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwoIHRhZyApO1xuXHRcdFx0fVxuXHRcdH0gOlxuXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHR0bXAgPSBbXSxcblx0XHRcdFx0aSA9IDAsXG5cdFx0XHRcdC8vIEJ5IGhhcHB5IGNvaW5jaWRlbmNlLCBhIChicm9rZW4pIGdFQlROIGFwcGVhcnMgb24gRG9jdW1lbnRGcmFnbWVudCBub2RlcyB0b29cblx0XHRcdFx0cmVzdWx0cyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyApO1xuXG5cdFx0XHQvLyBGaWx0ZXIgb3V0IHBvc3NpYmxlIGNvbW1lbnRzXG5cdFx0XHRpZiAoIHRhZyA9PT0gXCIqXCIgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdHRtcC5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHRtcDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdH07XG5cblx0Ly8gQ2xhc3Ncblx0RXhwci5maW5kW1wiQ0xBU1NcIl0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XG5cdFx0XHRyZXR1cm4gY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBjbGFzc05hbWUgKTtcblx0XHR9XG5cdH07XG5cblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxuXG5cdC8vIG1hdGNoZXNTZWxlY3Rvcig6YWN0aXZlKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoSUU5L09wZXJhIDExLjUpXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcblxuXHQvLyBxU2EoOmZvY3VzKSByZXBvcnRzIGZhbHNlIHdoZW4gdHJ1ZSAoQ2hyb21lIDIxKVxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3Jcblx0Ly8gd2hlbmV2ZXIgYGRvY3VtZW50LmFjdGl2ZUVsZW1lbnRgIGlzIGFjY2Vzc2VkIG9uIGFuIGlmcmFtZVxuXHQvLyBTbywgd2UgYWxsb3cgOmZvY3VzIHRvIHBhc3MgdGhyb3VnaCBRU0EgYWxsIHRoZSB0aW1lIHRvIGF2b2lkIHRoZSBJRSBlcnJvclxuXHQvLyBTZWUgaHR0cHM6Ly9idWdzLmpxdWVyeS5jb20vdGlja2V0LzEzMzc4XG5cdHJidWdneVFTQSA9IFtdO1xuXG5cdGlmICggKHN1cHBvcnQucXNhID0gcm5hdGl2ZS50ZXN0KCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsICkpICkge1xuXHRcdC8vIEJ1aWxkIFFTQSByZWdleFxuXHRcdC8vIFJlZ2V4IHN0cmF0ZWd5IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmlcblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0Ly8gU2VsZWN0IGlzIHNldCB0byBlbXB0eSBzdHJpbmcgb24gcHVycG9zZVxuXHRcdFx0Ly8gVGhpcyBpcyB0byB0ZXN0IElFJ3MgdHJlYXRtZW50IG9mIG5vdCBleHBsaWNpdGx5XG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcblx0XHRcdC8vIHNpbmNlIGl0cyBwcmVzZW5jZSBzaG91bGQgYmUgZW5vdWdoXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBpZD0nXCIgKyBleHBhbmRvICsgXCItXFxyXFxcXCcgbXNhbGxvd2NhcHR1cmU9Jyc+XCIgK1xuXHRcdFx0XHRcIjxvcHRpb24gc2VsZWN0ZWQ9Jyc+PC9vcHRpb24+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOCwgT3BlcmEgMTEtMTIuMTZcblx0XHRcdC8vIE5vdGhpbmcgc2hvdWxkIGJlIHNlbGVjdGVkIHdoZW4gZW1wdHkgc3RyaW5ncyBmb2xsb3cgXj0gb3IgJD0gb3IgKj1cblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxuXHRcdFx0Ly8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9pZS9oaDQ2NTM4OC5hc3B4I2F0dHJpYnV0ZV9zZWN0aW9uXG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCJbbXNhbGxvd2NhcHR1cmVePScnXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlsqXiRdPVwiICsgd2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxuXHRcdFx0Ly8gQm9vbGVhbiBhdHRyaWJ1dGVzIGFuZCBcInZhbHVlXCIgYXJlIG5vdCB0cmVhdGVkIGNvcnJlY3RseVxuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIltzZWxlY3RlZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKig/OnZhbHVlfFwiICsgYm9vbGVhbnMgKyBcIilcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWU8MjksIEFuZHJvaWQ8NC40LCBTYWZhcmk8Ny4wKywgaU9TPDcuMCssIFBoYW50b21KUzwxLjkuOCtcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiW2lkfj1cIiArIGV4cGFuZG8gKyBcIi1dXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwifj1cIik7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFdlYmtpdC9PcGVyYSAtIDpjaGVja2VkIHNob3VsZCByZXR1cm4gc2VsZWN0ZWQgb3B0aW9uIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6Y2hlY2tlZFwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiOmNoZWNrZWRcIik7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXG5cdFx0XHQvLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM2ODUxXG5cdFx0XHQvLyBJbi1wYWdlIGBzZWxlY3RvciNpZCBzaWJsaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzXG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaChcIi4jLitbK35dXCIpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0YXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0XHRcdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nJyBkaXNhYmxlZD0nZGlzYWJsZWQnPjwvYT5cIiArXG5cdFx0XHRcdFwiPHNlbGVjdCBkaXNhYmxlZD0nZGlzYWJsZWQnPjxvcHRpb24vPjwvc2VsZWN0PlwiO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHNcblx0XHRcdC8vIFRoZSB0eXBlIGFuZCBuYW1lIGF0dHJpYnV0ZXMgYXJlIHJlc3RyaWN0ZWQgZHVyaW5nIC5pbm5lckhUTUwgYXNzaWdubWVudFxuXHRcdFx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xuXHRcdFx0ZWwuYXBwZW5kQ2hpbGQoIGlucHV0ICkuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJEXCIgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGVcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIltuYW1lPWRdXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwibmFtZVwiICsgd2hpdGVzcGFjZSArIFwiKlsqXiR8IX5dPz1cIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBGRiAzLjUgLSA6ZW5hYmxlZC86ZGlzYWJsZWQgYW5kIGhpZGRlbiBlbGVtZW50cyAoaGlkZGVuIGVsZW1lbnRzIGFyZSBzdGlsbCBlbmFibGVkKVxuXHRcdFx0Ly8gSUU4IHRocm93cyBlcnJvciBoZXJlIGFuZCB3aWxsIG5vdCBzZWUgbGF0ZXIgdGVzdHNcblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIjplbmFibGVkXCIpLmxlbmd0aCAhPT0gMiApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTktMTErXG5cdFx0XHQvLyBJRSdzIDpkaXNhYmxlZCBzZWxlY3RvciBkb2VzIG5vdCBwaWNrIHVwIHRoZSBjaGlsZHJlbiBvZiBkaXNhYmxlZCBmaWVsZHNldHNcblx0XHRcdGRvY0VsZW0uYXBwZW5kQ2hpbGQoIGVsICkuZGlzYWJsZWQgPSB0cnVlO1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmRpc2FibGVkXCIpLmxlbmd0aCAhPT0gMiApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiOmVuYWJsZWRcIiwgXCI6ZGlzYWJsZWRcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPcGVyYSAxMC0xMSBkb2VzIG5vdCB0aHJvdyBvbiBwb3N0LWNvbW1hIGludmFsaWQgcHNldWRvc1xuXHRcdFx0ZWwucXVlcnlTZWxlY3RvckFsbChcIiosOnhcIik7XG5cdFx0XHRyYnVnZ3lRU0EucHVzaChcIiwuKjpcIik7XG5cdFx0fSk7XG5cdH1cblxuXHRpZiAoIChzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciA9IHJuYXRpdmUudGVzdCggKG1hdGNoZXMgPSBkb2NFbGVtLm1hdGNoZXMgfHxcblx0XHRkb2NFbGVtLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fFxuXHRcdGRvY0VsZW0ubW96TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5vTWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tc01hdGNoZXNTZWxlY3RvcikgKSkgKSB7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0Ly8gQ2hlY2sgdG8gc2VlIGlmIGl0J3MgcG9zc2libGUgdG8gZG8gbWF0Y2hlc1NlbGVjdG9yXG5cdFx0XHQvLyBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlIChJRSA5KVxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZWwsIFwiKlwiICk7XG5cblx0XHRcdC8vIFRoaXMgc2hvdWxkIGZhaWwgd2l0aCBhbiBleGNlcHRpb25cblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcblx0XHRcdG1hdGNoZXMuY2FsbCggZWwsIFwiW3MhPScnXTp4XCIgKTtcblx0XHRcdHJidWdneU1hdGNoZXMucHVzaCggXCIhPVwiLCBwc2V1ZG9zICk7XG5cdFx0fSk7XG5cdH1cblxuXHRyYnVnZ3lRU0EgPSByYnVnZ3lRU0EubGVuZ3RoICYmIG5ldyBSZWdFeHAoIHJidWdneVFTQS5qb2luKFwifFwiKSApO1xuXHRyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKFwifFwiKSApO1xuXG5cdC8qIENvbnRhaW5zXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblx0aGFzQ29tcGFyZSA9IHJuYXRpdmUudGVzdCggZG9jRWxlbS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiApO1xuXG5cdC8vIEVsZW1lbnQgY29udGFpbnMgYW5vdGhlclxuXHQvLyBQdXJwb3NlZnVsbHkgc2VsZi1leGNsdXNpdmVcblx0Ly8gQXMgaW4sIGFuIGVsZW1lbnQgZG9lcyBub3QgY29udGFpbiBpdHNlbGZcblx0Y29udGFpbnMgPSBoYXNDb21wYXJlIHx8IHJuYXRpdmUudGVzdCggZG9jRWxlbS5jb250YWlucyApID9cblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdHZhciBhZG93biA9IGEubm9kZVR5cGUgPT09IDkgPyBhLmRvY3VtZW50RWxlbWVudCA6IGEsXG5cdFx0XHRcdGJ1cCA9IGIgJiYgYi5wYXJlbnROb2RlO1xuXHRcdFx0cmV0dXJuIGEgPT09IGJ1cCB8fCAhISggYnVwICYmIGJ1cC5ub2RlVHlwZSA9PT0gMSAmJiAoXG5cdFx0XHRcdGFkb3duLmNvbnRhaW5zID9cblx0XHRcdFx0XHRhZG93bi5jb250YWlucyggYnVwICkgOlxuXHRcdFx0XHRcdGEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gJiYgYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYnVwICkgJiAxNlxuXHRcdFx0KSk7XG5cdFx0fSA6XG5cdFx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0XHRpZiAoIGIgKSB7XG5cdFx0XHRcdHdoaWxlICggKGIgPSBiLnBhcmVudE5vZGUpICkge1xuXHRcdFx0XHRcdGlmICggYiA9PT0gYSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH07XG5cblx0LyogU29ydGluZ1xuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5cblx0Ly8gRG9jdW1lbnQgb3JkZXIgc29ydGluZ1xuXHRzb3J0T3JkZXIgPSBoYXNDb21wYXJlID9cblx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cblx0XHQvLyBGbGFnIGZvciBkdXBsaWNhdGUgcmVtb3ZhbFxuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHQvLyBTb3J0IG9uIG1ldGhvZCBleGlzdGVuY2UgaWYgb25seSBvbmUgaW5wdXQgaGFzIGNvbXBhcmVEb2N1bWVudFBvc2l0aW9uXG5cdFx0dmFyIGNvbXBhcmUgPSAhYS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAtICFiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uO1xuXHRcdGlmICggY29tcGFyZSApIHtcblx0XHRcdHJldHVybiBjb21wYXJlO1xuXHRcdH1cblxuXHRcdC8vIENhbGN1bGF0ZSBwb3NpdGlvbiBpZiBib3RoIGlucHV0cyBiZWxvbmcgdG8gdGhlIHNhbWUgZG9jdW1lbnRcblx0XHRjb21wYXJlID0gKCBhLm93bmVyRG9jdW1lbnQgfHwgYSApID09PSAoIGIub3duZXJEb2N1bWVudCB8fCBiICkgP1xuXHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYiApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHdlIGtub3cgdGhleSBhcmUgZGlzY29ubmVjdGVkXG5cdFx0XHQxO1xuXG5cdFx0Ly8gRGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0aWYgKCBjb21wYXJlICYgMSB8fFxuXHRcdFx0KCFzdXBwb3J0LnNvcnREZXRhY2hlZCAmJiBiLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBhICkgPT09IGNvbXBhcmUpICkge1xuXG5cdFx0XHQvLyBDaG9vc2UgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBpcyByZWxhdGVkIHRvIG91ciBwcmVmZXJyZWQgZG9jdW1lbnRcblx0XHRcdGlmICggYSA9PT0gZG9jdW1lbnQgfHwgYS5vd25lckRvY3VtZW50ID09PSBwcmVmZXJyZWREb2MgJiYgY29udGFpbnMocHJlZmVycmVkRG9jLCBhKSApIHtcblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCBiID09PSBkb2N1bWVudCB8fCBiLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGIpICkge1xuXHRcdFx0XHRyZXR1cm4gMTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWFpbnRhaW4gb3JpZ2luYWwgb3JkZXJcblx0XHRcdHJldHVybiBzb3J0SW5wdXQgP1xuXHRcdFx0XHQoIGluZGV4T2YoIHNvcnRJbnB1dCwgYSApIC0gaW5kZXhPZiggc29ydElucHV0LCBiICkgKSA6XG5cdFx0XHRcdDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGNvbXBhcmUgJiA0ID8gLTEgOiAxO1xuXHR9IDpcblx0ZnVuY3Rpb24oIGEsIGIgKSB7XG5cdFx0Ly8gRXhpdCBlYXJseSBpZiB0aGUgbm9kZXMgYXJlIGlkZW50aWNhbFxuXHRcdGlmICggYSA9PT0gYiApIHtcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XG5cdFx0XHRyZXR1cm4gMDtcblx0XHR9XG5cblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRhdXAgPSBhLnBhcmVudE5vZGUsXG5cdFx0XHRidXAgPSBiLnBhcmVudE5vZGUsXG5cdFx0XHRhcCA9IFsgYSBdLFxuXHRcdFx0YnAgPSBbIGIgXTtcblxuXHRcdC8vIFBhcmVudGxlc3Mgbm9kZXMgYXJlIGVpdGhlciBkb2N1bWVudHMgb3IgZGlzY29ubmVjdGVkXG5cdFx0aWYgKCAhYXVwIHx8ICFidXAgKSB7XG5cdFx0XHRyZXR1cm4gYSA9PT0gZG9jdW1lbnQgPyAtMSA6XG5cdFx0XHRcdGIgPT09IGRvY3VtZW50ID8gMSA6XG5cdFx0XHRcdGF1cCA/IC0xIDpcblx0XHRcdFx0YnVwID8gMSA6XG5cdFx0XHRcdHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblxuXHRcdC8vIElmIHRoZSBub2RlcyBhcmUgc2libGluZ3MsIHdlIGNhbiBkbyBhIHF1aWNrIGNoZWNrXG5cdFx0fSBlbHNlIGlmICggYXVwID09PSBidXAgKSB7XG5cdFx0XHRyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlIHdlIG5lZWQgZnVsbCBsaXN0cyBvZiB0aGVpciBhbmNlc3RvcnMgZm9yIGNvbXBhcmlzb25cblx0XHRjdXIgPSBhO1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblx0XHRjdXIgPSBiO1xuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcblx0XHRcdGJwLnVuc2hpZnQoIGN1ciApO1xuXHRcdH1cblxuXHRcdC8vIFdhbGsgZG93biB0aGUgdHJlZSBsb29raW5nIGZvciBhIGRpc2NyZXBhbmN5XG5cdFx0d2hpbGUgKCBhcFtpXSA9PT0gYnBbaV0gKSB7XG5cdFx0XHRpKys7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGkgP1xuXHRcdFx0Ly8gRG8gYSBzaWJsaW5nIGNoZWNrIGlmIHRoZSBub2RlcyBoYXZlIGEgY29tbW9uIGFuY2VzdG9yXG5cdFx0XHRzaWJsaW5nQ2hlY2soIGFwW2ldLCBicFtpXSApIDpcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIG5vZGVzIGluIG91ciBkb2N1bWVudCBzb3J0IGZpcnN0XG5cdFx0XHRhcFtpXSA9PT0gcHJlZmVycmVkRG9jID8gLTEgOlxuXHRcdFx0YnBbaV0gPT09IHByZWZlcnJlZERvYyA/IDEgOlxuXHRcdFx0MDtcblx0fTtcblxuXHRyZXR1cm4gZG9jdW1lbnQ7XG59O1xuXG5TaXp6bGUubWF0Y2hlcyA9IGZ1bmN0aW9uKCBleHByLCBlbGVtZW50cyApIHtcblx0cmV0dXJuIFNpenpsZSggZXhwciwgbnVsbCwgbnVsbCwgZWxlbWVudHMgKTtcbn07XG5cblNpenpsZS5tYXRjaGVzU2VsZWN0b3IgPSBmdW5jdGlvbiggZWxlbSwgZXhwciApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxuXHRcdCFub25uYXRpdmVTZWxlY3RvckNhY2hlWyBleHByICsgXCIgXCIgXSAmJlxuXHRcdCggIXJidWdneU1hdGNoZXMgfHwgIXJidWdneU1hdGNoZXMudGVzdCggZXhwciApICkgJiZcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XG5cblx0XHR0cnkge1xuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xuXG5cdFx0XHQvLyBJRSA5J3MgbWF0Y2hlc1NlbGVjdG9yIHJldHVybnMgZmFsc2Ugb24gZGlzY29ubmVjdGVkIG5vZGVzXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XG5cdFx0XHRcdFx0Ly8gQXMgd2VsbCwgZGlzY29ubmVjdGVkIG5vZGVzIGFyZSBzYWlkIHRvIGJlIGluIGEgZG9jdW1lbnRcblx0XHRcdFx0XHQvLyBmcmFnbWVudCBpbiBJRSA5XG5cdFx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblx0XHR9IGNhdGNoIChlKSB7XG5cdFx0XHRub25uYXRpdmVTZWxlY3RvckNhY2hlKCBleHByLCB0cnVlICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcbn07XG5cblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0ICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XG5cdH1cblx0cmV0dXJuIGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICk7XG59O1xuXG5TaXp6bGUuYXR0ciA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHR2YXIgZm4gPSBFeHByLmF0dHJIYW5kbGVbIG5hbWUudG9Mb3dlckNhc2UoKSBdLFxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxuXHRcdHZhbCA9IGZuICYmIGhhc093bi5jYWxsKCBFeHByLmF0dHJIYW5kbGUsIG5hbWUudG9Mb3dlckNhc2UoKSApID9cblx0XHRcdGZuKCBlbGVtLCBuYW1lLCAhZG9jdW1lbnRJc0hUTUwgKSA6XG5cdFx0XHR1bmRlZmluZWQ7XG5cblx0cmV0dXJuIHZhbCAhPT0gdW5kZWZpbmVkID9cblx0XHR2YWwgOlxuXHRcdHN1cHBvcnQuYXR0cmlidXRlcyB8fCAhZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0ZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKSA6XG5cdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVkID9cblx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcbn07XG5cblNpenpsZS5lc2NhcGUgPSBmdW5jdGlvbiggc2VsICkge1xuXHRyZXR1cm4gKHNlbCArIFwiXCIpLnJlcGxhY2UoIHJjc3Nlc2NhcGUsIGZjc3Nlc2NhcGUgKTtcbn07XG5cblNpenpsZS5lcnJvciA9IGZ1bmN0aW9uKCBtc2cgKSB7XG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xufTtcblxuLyoqXG4gKiBEb2N1bWVudCBzb3J0aW5nIGFuZCByZW1vdmluZyBkdXBsaWNhdGVzXG4gKiBAcGFyYW0ge0FycmF5TGlrZX0gcmVzdWx0c1xuICovXG5TaXp6bGUudW5pcXVlU29ydCA9IGZ1bmN0aW9uKCByZXN1bHRzICkge1xuXHR2YXIgZWxlbSxcblx0XHRkdXBsaWNhdGVzID0gW10sXG5cdFx0aiA9IDAsXG5cdFx0aSA9IDA7XG5cblx0Ly8gVW5sZXNzIHdlICprbm93KiB3ZSBjYW4gZGV0ZWN0IGR1cGxpY2F0ZXMsIGFzc3VtZSB0aGVpciBwcmVzZW5jZVxuXHRoYXNEdXBsaWNhdGUgPSAhc3VwcG9ydC5kZXRlY3REdXBsaWNhdGVzO1xuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcblx0cmVzdWx0cy5zb3J0KCBzb3J0T3JkZXIgKTtcblxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcblx0XHR3aGlsZSAoIChlbGVtID0gcmVzdWx0c1tpKytdKSApIHtcblx0XHRcdGlmICggZWxlbSA9PT0gcmVzdWx0c1sgaSBdICkge1xuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0cmVzdWx0cy5zcGxpY2UoIGR1cGxpY2F0ZXNbIGogXSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENsZWFyIGlucHV0IGFmdGVyIHNvcnRpbmcgdG8gcmVsZWFzZSBvYmplY3RzXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxuXHRzb3J0SW5wdXQgPSBudWxsO1xuXG5cdHJldHVybiByZXN1bHRzO1xufTtcblxuLyoqXG4gKiBVdGlsaXR5IGZ1bmN0aW9uIGZvciByZXRyaWV2aW5nIHRoZSB0ZXh0IHZhbHVlIG9mIGFuIGFycmF5IG9mIERPTSBub2Rlc1xuICogQHBhcmFtIHtBcnJheXxFbGVtZW50fSBlbGVtXG4gKi9cbmdldFRleHQgPSBTaXp6bGUuZ2V0VGV4dCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHR2YXIgbm9kZSxcblx0XHRyZXQgPSBcIlwiLFxuXHRcdGkgPSAwLFxuXHRcdG5vZGVUeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRpZiAoICFub2RlVHlwZSApIHtcblx0XHQvLyBJZiBubyBub2RlVHlwZSwgdGhpcyBpcyBleHBlY3RlZCB0byBiZSBhbiBhcnJheVxuXHRcdHdoaWxlICggKG5vZGUgPSBlbGVtW2krK10pICkge1xuXHRcdFx0Ly8gRG8gbm90IHRyYXZlcnNlIGNvbW1lbnQgbm9kZXNcblx0XHRcdHJldCArPSBnZXRUZXh0KCBub2RlICk7XG5cdFx0fVxuXHR9IGVsc2UgaWYgKCBub2RlVHlwZSA9PT0gMSB8fCBub2RlVHlwZSA9PT0gOSB8fCBub2RlVHlwZSA9PT0gMTEgKSB7XG5cdFx0Ly8gVXNlIHRleHRDb250ZW50IGZvciBlbGVtZW50c1xuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS50ZXh0Q29udGVudCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLnRleHRDb250ZW50O1xuXHRcdH0gZWxzZSB7XG5cdFx0XHQvLyBUcmF2ZXJzZSBpdHMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVZhbHVlO1xuXHR9XG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xuXG5cdHJldHVybiByZXQ7XG59O1xuXG5FeHByID0gU2l6emxlLnNlbGVjdG9ycyA9IHtcblxuXHQvLyBDYW4gYmUgYWRqdXN0ZWQgYnkgdGhlIHVzZXJcblx0Y2FjaGVMZW5ndGg6IDUwLFxuXG5cdGNyZWF0ZVBzZXVkbzogbWFya0Z1bmN0aW9uLFxuXG5cdG1hdGNoOiBtYXRjaEV4cHIsXG5cblx0YXR0ckhhbmRsZToge30sXG5cblx0ZmluZDoge30sXG5cblx0cmVsYXRpdmU6IHtcblx0XHRcIj5cIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiIFwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIgfSxcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXG5cdFx0XCJ+XCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiIH1cblx0fSxcblxuXHRwcmVGaWx0ZXI6IHtcblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHQvLyBNb3ZlIHRoZSBnaXZlbiB2YWx1ZSB0byBtYXRjaFszXSB3aGV0aGVyIHF1b3RlZCBvciB1bnF1b3RlZFxuXHRcdFx0bWF0Y2hbM10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzJdID09PSBcIn49XCIgKSB7XG5cdFx0XHRcdG1hdGNoWzNdID0gXCIgXCIgKyBtYXRjaFszXSArIFwiIFwiO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHQvKiBtYXRjaGVzIGZyb20gbWF0Y2hFeHByW1wiQ0hJTERcIl1cblx0XHRcdFx0MSB0eXBlIChvbmx5fG50aHwuLi4pXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0MyBhcmd1bWVudCAoZXZlbnxvZGR8XFxkKnxcXGQqbihbKy1dXFxkKyk/fC4uLilcblx0XHRcdFx0NCB4bi1jb21wb25lbnQgb2YgeG4reSBhcmd1bWVudCAoWystXT9cXGQqbnwpXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NiB4IG9mIHhuLWNvbXBvbmVudFxuXHRcdFx0XHQ3IHNpZ24gb2YgeS1jb21wb25lbnRcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XG5cdFx0XHQqL1xuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS50b0xvd2VyQ2FzZSgpO1xuXG5cdFx0XHRpZiAoIG1hdGNoWzFdLnNsaWNlKCAwLCAzICkgPT09IFwibnRoXCIgKSB7XG5cdFx0XHRcdC8vIG50aC0qIHJlcXVpcmVzIGFyZ3VtZW50XG5cdFx0XHRcdGlmICggIW1hdGNoWzNdICkge1xuXHRcdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIG51bWVyaWMgeCBhbmQgeSBwYXJhbWV0ZXJzIGZvciBFeHByLmZpbHRlci5DSElMRFxuXHRcdFx0XHQvLyByZW1lbWJlciB0aGF0IGZhbHNlL3RydWUgY2FzdCByZXNwZWN0aXZlbHkgdG8gMC8xXG5cdFx0XHRcdG1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSBcImV2ZW5cIiB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApICk7XG5cdFx0XHRcdG1hdGNoWzVdID0gKyggKCBtYXRjaFs3XSArIG1hdGNoWzhdICkgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKTtcblxuXHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXG5cdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gbWF0Y2g7XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdHZhciBleGNlc3MsXG5cdFx0XHRcdHVucXVvdGVkID0gIW1hdGNoWzZdICYmIG1hdGNoWzJdO1xuXG5cdFx0XHRpZiAoIG1hdGNoRXhwcltcIkNISUxEXCJdLnRlc3QoIG1hdGNoWzBdICkgKSB7XG5cdFx0XHRcdHJldHVybiBudWxsO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBY2NlcHQgcXVvdGVkIGFyZ3VtZW50cyBhcy1pc1xuXHRcdFx0aWYgKCBtYXRjaFszXSApIHtcblx0XHRcdFx0bWF0Y2hbMl0gPSBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiO1xuXG5cdFx0XHQvLyBTdHJpcCBleGNlc3MgY2hhcmFjdGVycyBmcm9tIHVucXVvdGVkIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXG5cdFx0XHRcdC8vIEdldCBleGNlc3MgZnJvbSB0b2tlbml6ZSAocmVjdXJzaXZlbHkpXG5cdFx0XHRcdChleGNlc3MgPSB0b2tlbml6ZSggdW5xdW90ZWQsIHRydWUgKSkgJiZcblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXG5cdFx0XHRcdChleGNlc3MgPSB1bnF1b3RlZC5pbmRleE9mKCBcIilcIiwgdW5xdW90ZWQubGVuZ3RoIC0gZXhjZXNzICkgLSB1bnF1b3RlZC5sZW5ndGgpICkge1xuXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XG5cdFx0XHRcdG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAsIGV4Y2VzcyApO1xuXHRcdFx0XHRtYXRjaFsyXSA9IHVucXVvdGVkLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV0dXJuIG9ubHkgY2FwdHVyZXMgbmVlZGVkIGJ5IHRoZSBwc2V1ZG8gZmlsdGVyIG1ldGhvZCAodHlwZSBhbmQgYXJndW1lbnQpXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcblx0XHR9XG5cdH0sXG5cblx0ZmlsdGVyOiB7XG5cblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcblx0XHRcdHZhciBub2RlTmFtZSA9IG5vZGVOYW1lU2VsZWN0b3IucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIG5vZGVOYW1lU2VsZWN0b3IgPT09IFwiKlwiID9cblx0XHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9IDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBub2RlTmFtZTtcblx0XHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xuXHRcdFx0dmFyIHBhdHRlcm4gPSBjbGFzc0NhY2hlWyBjbGFzc05hbWUgKyBcIiBcIiBdO1xuXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxuXHRcdFx0XHQocGF0dGVybiA9IG5ldyBSZWdFeHAoIFwiKF58XCIgKyB3aGl0ZXNwYWNlICsgXCIpXCIgKyBjbGFzc05hbWUgKyBcIihcIiArIHdoaXRlc3BhY2UgKyBcInwkKVwiICkpICYmXG5cdFx0XHRcdGNsYXNzQ2FjaGUoIGNsYXNzTmFtZSwgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdCggdHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIgKTtcblx0XHRcdFx0fSk7XG5cdFx0fSxcblxuXHRcdFwiQVRUUlwiOiBmdW5jdGlvbiggbmFtZSwgb3BlcmF0b3IsIGNoZWNrICkge1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdFx0XHRpZiAoIHJlc3VsdCA9PSBudWxsICkge1xuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggIW9wZXJhdG9yICkge1xuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XG5cblx0XHRcdFx0cmV0dXJuIG9wZXJhdG9yID09PSBcIj1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJePVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPT09IDAgOlxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIio9XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ+PVwiID8gKCBcIiBcIiArIHJlc3VsdC5yZXBsYWNlKCByd2hpdGVzcGFjZSwgXCIgXCIgKSArIFwiIFwiICkuaW5kZXhPZiggY2hlY2sgKSA+IC0xIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCJ8PVwiID8gcmVzdWx0ID09PSBjaGVjayB8fCByZXN1bHQuc2xpY2UoIDAsIGNoZWNrLmxlbmd0aCArIDEgKSA9PT0gY2hlY2sgKyBcIi1cIiA6XG5cdFx0XHRcdFx0ZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIkNISUxEXCI6IGZ1bmN0aW9uKCB0eXBlLCB3aGF0LCBhcmd1bWVudCwgZmlyc3QsIGxhc3QgKSB7XG5cdFx0XHR2YXIgc2ltcGxlID0gdHlwZS5zbGljZSggMCwgMyApICE9PSBcIm50aFwiLFxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXG5cdFx0XHRcdG9mVHlwZSA9IHdoYXQgPT09IFwib2YtdHlwZVwiO1xuXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XG5cblx0XHRcdFx0Ly8gU2hvcnRjdXQgZm9yIDpudGgtKihuKVxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRyZXR1cm4gISFlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRcdH0gOlxuXG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGNhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSwgbm9kZSwgbm9kZUluZGV4LCBzdGFydCxcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXG5cdFx0XHRcdFx0XHRwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGUsXG5cdFx0XHRcdFx0XHRuYW1lID0gb2ZUeXBlICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSxcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxuXHRcdFx0XHRcdFx0ZGlmZiA9IGZhbHNlO1xuXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cblx0XHRcdFx0XHRcdC8vIDooZmlyc3R8bGFzdHxvbmx5KS0oY2hpbGR8b2YtdHlwZSlcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIGRpciApIHtcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gbm9kZVsgZGlyIF0pICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBvZlR5cGUgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUgOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0Ly8gUmV2ZXJzZSBkaXJlY3Rpb24gZm9yIDpvbmx5LSogKGlmIHdlIGhhdmVuJ3QgeWV0IGRvbmUgc28pXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRzdGFydCA9IFsgZm9yd2FyZCA/IHBhcmVudC5maXJzdENoaWxkIDogcGFyZW50Lmxhc3RDaGlsZCBdO1xuXG5cdFx0XHRcdFx0XHQvLyBub24teG1sIDpudGgtY2hpbGQoLi4uKSBzdG9yZXMgY2FjaGUgZGF0YSBvbiBgcGFyZW50YFxuXHRcdFx0XHRcdFx0aWYgKCBmb3J3YXJkICYmIHVzZUNhY2hlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFNlZWsgYGVsZW1gIGZyb20gYSBwcmV2aW91c2x5LWNhY2hlZCBpbmRleFxuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0bm9kZSA9IHBhcmVudDtcblx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdG5vZGVJbmRleCA9IGNhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgY2FjaGVbIDEgXTtcblx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleCAmJiBjYWNoZVsgMiBdO1xuXHRcdFx0XHRcdFx0XHRub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBub2RlSW5kZXggXTtcblxuXHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gKytub2RlSW5kZXggJiYgbm9kZSAmJiBub2RlWyBkaXIgXSB8fFxuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmFsbGJhY2sgdG8gc2Vla2luZyBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcblx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFdoZW4gZm91bmQsIGNhY2hlIGluZGV4ZXMgb24gYHBhcmVudGAgYW5kIGJyZWFrXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlLm5vZGVUeXBlID09PSAxICYmICsrZGlmZiAmJiBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHByZXZpb3VzbHktY2FjaGVkIGVsZW1lbnQgaW5kZXggaWYgYXZhaWxhYmxlXG5cdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0Ly8gLi4uaW4gYSBnemlwLWZyaWVuZGx5IHdheVxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xuXHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdGNhY2hlID0gdW5pcXVlQ2FjaGVbIHR5cGUgXSB8fCBbXTtcblx0XHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdFx0ZGlmZiA9IG5vZGVJbmRleDtcblx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdC8vIHhtbCA6bnRoLWNoaWxkKC4uLilcblx0XHRcdFx0XHRcdFx0Ly8gb3IgOm50aC1sYXN0LWNoaWxkKC4uLikgb3IgOm50aCgtbGFzdCk/LW9mLXR5cGUoLi4uKVxuXHRcdFx0XHRcdFx0XHRpZiAoIGRpZmYgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIFVzZSB0aGUgc2FtZSBsb29wIGFzIGFib3ZlIHRvIHNlZWsgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCsrZGlmZiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBDYWNoZSB0aGUgaW5kZXggb2YgZWFjaCBlbmNvdW50ZXJlZCBlbGVtZW50XG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggdXNlQ2FjaGUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBub2RlID09PSBlbGVtICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXG5cdFx0XHRcdFx0XHRkaWZmIC09IGxhc3Q7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZGlmZiA9PT0gZmlyc3QgfHwgKCBkaWZmICUgZmlyc3QgPT09IDAgJiYgZGlmZiAvIGZpcnN0ID49IDAgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiUFNFVURPXCI6IGZ1bmN0aW9uKCBwc2V1ZG8sIGFyZ3VtZW50ICkge1xuXHRcdFx0Ly8gcHNldWRvLWNsYXNzIG5hbWVzIGFyZSBjYXNlLWluc2Vuc2l0aXZlXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXG5cdFx0XHQvLyBQcmlvcml0aXplIGJ5IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gY2FzZSBjdXN0b20gcHNldWRvcyBhcmUgYWRkZWQgd2l0aCB1cHBlcmNhc2UgbGV0dGVyc1xuXHRcdFx0Ly8gUmVtZW1iZXIgdGhhdCBzZXRGaWx0ZXJzIGluaGVyaXRzIGZyb20gcHNldWRvc1xuXHRcdFx0dmFyIGFyZ3MsXG5cdFx0XHRcdGZuID0gRXhwci5wc2V1ZG9zWyBwc2V1ZG8gXSB8fCBFeHByLnNldEZpbHRlcnNbIHBzZXVkby50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgcHNldWRvOiBcIiArIHBzZXVkbyApO1xuXG5cdFx0XHQvLyBUaGUgdXNlciBtYXkgdXNlIGNyZWF0ZVBzZXVkbyB0byBpbmRpY2F0ZSB0aGF0XG5cdFx0XHQvLyBhcmd1bWVudHMgYXJlIG5lZWRlZCB0byBjcmVhdGUgdGhlIGZpbHRlciBmdW5jdGlvblxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xuXHRcdFx0aWYgKCBmblsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHRyZXR1cm4gZm4oIGFyZ3VtZW50ICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEJ1dCBtYWludGFpbiBzdXBwb3J0IGZvciBvbGQgc2lnbmF0dXJlc1xuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xuXHRcdFx0XHRhcmdzID0gWyBwc2V1ZG8sIHBzZXVkbywgXCJcIiwgYXJndW1lbnQgXTtcblx0XHRcdFx0cmV0dXJuIEV4cHIuc2V0RmlsdGVycy5oYXNPd25Qcm9wZXJ0eSggcHNldWRvLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0XHRcdFx0dmFyIGlkeCxcblx0XHRcdFx0XHRcdFx0bWF0Y2hlZCA9IGZuKCBzZWVkLCBhcmd1bWVudCApLFxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XG5cdFx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdFx0aWR4ID0gaW5kZXhPZiggc2VlZCwgbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFtpXSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pIDpcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmbiggZWxlbSwgMCwgYXJncyApO1xuXHRcdFx0XHRcdH07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBmbjtcblx0XHR9XG5cdH0sXG5cblx0cHNldWRvczoge1xuXHRcdC8vIFBvdGVudGlhbGx5IGNvbXBsZXggcHNldWRvc1xuXHRcdFwibm90XCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHQvLyBUcmltIHRoZSBzZWxlY3RvciBwYXNzZWQgdG8gY29tcGlsZVxuXHRcdFx0Ly8gdG8gYXZvaWQgdHJlYXRpbmcgbGVhZGluZyBhbmQgdHJhaWxpbmdcblx0XHRcdC8vIHNwYWNlcyBhcyBjb21iaW5hdG9yc1xuXHRcdFx0dmFyIGlucHV0ID0gW10sXG5cdFx0XHRcdHJlc3VsdHMgPSBbXSxcblx0XHRcdFx0bWF0Y2hlciA9IGNvbXBpbGUoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSApO1xuXG5cdFx0XHRyZXR1cm4gbWF0Y2hlclsgZXhwYW5kbyBdID9cblx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQgPSBtYXRjaGVyKCBzZWVkLCBudWxsLCB4bWwsIFtdICksXG5cdFx0XHRcdFx0XHRpID0gc2VlZC5sZW5ndGg7XG5cblx0XHRcdFx0XHQvLyBNYXRjaCBlbGVtZW50cyB1bm1hdGNoZWQgYnkgYG1hdGNoZXJgXG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcblx0XHRcdFx0XHRcdFx0c2VlZFtpXSA9ICEobWF0Y2hlc1tpXSA9IGVsZW0pO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSkgOlxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdGlucHV0WzBdID0gZWxlbTtcblx0XHRcdFx0XHRtYXRjaGVyKCBpbnB1dCwgbnVsbCwgeG1sLCByZXN1bHRzICk7XG5cdFx0XHRcdFx0Ly8gRG9uJ3Qga2VlcCB0aGUgZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdFx0XHRpbnB1dFswXSA9IG51bGw7XG5cdFx0XHRcdFx0cmV0dXJuICFyZXN1bHRzLnBvcCgpO1xuXHRcdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0XCJoYXNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuIFNpenpsZSggc2VsZWN0b3IsIGVsZW0gKS5sZW5ndGggPiAwO1xuXHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiY29udGFpbnNcIjogbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS50ZXh0Q29udGVudCB8fCBnZXRUZXh0KCBlbGVtICkgKS5pbmRleE9mKCB0ZXh0ICkgPiAtMTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3Jcblx0XHQvLyBpcyBiYXNlZCBzb2xlbHkgb24gdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZVxuXHRcdC8vIGJlaW5nIGVxdWFsIHRvIHRoZSBpZGVudGlmaWVyIEMsXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cblx0XHQvLyBUaGUgbWF0Y2hpbmcgb2YgQyBhZ2FpbnN0IHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWUgaXMgcGVyZm9ybWVkIGNhc2UtaW5zZW5zaXRpdmVseS5cblx0XHQvLyBUaGUgaWRlbnRpZmllciBDIGRvZXMgbm90IGhhdmUgdG8gYmUgYSB2YWxpZCBsYW5ndWFnZSBuYW1lLlwiXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xuXHRcdFwibGFuZ1wiOiBtYXJrRnVuY3Rpb24oIGZ1bmN0aW9uKCBsYW5nICkge1xuXHRcdFx0Ly8gbGFuZyB2YWx1ZSBtdXN0IGJlIGEgdmFsaWQgaWRlbnRpZmllclxuXHRcdFx0aWYgKCAhcmlkZW50aWZpZXIudGVzdChsYW5nIHx8IFwiXCIpICkge1xuXHRcdFx0XHRTaXp6bGUuZXJyb3IoIFwidW5zdXBwb3J0ZWQgbGFuZzogXCIgKyBsYW5nICk7XG5cdFx0XHR9XG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBlbGVtTGFuZztcblx0XHRcdFx0ZG8ge1xuXHRcdFx0XHRcdGlmICggKGVsZW1MYW5nID0gZG9jdW1lbnRJc0hUTUwgP1xuXHRcdFx0XHRcdFx0ZWxlbS5sYW5nIDpcblx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKFwieG1sOmxhbmdcIikgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKSApIHtcblxuXHRcdFx0XHRcdFx0ZWxlbUxhbmcgPSBlbGVtTGFuZy50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSB3aGlsZSAoIChlbGVtID0gZWxlbS5wYXJlbnROb2RlKSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHQvLyBNaXNjZWxsYW5lb3VzXG5cdFx0XCJ0YXJnZXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcblx0XHRcdHJldHVybiBoYXNoICYmIGhhc2guc2xpY2UoIDEgKSA9PT0gZWxlbS5pZDtcblx0XHR9LFxuXG5cdFx0XCJyb290XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY0VsZW07XG5cdFx0fSxcblxuXHRcdFwiZm9jdXNcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiAoIWRvY3VtZW50Lmhhc0ZvY3VzIHx8IGRvY3VtZW50Lmhhc0ZvY3VzKCkpICYmICEhKGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXgpO1xuXHRcdH0sXG5cblx0XHQvLyBCb29sZWFuIHByb3BlcnRpZXNcblx0XHRcImVuYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIGZhbHNlICksXG5cdFx0XCJkaXNhYmxlZFwiOiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggdHJ1ZSApLFxuXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0Ly8gSW4gQ1NTMywgOmNoZWNrZWQgc2hvdWxkIHJldHVybiBib3RoIGNoZWNrZWQgYW5kIHNlbGVjdGVkIGVsZW1lbnRzXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi8yMDExL1JFQy1jc3MzLXNlbGVjdG9ycy0yMDExMDkyOS8jY2hlY2tlZFxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIChub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmICEhZWxlbS5jaGVja2VkKSB8fCAobm9kZU5hbWUgPT09IFwib3B0aW9uXCIgJiYgISFlbGVtLnNlbGVjdGVkKTtcblx0XHR9LFxuXG5cdFx0XCJzZWxlY3RlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEFjY2Vzc2luZyB0aGlzIHByb3BlcnR5IG1ha2VzIHNlbGVjdGVkLWJ5LWRlZmF1bHRcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcblx0XHRcdGlmICggZWxlbS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRlbGVtLnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uc2VsZWN0ZWQgPT09IHRydWU7XG5cdFx0fSxcblxuXHRcdC8vIENvbnRlbnRzXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jZW1wdHktcHNldWRvXG5cdFx0XHQvLyA6ZW1wdHkgaXMgbmVnYXRlZCBieSBlbGVtZW50ICgxKSBvciBjb250ZW50IG5vZGVzICh0ZXh0OiAzOyBjZGF0YTogNDsgZW50aXR5IHJlZjogNSksXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxuXHRcdFx0Ly8gbm9kZVR5cGUgPCA2IHdvcmtzIGJlY2F1c2UgYXR0cmlidXRlcyAoMikgZG8gbm90IGFwcGVhciBhcyBjaGlsZHJlblxuXHRcdFx0Zm9yICggZWxlbSA9IGVsZW0uZmlyc3RDaGlsZDsgZWxlbTsgZWxlbSA9IGVsZW0ubmV4dFNpYmxpbmcgKSB7XG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9LFxuXG5cdFx0XCJwYXJlbnRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gIUV4cHIucHNldWRvc1tcImVtcHR5XCJdKCBlbGVtICk7XG5cdFx0fSxcblxuXHRcdC8vIEVsZW1lbnQvaW5wdXQgdHlwZXNcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaGVhZGVyLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJpbnB1dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiByaW5wdXRzLnRlc3QoIGVsZW0ubm9kZU5hbWUgKTtcblx0XHR9LFxuXG5cdFx0XCJidXR0b25cIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBuYW1lID09PSBcImlucHV0XCIgJiYgZWxlbS50eXBlID09PSBcImJ1dHRvblwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCI7XG5cdFx0fSxcblxuXHRcdFwidGV4dFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBhdHRyO1xuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXG5cdFx0XHRcdGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCIgJiZcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XG5cdFx0XHRcdC8vIE5ldyBIVE1MNSBhdHRyaWJ1dGUgdmFsdWVzIChlLmcuLCBcInNlYXJjaFwiKSBhcHBlYXIgd2l0aCBlbGVtLnR5cGUgPT09IFwidGV4dFwiXG5cdFx0XHRcdCggKGF0dHIgPSBlbGVtLmdldEF0dHJpYnV0ZShcInR5cGVcIikpID09IG51bGwgfHwgYXR0ci50b0xvd2VyQ2FzZSgpID09PSBcInRleHRcIiApO1xuXHRcdH0sXG5cblx0XHQvLyBQb3NpdGlvbi1pbi1jb2xsZWN0aW9uXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIFsgMCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJsYXN0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIFsgbGVuZ3RoIC0gMSBdO1xuXHRcdH0pLFxuXG5cdFx0XCJlcVwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XG5cdFx0fSksXG5cblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcIm9kZFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHZhciBpID0gMTtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSArPSAyICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwibHRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgP1xuXHRcdFx0XHRhcmd1bWVudCArIGxlbmd0aCA6XG5cdFx0XHRcdGFyZ3VtZW50ID4gbGVuZ3RoID9cblx0XHRcdFx0XHRsZW5ndGggOlxuXHRcdFx0XHRcdGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XG5cdFx0XHR2YXIgaSA9IGFyZ3VtZW50IDwgMCA/IGFyZ3VtZW50ICsgbGVuZ3RoIDogYXJndW1lbnQ7XG5cdFx0XHRmb3IgKCA7ICsraSA8IGxlbmd0aDsgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pXG5cdH1cbn07XG5cbkV4cHIucHNldWRvc1tcIm50aFwiXSA9IEV4cHIucHNldWRvc1tcImVxXCJdO1xuXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xuZm9yICggaSBpbiB7IHJhZGlvOiB0cnVlLCBjaGVja2JveDogdHJ1ZSwgZmlsZTogdHJ1ZSwgcGFzc3dvcmQ6IHRydWUsIGltYWdlOiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlSW5wdXRQc2V1ZG8oIGkgKTtcbn1cbmZvciAoIGkgaW4geyBzdWJtaXQ6IHRydWUsIHJlc2V0OiB0cnVlIH0gKSB7XG5cdEV4cHIucHNldWRvc1sgaSBdID0gY3JlYXRlQnV0dG9uUHNldWRvKCBpICk7XG59XG5cbi8vIEVhc3kgQVBJIGZvciBjcmVhdGluZyBuZXcgc2V0RmlsdGVyc1xuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XG5zZXRGaWx0ZXJzLnByb3RvdHlwZSA9IEV4cHIuZmlsdGVycyA9IEV4cHIucHNldWRvcztcbkV4cHIuc2V0RmlsdGVycyA9IG5ldyBzZXRGaWx0ZXJzKCk7XG5cbnRva2VuaXplID0gU2l6emxlLnRva2VuaXplID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBwYXJzZU9ubHkgKSB7XG5cdHZhciBtYXRjaGVkLCBtYXRjaCwgdG9rZW5zLCB0eXBlLFxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXG5cdFx0Y2FjaGVkID0gdG9rZW5DYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggY2FjaGVkICkge1xuXHRcdHJldHVybiBwYXJzZU9ubHkgPyAwIDogY2FjaGVkLnNsaWNlKCAwICk7XG5cdH1cblxuXHRzb0ZhciA9IHNlbGVjdG9yO1xuXHRncm91cHMgPSBbXTtcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xuXG5cdHdoaWxlICggc29GYXIgKSB7XG5cblx0XHQvLyBDb21tYSBhbmQgZmlyc3QgcnVuXG5cdFx0aWYgKCAhbWF0Y2hlZCB8fCAobWF0Y2ggPSByY29tbWEuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRpZiAoIG1hdGNoICkge1xuXHRcdFx0XHQvLyBEb24ndCBjb25zdW1lIHRyYWlsaW5nIGNvbW1hcyBhcyB2YWxpZFxuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaFswXS5sZW5ndGggKSB8fCBzb0Zhcjtcblx0XHRcdH1cblx0XHRcdGdyb3Vwcy5wdXNoKCAodG9rZW5zID0gW10pICk7XG5cdFx0fVxuXG5cdFx0bWF0Y2hlZCA9IGZhbHNlO1xuXG5cdFx0Ly8gQ29tYmluYXRvcnNcblx0XHRpZiAoIChtYXRjaCA9IHJjb21iaW5hdG9ycy5leGVjKCBzb0ZhciApKSApIHtcblx0XHRcdG1hdGNoZWQgPSBtYXRjaC5zaGlmdCgpO1xuXHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0Ly8gQ2FzdCBkZXNjZW5kYW50IGNvbWJpbmF0b3JzIHRvIHNwYWNlXG5cdFx0XHRcdHR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXG5cdFx0XHR9KTtcblx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmlsdGVyc1xuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XG5cdFx0XHRpZiAoIChtYXRjaCA9IG1hdGNoRXhwclsgdHlwZSBdLmV4ZWMoIHNvRmFyICkpICYmICghcHJlRmlsdGVyc1sgdHlwZSBdIHx8XG5cdFx0XHRcdChtYXRjaCA9IHByZUZpbHRlcnNbIHR5cGUgXSggbWF0Y2ggKSkpICkge1xuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdFx0dG9rZW5zLnB1c2goe1xuXHRcdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdFx0bWF0Y2hlczogbWF0Y2hcblx0XHRcdFx0fSk7XG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCAhbWF0Y2hlZCApIHtcblx0XHRcdGJyZWFrO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xuXHQvLyBpZiB3ZSdyZSBqdXN0IHBhcnNpbmdcblx0Ly8gT3RoZXJ3aXNlLCB0aHJvdyBhbiBlcnJvciBvciByZXR1cm4gdG9rZW5zXG5cdHJldHVybiBwYXJzZU9ubHkgP1xuXHRcdHNvRmFyLmxlbmd0aCA6XG5cdFx0c29GYXIgP1xuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcblx0XHRcdC8vIENhY2hlIHRoZSB0b2tlbnNcblx0XHRcdHRva2VuQ2FjaGUoIHNlbGVjdG9yLCBncm91cHMgKS5zbGljZSggMCApO1xufTtcblxuZnVuY3Rpb24gdG9TZWxlY3RvciggdG9rZW5zICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRzZWxlY3RvciA9IFwiXCI7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdHNlbGVjdG9yICs9IHRva2Vuc1tpXS52YWx1ZTtcblx0fVxuXHRyZXR1cm4gc2VsZWN0b3I7XG59XG5cbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XG5cdHZhciBkaXIgPSBjb21iaW5hdG9yLmRpcixcblx0XHRza2lwID0gY29tYmluYXRvci5uZXh0LFxuXHRcdGtleSA9IHNraXAgfHwgZGlyLFxuXHRcdGNoZWNrTm9uRWxlbWVudHMgPSBiYXNlICYmIGtleSA9PT0gXCJwYXJlbnROb2RlXCIsXG5cdFx0ZG9uZU5hbWUgPSBkb25lKys7XG5cblx0cmV0dXJuIGNvbWJpbmF0b3IuZmlyc3QgP1xuXHRcdC8vIENoZWNrIGFnYWluc3QgY2xvc2VzdCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR3aGlsZSAoIChlbGVtID0gZWxlbVsgZGlyIF0pICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9IDpcblxuXHRcdC8vIENoZWNrIGFnYWluc3QgYWxsIGFuY2VzdG9yL3ByZWNlZGluZyBlbGVtZW50c1xuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgb2xkQ2FjaGUsIHVuaXF1ZUNhY2hlLCBvdXRlckNhY2hlLFxuXHRcdFx0XHRuZXdDYWNoZSA9IFsgZGlycnVucywgZG9uZU5hbWUgXTtcblxuXHRcdFx0Ly8gV2UgY2FuJ3Qgc2V0IGFyYml0cmFyeSBkYXRhIG9uIFhNTCBub2Rlcywgc28gdGhleSBkb24ndCBiZW5lZml0IGZyb20gY29tYmluYXRvciBjYWNoaW5nXG5cdFx0XHRpZiAoIHhtbCApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcblx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBlbGVtWyBleHBhbmRvIF0gfHwgKGVsZW1bIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxuXHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSB8fCAob3V0ZXJDYWNoZVsgZWxlbS51bmlxdWVJRCBdID0ge30pO1xuXG5cdFx0XHRcdFx0XHRpZiAoIHNraXAgJiYgc2tpcCA9PT0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICkge1xuXHRcdFx0XHRcdFx0XHRlbGVtID0gZWxlbVsgZGlyIF0gfHwgZWxlbTtcblx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIChvbGRDYWNoZSA9IHVuaXF1ZUNhY2hlWyBrZXkgXSkgJiZcblx0XHRcdFx0XHRcdFx0b2xkQ2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBvbGRDYWNoZVsgMSBdID09PSBkb25lTmFtZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBc3NpZ24gdG8gbmV3Q2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gKG5ld0NhY2hlWyAyIF0gPSBvbGRDYWNoZVsgMiBdKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFJldXNlIG5ld2NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIGtleSBdID0gbmV3Q2FjaGU7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQSBtYXRjaCBtZWFucyB3ZSdyZSBkb25lOyBhIGZhaWwgbWVhbnMgd2UgaGF2ZSB0byBrZWVwIGNoZWNraW5nXG5cdFx0XHRcdFx0XHRcdGlmICggKG5ld0NhY2hlWyAyIF0gPSBtYXRjaGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9O1xufVxuXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XG5cdHJldHVybiBtYXRjaGVycy5sZW5ndGggPiAxID9cblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAhbWF0Y2hlcnNbaV0oIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSA6XG5cdFx0bWF0Y2hlcnNbMF07XG59XG5cbmZ1bmN0aW9uIG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yLCBjb250ZXh0cywgcmVzdWx0cyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGNvbnRleHRzLmxlbmd0aDtcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0U2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbaV0sIHJlc3VsdHMgKTtcblx0fVxuXHRyZXR1cm4gcmVzdWx0cztcbn1cblxuZnVuY3Rpb24gY29uZGVuc2UoIHVubWF0Y2hlZCwgbWFwLCBmaWx0ZXIsIGNvbnRleHQsIHhtbCApIHtcblx0dmFyIGVsZW0sXG5cdFx0bmV3VW5tYXRjaGVkID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcblx0XHRtYXBwZWQgPSBtYXAgIT0gbnVsbDtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcblx0XHRcdGlmICggIWZpbHRlciB8fCBmaWx0ZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRuZXdVbm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRpZiAoIG1hcHBlZCApIHtcblx0XHRcdFx0XHRtYXAucHVzaCggaSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIG5ld1VubWF0Y2hlZDtcbn1cblxuZnVuY3Rpb24gc2V0TWF0Y2hlciggcHJlRmlsdGVyLCBzZWxlY3RvciwgbWF0Y2hlciwgcG9zdEZpbHRlciwgcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICkge1xuXHRpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmlsdGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbHRlciApO1xuXHR9XG5cdGlmICggcG9zdEZpbmRlciAmJiAhcG9zdEZpbmRlclsgZXhwYW5kbyBdICkge1xuXHRcdHBvc3RGaW5kZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmluZGVyLCBwb3N0U2VsZWN0b3IgKTtcblx0fVxuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCByZXN1bHRzLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0dmFyIHRlbXAsIGksIGVsZW0sXG5cdFx0XHRwcmVNYXAgPSBbXSxcblx0XHRcdHBvc3RNYXAgPSBbXSxcblx0XHRcdHByZWV4aXN0aW5nID0gcmVzdWx0cy5sZW5ndGgsXG5cblx0XHRcdC8vIEdldCBpbml0aWFsIGVsZW1lbnRzIGZyb20gc2VlZCBvciBjb250ZXh0XG5cdFx0XHRlbGVtcyA9IHNlZWQgfHwgbXVsdGlwbGVDb250ZXh0cyggc2VsZWN0b3IgfHwgXCIqXCIsIGNvbnRleHQubm9kZVR5cGUgPyBbIGNvbnRleHQgXSA6IGNvbnRleHQsIFtdICksXG5cblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxuXHRcdFx0bWF0Y2hlckluID0gcHJlRmlsdGVyICYmICggc2VlZCB8fCAhc2VsZWN0b3IgKSA/XG5cdFx0XHRcdGNvbmRlbnNlKCBlbGVtcywgcHJlTWFwLCBwcmVGaWx0ZXIsIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0ZWxlbXMsXG5cblx0XHRcdG1hdGNoZXJPdXQgPSBtYXRjaGVyID9cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBhIHBvc3RGaW5kZXIsIG9yIGZpbHRlcmVkIHNlZWQsIG9yIG5vbi1zZWVkIHBvc3RGaWx0ZXIgb3IgcHJlZXhpc3RpbmcgcmVzdWx0cyxcblx0XHRcdFx0cG9zdEZpbmRlciB8fCAoIHNlZWQgPyBwcmVGaWx0ZXIgOiBwcmVleGlzdGluZyB8fCBwb3N0RmlsdGVyICkgP1xuXG5cdFx0XHRcdFx0Ly8gLi4uaW50ZXJtZWRpYXRlIHByb2Nlc3NpbmcgaXMgbmVjZXNzYXJ5XG5cdFx0XHRcdFx0W10gOlxuXG5cdFx0XHRcdFx0Ly8gLi4ub3RoZXJ3aXNlIHVzZSByZXN1bHRzIGRpcmVjdGx5XG5cdFx0XHRcdFx0cmVzdWx0cyA6XG5cdFx0XHRcdG1hdGNoZXJJbjtcblxuXHRcdC8vIEZpbmQgcHJpbWFyeSBtYXRjaGVzXG5cdFx0aWYgKCBtYXRjaGVyICkge1xuXHRcdFx0bWF0Y2hlciggbWF0Y2hlckluLCBtYXRjaGVyT3V0LCBjb250ZXh0LCB4bWwgKTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSBwb3N0RmlsdGVyXG5cdFx0aWYgKCBwb3N0RmlsdGVyICkge1xuXHRcdFx0dGVtcCA9IGNvbmRlbnNlKCBtYXRjaGVyT3V0LCBwb3N0TWFwICk7XG5cdFx0XHRwb3N0RmlsdGVyKCB0ZW1wLCBbXSwgY29udGV4dCwgeG1sICk7XG5cblx0XHRcdC8vIFVuLW1hdGNoIGZhaWxpbmcgZWxlbWVudHMgYnkgbW92aW5nIHRoZW0gYmFjayB0byBtYXRjaGVySW5cblx0XHRcdGkgPSB0ZW1wLmxlbmd0aDtcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIChlbGVtID0gdGVtcFtpXSkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFtpXSBdID0gIShtYXRjaGVySW5bIHBvc3RNYXBbaV0gXSA9IGVsZW0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcblx0XHRcdFx0aWYgKCBwb3N0RmluZGVyICkge1xuXHRcdFx0XHRcdC8vIEdldCB0aGUgZmluYWwgbWF0Y2hlck91dCBieSBjb25kZW5zaW5nIHRoaXMgaW50ZXJtZWRpYXRlIGludG8gcG9zdEZpbmRlciBjb250ZXh0c1xuXHRcdFx0XHRcdHRlbXAgPSBbXTtcblx0XHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gbWF0Y2hlck91dFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdC8vIFJlc3RvcmUgbWF0Y2hlckluIHNpbmNlIGVsZW0gaXMgbm90IHlldCBhIGZpbmFsIG1hdGNoXG5cdFx0XHRcdFx0XHRcdHRlbXAucHVzaCggKG1hdGNoZXJJbltpXSA9IGVsZW0pICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIChtYXRjaGVyT3V0ID0gW10pLCB0ZW1wLCB4bWwgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE1vdmUgbWF0Y2hlZCBlbGVtZW50cyBmcm9tIHNlZWQgdG8gcmVzdWx0cyB0byBrZWVwIHRoZW0gc3luY2hyb25pemVkXG5cdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICYmXG5cdFx0XHRcdFx0XHQodGVtcCA9IHBvc3RGaW5kZXIgPyBpbmRleE9mKCBzZWVkLCBlbGVtICkgOiBwcmVNYXBbaV0pID4gLTEgKSB7XG5cblx0XHRcdFx0XHRcdHNlZWRbdGVtcF0gPSAhKHJlc3VsdHNbdGVtcF0gPSBlbGVtKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEFkZCBlbGVtZW50cyB0byByZXN1bHRzLCB0aHJvdWdoIHBvc3RGaW5kZXIgaWYgZGVmaW5lZFxuXHRcdH0gZWxzZSB7XG5cdFx0XHRtYXRjaGVyT3V0ID0gY29uZGVuc2UoXG5cdFx0XHRcdG1hdGNoZXJPdXQgPT09IHJlc3VsdHMgP1xuXHRcdFx0XHRcdG1hdGNoZXJPdXQuc3BsaWNlKCBwcmVleGlzdGluZywgbWF0Y2hlck91dC5sZW5ndGggKSA6XG5cdFx0XHRcdFx0bWF0Y2hlck91dFxuXHRcdFx0KTtcblx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBtYXRjaGVyT3V0ICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9KTtcbn1cblxuZnVuY3Rpb24gbWF0Y2hlckZyb21Ub2tlbnMoIHRva2VucyApIHtcblx0dmFyIGNoZWNrQ29udGV4dCwgbWF0Y2hlciwgaixcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxuXHRcdGxlYWRpbmdSZWxhdGl2ZSA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1swXS50eXBlIF0sXG5cdFx0aW1wbGljaXRSZWxhdGl2ZSA9IGxlYWRpbmdSZWxhdGl2ZSB8fCBFeHByLnJlbGF0aXZlW1wiIFwiXSxcblx0XHRpID0gbGVhZGluZ1JlbGF0aXZlID8gMSA6IDAsXG5cblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxuXHRcdG1hdGNoQ29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGNoZWNrQ29udGV4dDtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hBbnlDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZiggY2hlY2tDb250ZXh0LCBlbGVtICkgPiAtMTtcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXG5cdFx0bWF0Y2hlcnMgPSBbIGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XG5cdFx0XHR2YXIgcmV0ID0gKCAhbGVhZGluZ1JlbGF0aXZlICYmICggeG1sIHx8IGNvbnRleHQgIT09IG91dGVybW9zdENvbnRleHQgKSApIHx8IChcblx0XHRcdFx0KGNoZWNrQ29udGV4dCA9IGNvbnRleHQpLm5vZGVUeXBlID9cblx0XHRcdFx0XHRtYXRjaENvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApIDpcblx0XHRcdFx0XHRtYXRjaEFueUNvbnRleHQoIGVsZW0sIGNvbnRleHQsIHhtbCApICk7XG5cdFx0XHQvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSlcblx0XHRcdGNoZWNrQ29udGV4dCA9IG51bGw7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH0gXTtcblxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRpZiAoIChtYXRjaGVyID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zW2ldLnR5cGUgXSkgKSB7XG5cdFx0XHRtYXRjaGVycyA9IFsgYWRkQ29tYmluYXRvcihlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSwgbWF0Y2hlcikgXTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlciA9IEV4cHIuZmlsdGVyWyB0b2tlbnNbaV0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbaV0ubWF0Y2hlcyApO1xuXG5cdFx0XHQvLyBSZXR1cm4gc3BlY2lhbCB1cG9uIHNlZWluZyBhIHBvc2l0aW9uYWwgbWF0Y2hlclxuXHRcdFx0aWYgKCBtYXRjaGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdC8vIEZpbmQgdGhlIG5leHQgcmVsYXRpdmUgb3BlcmF0b3IgKGlmIGFueSkgZm9yIHByb3BlciBoYW5kbGluZ1xuXHRcdFx0XHRqID0gKytpO1xuXHRcdFx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcblx0XHRcdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbIHRva2Vuc1tqXS50eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHNldE1hdGNoZXIoXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXG5cdFx0XHRcdFx0aSA+IDEgJiYgdG9TZWxlY3Rvcihcblx0XHRcdFx0XHRcdC8vIElmIHRoZSBwcmVjZWRpbmcgdG9rZW4gd2FzIGEgZGVzY2VuZGFudCBjb21iaW5hdG9yLCBpbnNlcnQgYW4gaW1wbGljaXQgYW55LWVsZW1lbnQgYCpgXG5cdFx0XHRcdFx0XHR0b2tlbnMuc2xpY2UoIDAsIGkgLSAxICkuY29uY2F0KHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9KVxuXHRcdFx0XHRcdCkucmVwbGFjZSggcnRyaW0sIFwiJDFcIiApLFxuXHRcdFx0XHRcdG1hdGNoZXIsXG5cdFx0XHRcdFx0aSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksXG5cdFx0XHRcdFx0aiA8IGxlbiAmJiBtYXRjaGVyRnJvbVRva2VucyggKHRva2VucyA9IHRva2Vucy5zbGljZSggaiApKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgdG9TZWxlY3RvciggdG9rZW5zIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHRcdG1hdGNoZXJzLnB1c2goIG1hdGNoZXIgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcblx0dmFyIGJ5U2V0ID0gc2V0TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRieUVsZW1lbnQgPSBlbGVtZW50TWF0Y2hlcnMubGVuZ3RoID4gMCxcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XG5cdFx0XHR2YXIgZWxlbSwgaiwgbWF0Y2hlcixcblx0XHRcdFx0bWF0Y2hlZENvdW50ID0gMCxcblx0XHRcdFx0aSA9IFwiMFwiLFxuXHRcdFx0XHR1bm1hdGNoZWQgPSBzZWVkICYmIFtdLFxuXHRcdFx0XHRzZXRNYXRjaGVkID0gW10sXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxuXHRcdFx0XHQvLyBXZSBtdXN0IGFsd2F5cyBoYXZlIGVpdGhlciBzZWVkIGVsZW1lbnRzIG9yIG91dGVybW9zdCBjb250ZXh0XG5cdFx0XHRcdGVsZW1zID0gc2VlZCB8fCBieUVsZW1lbnQgJiYgRXhwci5maW5kW1wiVEFHXCJdKCBcIipcIiwgb3V0ZXJtb3N0ICksXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXG5cdFx0XHRcdGRpcnJ1bnNVbmlxdWUgPSAoZGlycnVucyArPSBjb250ZXh0QmFja3VwID09IG51bGwgPyAxIDogTWF0aC5yYW5kb20oKSB8fCAwLjEpLFxuXHRcdFx0XHRsZW4gPSBlbGVtcy5sZW5ndGg7XG5cblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dCA9PT0gZG9jdW1lbnQgfHwgY29udGV4dCB8fCBvdXRlcm1vc3Q7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBlbGVtZW50cyBwYXNzaW5nIGVsZW1lbnRNYXRjaGVycyBkaXJlY3RseSB0byByZXN1bHRzXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmlcblx0XHRcdC8vIFRvbGVyYXRlIE5vZGVMaXN0IHByb3BlcnRpZXMgKElFOiBcImxlbmd0aFwiOyBTYWZhcmk6IDxudW1iZXI+KSBtYXRjaGluZyBlbGVtZW50cyBieSBpZFxuXHRcdFx0Zm9yICggOyBpICE9PSBsZW4gJiYgKGVsZW0gPSBlbGVtc1tpXSkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGJ5RWxlbWVudCAmJiBlbGVtICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdGlmICggIWNvbnRleHQgJiYgZWxlbS5vd25lckRvY3VtZW50ICE9PSBkb2N1bWVudCApIHtcblx0XHRcdFx0XHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdFx0XHRcdFx0XHR4bWwgPSAhZG9jdW1lbnRJc0hUTUw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHdoaWxlICggKG1hdGNoZXIgPSBlbGVtZW50TWF0Y2hlcnNbaisrXSkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQgfHwgZG9jdW1lbnQsIHhtbCkgKSB7XG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XG5cdFx0XHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBUcmFjayB1bm1hdGNoZWQgZWxlbWVudHMgZm9yIHNldCBmaWx0ZXJzXG5cdFx0XHRcdGlmICggYnlTZXQgKSB7XG5cdFx0XHRcdFx0Ly8gVGhleSB3aWxsIGhhdmUgZ29uZSB0aHJvdWdoIGFsbCBwb3NzaWJsZSBtYXRjaGVyc1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSAhbWF0Y2hlciAmJiBlbGVtKSApIHtcblx0XHRcdFx0XHRcdG1hdGNoZWRDb3VudC0tO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hlZCBvciBub3Rcblx0XHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0XHR1bm1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBgaWAgaXMgbm93IHRoZSBjb3VudCBvZiBlbGVtZW50cyB2aXNpdGVkIGFib3ZlLCBhbmQgYWRkaW5nIGl0IHRvIGBtYXRjaGVkQ291bnRgXG5cdFx0XHQvLyBtYWtlcyB0aGUgbGF0dGVyIG5vbm5lZ2F0aXZlLlxuXHRcdFx0bWF0Y2hlZENvdW50ICs9IGk7XG5cblx0XHRcdC8vIEFwcGx5IHNldCBmaWx0ZXJzIHRvIHVubWF0Y2hlZCBlbGVtZW50c1xuXHRcdFx0Ly8gTk9URTogVGhpcyBjYW4gYmUgc2tpcHBlZCBpZiB0aGVyZSBhcmUgbm8gdW5tYXRjaGVkIGVsZW1lbnRzIChpLmUuLCBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gZXF1YWxzIGBpYCksIHVubGVzcyB3ZSBkaWRuJ3QgdmlzaXQgX2FueV8gZWxlbWVudHMgaW4gdGhlIGFib3ZlIGxvb3AgYmVjYXVzZSB3ZSBoYXZlXG5cdFx0XHQvLyBubyBlbGVtZW50IG1hdGNoZXJzIGFuZCBubyBzZWVkLlxuXHRcdFx0Ly8gSW5jcmVtZW50aW5nIGFuIGluaXRpYWxseS1zdHJpbmcgXCIwXCIgYGlgIGFsbG93cyBgaWAgdG8gcmVtYWluIGEgc3RyaW5nIG9ubHkgaW4gdGhhdFxuXHRcdFx0Ly8gY2FzZSwgd2hpY2ggd2lsbCByZXN1bHQgaW4gYSBcIjAwXCIgYG1hdGNoZWRDb3VudGAgdGhhdCBkaWZmZXJzIGZyb20gYGlgIGJ1dCBpcyBhbHNvXG5cdFx0XHQvLyBudW1lcmljYWxseSB6ZXJvLlxuXHRcdFx0aWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7XG5cdFx0XHRcdGogPSAwO1xuXHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gc2V0TWF0Y2hlcnNbaisrXSkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlciggdW5tYXRjaGVkLCBzZXRNYXRjaGVkLCBjb250ZXh0LCB4bWwgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggc2VlZCApIHtcblx0XHRcdFx0XHQvLyBSZWludGVncmF0ZSBlbGVtZW50IG1hdGNoZXMgdG8gZWxpbWluYXRlIHRoZSBuZWVkIGZvciBzb3J0aW5nXG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkQ291bnQgPiAwICkge1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggISh1bm1hdGNoZWRbaV0gfHwgc2V0TWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c2V0TWF0Y2hlZFtpXSA9IHBvcC5jYWxsKCByZXN1bHRzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBEaXNjYXJkIGluZGV4IHBsYWNlaG9sZGVyIHZhbHVlcyB0byBnZXQgb25seSBhY3R1YWwgbWF0Y2hlc1xuXHRcdFx0XHRcdHNldE1hdGNoZWQgPSBjb25kZW5zZSggc2V0TWF0Y2hlZCApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQWRkIG1hdGNoZXMgdG8gcmVzdWx0c1xuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZXRNYXRjaGVkICk7XG5cblx0XHRcdFx0Ly8gU2VlZGxlc3Mgc2V0IG1hdGNoZXMgc3VjY2VlZGluZyBtdWx0aXBsZSBzdWNjZXNzZnVsIG1hdGNoZXJzIHN0aXB1bGF0ZSBzb3J0aW5nXG5cdFx0XHRcdGlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJlxuXHRcdFx0XHRcdCggbWF0Y2hlZENvdW50ICsgc2V0TWF0Y2hlcnMubGVuZ3RoICkgPiAxICkge1xuXG5cdFx0XHRcdFx0U2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdmVycmlkZSBtYW5pcHVsYXRpb24gb2YgZ2xvYmFscyBieSBuZXN0ZWQgbWF0Y2hlcnNcblx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHRCYWNrdXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB1bm1hdGNoZWQ7XG5cdFx0fTtcblxuXHRyZXR1cm4gYnlTZXQgP1xuXHRcdG1hcmtGdW5jdGlvbiggc3VwZXJNYXRjaGVyICkgOlxuXHRcdHN1cGVyTWF0Y2hlcjtcbn1cblxuY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHtcblx0dmFyIGksXG5cdFx0c2V0TWF0Y2hlcnMgPSBbXSxcblx0XHRlbGVtZW50TWF0Y2hlcnMgPSBbXSxcblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XG5cblx0aWYgKCAhY2FjaGVkICkge1xuXHRcdC8vIEdlbmVyYXRlIGEgZnVuY3Rpb24gb2YgcmVjdXJzaXZlIGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSB1c2VkIHRvIGNoZWNrIGVhY2ggZWxlbWVudFxuXHRcdGlmICggIW1hdGNoICkge1xuXHRcdFx0bWF0Y2ggPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHR9XG5cdFx0aSA9IG1hdGNoLmxlbmd0aDtcblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdGNhY2hlZCA9IG1hdGNoZXJGcm9tVG9rZW5zKCBtYXRjaFtpXSApO1xuXHRcdFx0aWYgKCBjYWNoZWRbIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0c2V0TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtZW50TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQ2FjaGUgdGhlIGNvbXBpbGVkIGZ1bmN0aW9uXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZSggc2VsZWN0b3IsIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApICk7XG5cblx0XHQvLyBTYXZlIHNlbGVjdG9yIGFuZCB0b2tlbml6YXRpb25cblx0XHRjYWNoZWQuc2VsZWN0b3IgPSBzZWxlY3Rvcjtcblx0fVxuXHRyZXR1cm4gY2FjaGVkO1xufTtcblxuLyoqXG4gKiBBIGxvdy1sZXZlbCBzZWxlY3Rpb24gZnVuY3Rpb24gdGhhdCB3b3JrcyB3aXRoIFNpenpsZSdzIGNvbXBpbGVkXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb25zXG4gKiBAcGFyYW0ge1N0cmluZ3xGdW5jdGlvbn0gc2VsZWN0b3IgQSBzZWxlY3RvciBvciBhIHByZS1jb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uIGJ1aWx0IHdpdGggU2l6emxlLmNvbXBpbGVcbiAqIEBwYXJhbSB7RWxlbWVudH0gY29udGV4dFxuICogQHBhcmFtIHtBcnJheX0gW3Jlc3VsdHNdXG4gKiBAcGFyYW0ge0FycmF5fSBbc2VlZF0gQSBzZXQgb2YgZWxlbWVudHMgdG8gbWF0Y2ggYWdhaW5zdFxuICovXG5zZWxlY3QgPSBTaXp6bGUuc2VsZWN0ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgaSwgdG9rZW5zLCB0b2tlbiwgdHlwZSwgZmluZCxcblx0XHRjb21waWxlZCA9IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICYmIHNlbGVjdG9yLFxuXHRcdG1hdGNoID0gIXNlZWQgJiYgdG9rZW5pemUoIChzZWxlY3RvciA9IGNvbXBpbGVkLnNlbGVjdG9yIHx8IHNlbGVjdG9yKSApO1xuXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xuXG5cdC8vIFRyeSB0byBtaW5pbWl6ZSBvcGVyYXRpb25zIGlmIHRoZXJlIGlzIG9ubHkgb25lIHNlbGVjdG9yIGluIHRoZSBsaXN0IGFuZCBubyBzZWVkXG5cdC8vICh0aGUgbGF0dGVyIG9mIHdoaWNoIGd1YXJhbnRlZXMgdXMgY29udGV4dClcblx0aWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7XG5cblx0XHQvLyBSZWR1Y2UgY29udGV4dCBpZiB0aGUgbGVhZGluZyBjb21wb3VuZCBzZWxlY3RvciBpcyBhbiBJRFxuXHRcdHRva2VucyA9IG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAgKTtcblx0XHRpZiAoIHRva2Vucy5sZW5ndGggPiAyICYmICh0b2tlbiA9IHRva2Vuc1swXSkudHlwZSA9PT0gXCJJRFwiICYmXG5cdFx0XHRcdGNvbnRleHQubm9kZVR5cGUgPT09IDkgJiYgZG9jdW1lbnRJc0hUTUwgJiYgRXhwci5yZWxhdGl2ZVsgdG9rZW5zWzFdLnR5cGUgXSApIHtcblxuXHRcdFx0Y29udGV4dCA9ICggRXhwci5maW5kW1wiSURcIl0oIHRva2VuLm1hdGNoZXNbMF0ucmVwbGFjZShydW5lc2NhcGUsIGZ1bmVzY2FwZSksIGNvbnRleHQgKSB8fCBbXSApWzBdO1xuXHRcdFx0aWYgKCAhY29udGV4dCApIHtcblx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdC8vIFByZWNvbXBpbGVkIG1hdGNoZXJzIHdpbGwgc3RpbGwgdmVyaWZ5IGFuY2VzdHJ5LCBzbyBzdGVwIHVwIGEgbGV2ZWxcblx0XHRcdH0gZWxzZSBpZiAoIGNvbXBpbGVkICkge1xuXHRcdFx0XHRjb250ZXh0ID0gY29udGV4dC5wYXJlbnROb2RlO1xuXHRcdFx0fVxuXG5cdFx0XHRzZWxlY3RvciA9IHNlbGVjdG9yLnNsaWNlKCB0b2tlbnMuc2hpZnQoKS52YWx1ZS5sZW5ndGggKTtcblx0XHR9XG5cblx0XHQvLyBGZXRjaCBhIHNlZWQgc2V0IGZvciByaWdodC10by1sZWZ0IG1hdGNoaW5nXG5cdFx0aSA9IG1hdGNoRXhwcltcIm5lZWRzQ29udGV4dFwiXS50ZXN0KCBzZWxlY3RvciApID8gMCA6IHRva2Vucy5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHR0b2tlbiA9IHRva2Vuc1tpXTtcblxuXHRcdFx0Ly8gQWJvcnQgaWYgd2UgaGl0IGEgY29tYmluYXRvclxuXHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyAodHlwZSA9IHRva2VuLnR5cGUpIF0gKSB7XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdFx0aWYgKCAoZmluZCA9IEV4cHIuZmluZFsgdHlwZSBdKSApIHtcblx0XHRcdFx0Ly8gU2VhcmNoLCBleHBhbmRpbmcgY29udGV4dCBmb3IgbGVhZGluZyBzaWJsaW5nIGNvbWJpbmF0b3JzXG5cdFx0XHRcdGlmICggKHNlZWQgPSBmaW5kKFxuXHRcdFx0XHRcdHRva2VuLm1hdGNoZXNbMF0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKSxcblx0XHRcdFx0XHRyc2libGluZy50ZXN0KCB0b2tlbnNbMF0udHlwZSApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fCBjb250ZXh0XG5cdFx0XHRcdCkpICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgc2VlZCBpcyBlbXB0eSBvciBubyB0b2tlbnMgcmVtYWluLCB3ZSBjYW4gcmV0dXJuIGVhcmx5XG5cdFx0XHRcdFx0dG9rZW5zLnNwbGljZSggaSwgMSApO1xuXHRcdFx0XHRcdHNlbGVjdG9yID0gc2VlZC5sZW5ndGggJiYgdG9TZWxlY3RvciggdG9rZW5zICk7XG5cdFx0XHRcdFx0aWYgKCAhc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZWVkICk7XG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIENvbXBpbGUgYW5kIGV4ZWN1dGUgYSBmaWx0ZXJpbmcgZnVuY3Rpb24gaWYgb25lIGlzIG5vdCBwcm92aWRlZFxuXHQvLyBQcm92aWRlIGBtYXRjaGAgdG8gYXZvaWQgcmV0b2tlbml6YXRpb24gaWYgd2UgbW9kaWZpZWQgdGhlIHNlbGVjdG9yIGFib3ZlXG5cdCggY29tcGlsZWQgfHwgY29tcGlsZSggc2VsZWN0b3IsIG1hdGNoICkgKShcblx0XHRzZWVkLFxuXHRcdGNvbnRleHQsXG5cdFx0IWRvY3VtZW50SXNIVE1MLFxuXHRcdHJlc3VsdHMsXG5cdFx0IWNvbnRleHQgfHwgcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHQpO1xuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8vIE9uZS10aW1lIGFzc2lnbm1lbnRzXG5cbi8vIFNvcnQgc3RhYmlsaXR5XG5zdXBwb3J0LnNvcnRTdGFibGUgPSBleHBhbmRvLnNwbGl0KFwiXCIpLnNvcnQoIHNvcnRPcmRlciApLmpvaW4oXCJcIikgPT09IGV4cGFuZG87XG5cbi8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNStcbi8vIEFsd2F5cyBhc3N1bWUgZHVwbGljYXRlcyBpZiB0aGV5IGFyZW4ndCBwYXNzZWQgdG8gdGhlIGNvbXBhcmlzb24gZnVuY3Rpb25cbnN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcyA9ICEhaGFzRHVwbGljYXRlO1xuXG4vLyBJbml0aWFsaXplIGFnYWluc3QgdGhlIGRlZmF1bHQgZG9jdW1lbnRcbnNldERvY3VtZW50KCk7XG5cbi8vIFN1cHBvcnQ6IFdlYmtpdDw1MzcuMzIgLSBTYWZhcmkgNi4wLjMvQ2hyb21lIDI1IChmaXhlZCBpbiBDaHJvbWUgMjcpXG4vLyBEZXRhY2hlZCBub2RlcyBjb25mb3VuZGluZ2x5IGZvbGxvdyAqZWFjaCBvdGhlcipcbnN1cHBvcnQuc29ydERldGFjaGVkID0gYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0Ly8gU2hvdWxkIHJldHVybiAxLCBidXQgcmV0dXJucyA0IChmb2xsb3dpbmcpXG5cdHJldHVybiBlbC5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpICkgJiAxO1xufSk7XG5cbi8vIFN1cHBvcnQ6IElFPDhcbi8vIFByZXZlbnQgYXR0cmlidXRlL3Byb3BlcnR5IFwiaW50ZXJwb2xhdGlvblwiXG4vLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScjJz48L2E+XCI7XG5cdHJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIikgPT09IFwiI1wiIDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIFwidHlwZXxocmVmfGhlaWdodHx3aWR0aFwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIG5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJ0eXBlXCIgPyAxIDogMiApO1xuXHRcdH1cblx0fSk7XG59XG5cbi8vIFN1cHBvcnQ6IElFPDlcbi8vIFVzZSBkZWZhdWx0VmFsdWUgaW4gcGxhY2Ugb2YgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcbmlmICggIXN1cHBvcnQuYXR0cmlidXRlcyB8fCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0ZWwuaW5uZXJIVE1MID0gXCI8aW5wdXQvPlwiO1xuXHRlbC5maXJzdENoaWxkLnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XG5cdHJldHVybiBlbC5maXJzdENoaWxkLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IFwiXCI7XG59KSApIHtcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcblx0XHRpZiAoICFpc1hNTCAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiApIHtcblx0XHRcdHJldHVybiBlbGVtLmRlZmF1bHRWYWx1ZTtcblx0XHR9XG5cdH0pO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZ2V0QXR0cmlidXRlTm9kZSB0byBmZXRjaCBib29sZWFucyB3aGVuIGdldEF0dHJpYnV0ZSBsaWVzXG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRyZXR1cm4gZWwuZ2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIikgPT0gbnVsbDtcbn0pICkge1xuXHRhZGRIYW5kbGUoIGJvb2xlYW5zLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHZhbDtcblx0XHRpZiAoICFpc1hNTCApIHtcblx0XHRcdHJldHVybiBlbGVtWyBuYW1lIF0gPT09IHRydWUgPyBuYW1lLnRvTG93ZXJDYXNlKCkgOlxuXHRcdFx0XHRcdCh2YWwgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcblx0XHRcdFx0bnVsbDtcblx0XHR9XG5cdH0pO1xufVxuXG5yZXR1cm4gU2l6emxlO1xuXG59KSggd2luZG93ICk7XG5cblxuXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcbmpRdWVyeS5leHByID0gU2l6emxlLnNlbGVjdG9ycztcblxuLy8gRGVwcmVjYXRlZFxualF1ZXJ5LmV4cHJbIFwiOlwiIF0gPSBqUXVlcnkuZXhwci5wc2V1ZG9zO1xualF1ZXJ5LnVuaXF1ZVNvcnQgPSBqUXVlcnkudW5pcXVlID0gU2l6emxlLnVuaXF1ZVNvcnQ7XG5qUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xualF1ZXJ5LmlzWE1MRG9jID0gU2l6emxlLmlzWE1MO1xualF1ZXJ5LmNvbnRhaW5zID0gU2l6emxlLmNvbnRhaW5zO1xualF1ZXJ5LmVzY2FwZVNlbGVjdG9yID0gU2l6emxlLmVzY2FwZTtcblxuXG5cblxudmFyIGRpciA9IGZ1bmN0aW9uKCBlbGVtLCBkaXIsIHVudGlsICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdLFxuXHRcdHRydW5jYXRlID0gdW50aWwgIT09IHVuZGVmaW5lZDtcblxuXHR3aGlsZSAoICggZWxlbSA9IGVsZW1bIGRpciBdICkgJiYgZWxlbS5ub2RlVHlwZSAhPT0gOSApIHtcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdG1hdGNoZWQucHVzaCggZWxlbSApO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHNpYmxpbmdzID0gZnVuY3Rpb24oIG4sIGVsZW0gKSB7XG5cdHZhciBtYXRjaGVkID0gW107XG5cblx0Zm9yICggOyBuOyBuID0gbi5uZXh0U2libGluZyApIHtcblx0XHRpZiAoIG4ubm9kZVR5cGUgPT09IDEgJiYgbiAhPT0gZWxlbSApIHtcblx0XHRcdG1hdGNoZWQucHVzaCggbiApO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiBtYXRjaGVkO1xufTtcblxuXG52YXIgcm5lZWRzQ29udGV4dCA9IGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dDtcblxuXG5cbmZ1bmN0aW9uIG5vZGVOYW1lKCBlbGVtLCBuYW1lICkge1xuXG4gIHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuXG59O1xudmFyIHJzaW5nbGVUYWcgPSAoIC9ePChbYS16XVteXFwvXFwwPjpcXHgyMFxcdFxcclxcblxcZl0qKVtcXHgyMFxcdFxcclxcblxcZl0qXFwvPz4oPzo8XFwvXFwxPnwpJC9pICk7XG5cblxuXG4vLyBJbXBsZW1lbnQgdGhlIGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdFxuZnVuY3Rpb24gd2lubm93KCBlbGVtZW50cywgcXVhbGlmaWVyLCBub3QgKSB7XG5cdGlmICggaXNGdW5jdGlvbiggcXVhbGlmaWVyICkgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gISFxdWFsaWZpZXIuY2FsbCggZWxlbSwgaSwgZWxlbSApICE9PSBub3Q7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gU2luZ2xlIGVsZW1lbnRcblx0aWYgKCBxdWFsaWZpZXIubm9kZVR5cGUgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCBlbGVtID09PSBxdWFsaWZpZXIgKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEFycmF5bGlrZSBvZiBlbGVtZW50cyAoalF1ZXJ5LCBhcmd1bWVudHMsIEFycmF5KVxuXHRpZiAoIHR5cGVvZiBxdWFsaWZpZXIgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gKCBpbmRleE9mLmNhbGwoIHF1YWxpZmllciwgZWxlbSApID4gLTEgKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIEZpbHRlcmVkIGRpcmVjdGx5IGZvciBib3RoIHNpbXBsZSBhbmQgY29tcGxleCBzZWxlY3RvcnNcblx0cmV0dXJuIGpRdWVyeS5maWx0ZXIoIHF1YWxpZmllciwgZWxlbWVudHMsIG5vdCApO1xufVxuXG5qUXVlcnkuZmlsdGVyID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1zLCBub3QgKSB7XG5cdHZhciBlbGVtID0gZWxlbXNbIDAgXTtcblxuXHRpZiAoIG5vdCApIHtcblx0XHRleHByID0gXCI6bm90KFwiICsgZXhwciArIFwiKVwiO1xuXHR9XG5cblx0aWYgKCBlbGVtcy5sZW5ndGggPT09IDEgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBlbGVtLCBleHByICkgPyBbIGVsZW0gXSA6IFtdO1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXMoIGV4cHIsIGpRdWVyeS5ncmVwKCBlbGVtcywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7XG5cdH0gKSApO1xufTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGksIHJldCxcblx0XHRcdGxlbiA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0c2VsZiA9IHRoaXM7XG5cblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5KCBzZWxlY3RvciApLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9ICkgKTtcblx0XHR9XG5cblx0XHRyZXQgPSB0aGlzLnB1c2hTdGFjayggW10gKTtcblxuXHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRqUXVlcnkuZmluZCggc2VsZWN0b3IsIHNlbGZbIGkgXSwgcmV0ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGxlbiA+IDEgPyBqUXVlcnkudW5pcXVlU29ydCggcmV0ICkgOiByZXQ7XG5cdH0sXG5cdGZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgZmFsc2UgKSApO1xuXHR9LFxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIHRydWUgKSApO1xuXHR9LFxuXHRpczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiAhIXdpbm5vdyhcblx0XHRcdHRoaXMsXG5cblx0XHRcdC8vIElmIHRoaXMgaXMgYSBwb3NpdGlvbmFsL3JlbGF0aXZlIHNlbGVjdG9yLCBjaGVjayBtZW1iZXJzaGlwIGluIHRoZSByZXR1cm5lZCBzZXRcblx0XHRcdC8vIHNvICQoXCJwOmZpcnN0XCIpLmlzKFwicDpsYXN0XCIpIHdvbid0IHJldHVybiB0cnVlIGZvciBhIGRvYyB3aXRoIHR3byBcInBcIi5cblx0XHRcdHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgP1xuXHRcdFx0XHRqUXVlcnkoIHNlbGVjdG9yICkgOlxuXHRcdFx0XHRzZWxlY3RvciB8fCBbXSxcblx0XHRcdGZhbHNlXG5cdFx0KS5sZW5ndGg7XG5cdH1cbn0gKTtcblxuXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxuXG5cbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxudmFyIHJvb3RqUXVlcnksXG5cblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3Ncblx0Ly8gUHJpb3JpdGl6ZSAjaWQgb3ZlciA8dGFnPiB0byBhdm9pZCBYU1MgdmlhIGxvY2F0aW9uLmhhc2ggKCM5NTIxKVxuXHQvLyBTdHJpY3QgSFRNTCByZWNvZ25pdGlvbiAoIzExMjkwOiBtdXN0IHN0YXJ0IHdpdGggPClcblx0Ly8gU2hvcnRjdXQgc2ltcGxlICNpZCBjYXNlIGZvciBzcGVlZFxuXHRycXVpY2tFeHByID0gL14oPzpcXHMqKDxbXFx3XFxXXSs+KVtePl0qfCMoW1xcdy1dKykpJC8sXG5cblx0aW5pdCA9IGpRdWVyeS5mbi5pbml0ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByb290ICkge1xuXHRcdHZhciBtYXRjaCwgZWxlbTtcblxuXHRcdC8vIEhBTkRMRTogJChcIlwiKSwgJChudWxsKSwgJCh1bmRlZmluZWQpLCAkKGZhbHNlKVxuXHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXG5cdFx0Ly8gTWV0aG9kIGluaXQoKSBhY2NlcHRzIGFuIGFsdGVybmF0ZSByb290alF1ZXJ5XG5cdFx0Ly8gc28gbWlncmF0ZSBjYW4gc3VwcG9ydCBqUXVlcnkuc3ViIChnaC0yMTAxKVxuXHRcdHJvb3QgPSByb290IHx8IHJvb3RqUXVlcnk7XG5cblx0XHQvLyBIYW5kbGUgSFRNTCBzdHJpbmdzXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRpZiAoIHNlbGVjdG9yWyAwIF0gPT09IFwiPFwiICYmXG5cdFx0XHRcdHNlbGVjdG9yWyBzZWxlY3Rvci5sZW5ndGggLSAxIF0gPT09IFwiPlwiICYmXG5cdFx0XHRcdHNlbGVjdG9yLmxlbmd0aCA+PSAzICkge1xuXG5cdFx0XHRcdC8vIEFzc3VtZSB0aGF0IHN0cmluZ3MgdGhhdCBzdGFydCBhbmQgZW5kIHdpdGggPD4gYXJlIEhUTUwgYW5kIHNraXAgdGhlIHJlZ2V4IGNoZWNrXG5cdFx0XHRcdG1hdGNoID0gWyBudWxsLCBzZWxlY3RvciwgbnVsbCBdO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTWF0Y2ggaHRtbCBvciBtYWtlIHN1cmUgbm8gY29udGV4dCBpcyBzcGVjaWZpZWQgZm9yICNpZFxuXHRcdFx0aWYgKCBtYXRjaCAmJiAoIG1hdGNoWyAxIF0gfHwgIWNvbnRleHQgKSApIHtcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSlcblx0XHRcdFx0aWYgKCBtYXRjaFsgMSBdICkge1xuXHRcdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0IGluc3RhbmNlb2YgalF1ZXJ5ID8gY29udGV4dFsgMCBdIDogY29udGV4dDtcblxuXHRcdFx0XHRcdC8vIE9wdGlvbiB0byBydW4gc2NyaXB0cyBpcyB0cnVlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRcdC8vIEludGVudGlvbmFsbHkgbGV0IHRoZSBlcnJvciBiZSB0aHJvd24gaWYgcGFyc2VIVE1MIGlzIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCB0aGlzLCBqUXVlcnkucGFyc2VIVE1MKFxuXHRcdFx0XHRcdFx0bWF0Y2hbIDEgXSxcblx0XHRcdFx0XHRcdGNvbnRleHQgJiYgY29udGV4dC5ub2RlVHlwZSA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogZG9jdW1lbnQsXG5cdFx0XHRcdFx0XHR0cnVlXG5cdFx0XHRcdFx0KSApO1xuXG5cdFx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwsIHByb3BzKVxuXHRcdFx0XHRcdGlmICggcnNpbmdsZVRhZy50ZXN0KCBtYXRjaFsgMSBdICkgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvbnRleHQgKSApIHtcblx0XHRcdFx0XHRcdGZvciAoIG1hdGNoIGluIGNvbnRleHQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gUHJvcGVydGllcyBvZiBjb250ZXh0IGFyZSBjYWxsZWQgYXMgbWV0aG9kcyBpZiBwb3NzaWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoaXNbIG1hdGNoIF0gKSApIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzWyBtYXRjaCBdKCBjb250ZXh0WyBtYXRjaCBdICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gLi4uYW5kIG90aGVyd2lzZSBzZXQgYXMgYXR0cmlidXRlc1xuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuYXR0ciggbWF0Y2gsIGNvbnRleHRbIG1hdGNoIF0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0XHRcdC8vIEhBTkRMRTogJCgjaWQpXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBtYXRjaFsgMiBdICk7XG5cblx0XHRcdFx0XHRpZiAoIGVsZW0gKSB7XG5cblx0XHRcdFx0XHRcdC8vIEluamVjdCB0aGUgZWxlbWVudCBkaXJlY3RseSBpbnRvIHRoZSBqUXVlcnkgb2JqZWN0XG5cdFx0XHRcdFx0XHR0aGlzWyAwIF0gPSBlbGVtO1xuXHRcdFx0XHRcdFx0dGhpcy5sZW5ndGggPSAxO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgJCguLi4pKVxuXHRcdFx0fSBlbHNlIGlmICggIWNvbnRleHQgfHwgY29udGV4dC5qcXVlcnkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGNvbnRleHQgfHwgcm9vdCApLmZpbmQoIHNlbGVjdG9yICk7XG5cblx0XHRcdC8vIEhBTkRMRTogJChleHByLCBjb250ZXh0KVxuXHRcdFx0Ly8gKHdoaWNoIGlzIGp1c3QgZXF1aXZhbGVudCB0bzogJChjb250ZXh0KS5maW5kKGV4cHIpXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gdGhpcy5jb25zdHJ1Y3RvciggY29udGV4dCApLmZpbmQoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHQvLyBIQU5ETEU6ICQoRE9NRWxlbWVudClcblx0XHR9IGVsc2UgaWYgKCBzZWxlY3Rvci5ub2RlVHlwZSApIHtcblx0XHRcdHRoaXNbIDAgXSA9IHNlbGVjdG9yO1xuXHRcdFx0dGhpcy5sZW5ndGggPSAxO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cblx0XHQvLyBIQU5ETEU6ICQoZnVuY3Rpb24pXG5cdFx0Ly8gU2hvcnRjdXQgZm9yIGRvY3VtZW50IHJlYWR5XG5cdFx0fSBlbHNlIGlmICggaXNGdW5jdGlvbiggc2VsZWN0b3IgKSApIHtcblx0XHRcdHJldHVybiByb290LnJlYWR5ICE9PSB1bmRlZmluZWQgP1xuXHRcdFx0XHRyb290LnJlYWR5KCBzZWxlY3RvciApIDpcblxuXHRcdFx0XHQvLyBFeGVjdXRlIGltbWVkaWF0ZWx5IGlmIHJlYWR5IGlzIG5vdCBwcmVzZW50XG5cdFx0XHRcdHNlbGVjdG9yKCBqUXVlcnkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTtcblx0fTtcblxuLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlvbiB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvblxuaW5pdC5wcm90b3R5cGUgPSBqUXVlcnkuZm47XG5cbi8vIEluaXRpYWxpemUgY2VudHJhbCByZWZlcmVuY2VcbnJvb3RqUXVlcnkgPSBqUXVlcnkoIGRvY3VtZW50ICk7XG5cblxudmFyIHJwYXJlbnRzcHJldiA9IC9eKD86cGFyZW50c3xwcmV2KD86VW50aWx8QWxsKSkvLFxuXG5cdC8vIE1ldGhvZHMgZ3VhcmFudGVlZCB0byBwcm9kdWNlIGEgdW5pcXVlIHNldCB3aGVuIHN0YXJ0aW5nIGZyb20gYSB1bmlxdWUgc2V0XG5cdGd1YXJhbnRlZWRVbmlxdWUgPSB7XG5cdFx0Y2hpbGRyZW46IHRydWUsXG5cdFx0Y29udGVudHM6IHRydWUsXG5cdFx0bmV4dDogdHJ1ZSxcblx0XHRwcmV2OiB0cnVlXG5cdH07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aGFzOiBmdW5jdGlvbiggdGFyZ2V0ICkge1xuXHRcdHZhciB0YXJnZXRzID0galF1ZXJ5KCB0YXJnZXQsIHRoaXMgKSxcblx0XHRcdGwgPSB0YXJnZXRzLmxlbmd0aDtcblxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaSA9IDA7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCB0aGlzLCB0YXJnZXRzWyBpIF0gKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRjbG9zZXN0OiBmdW5jdGlvbiggc2VsZWN0b3JzLCBjb250ZXh0ICkge1xuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGwgPSB0aGlzLmxlbmd0aCxcblx0XHRcdG1hdGNoZWQgPSBbXSxcblx0XHRcdHRhcmdldHMgPSB0eXBlb2Ygc2VsZWN0b3JzICE9PSBcInN0cmluZ1wiICYmIGpRdWVyeSggc2VsZWN0b3JzICk7XG5cblx0XHQvLyBQb3NpdGlvbmFsIHNlbGVjdG9ycyBuZXZlciBtYXRjaCwgc2luY2UgdGhlcmUncyBubyBfc2VsZWN0aW9uXyBjb250ZXh0XG5cdFx0aWYgKCAhcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvcnMgKSApIHtcblx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0Zm9yICggY3VyID0gdGhpc1sgaSBdOyBjdXIgJiYgY3VyICE9PSBjb250ZXh0OyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblxuXHRcdFx0XHRcdC8vIEFsd2F5cyBza2lwIGRvY3VtZW50IGZyYWdtZW50c1xuXHRcdFx0XHRcdGlmICggY3VyLm5vZGVUeXBlIDwgMTEgJiYgKCB0YXJnZXRzID9cblx0XHRcdFx0XHRcdHRhcmdldHMuaW5kZXgoIGN1ciApID4gLTEgOlxuXG5cdFx0XHRcdFx0XHQvLyBEb24ndCBwYXNzIG5vbi1lbGVtZW50cyB0byBTaXp6bGVcblx0XHRcdFx0XHRcdGN1ci5ub2RlVHlwZSA9PT0gMSAmJlxuXHRcdFx0XHRcdFx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGN1ciwgc2VsZWN0b3JzICkgKSApIHtcblxuXHRcdFx0XHRcdFx0bWF0Y2hlZC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZC5sZW5ndGggPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKSA6IG1hdGNoZWQgKTtcblx0fSxcblxuXHQvLyBEZXRlcm1pbmUgdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0aGluIHRoZSBzZXRcblx0aW5kZXg6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gTm8gYXJndW1lbnQsIHJldHVybiBpbmRleCBpbiBwYXJlbnRcblx0XHRpZiAoICFlbGVtICkge1xuXHRcdFx0cmV0dXJuICggdGhpc1sgMCBdICYmIHRoaXNbIDAgXS5wYXJlbnROb2RlICkgPyB0aGlzLmZpcnN0KCkucHJldkFsbCgpLmxlbmd0aCA6IC0xO1xuXHRcdH1cblxuXHRcdC8vIEluZGV4IGluIHNlbGVjdG9yXG5cdFx0aWYgKCB0eXBlb2YgZWxlbSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHJldHVybiBpbmRleE9mLmNhbGwoIGpRdWVyeSggZWxlbSApLCB0aGlzWyAwIF0gKTtcblx0XHR9XG5cblx0XHQvLyBMb2NhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBkZXNpcmVkIGVsZW1lbnRcblx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCB0aGlzLFxuXG5cdFx0XHQvLyBJZiBpdCByZWNlaXZlcyBhIGpRdWVyeSBvYmplY3QsIHRoZSBmaXJzdCBlbGVtZW50IGlzIHVzZWRcblx0XHRcdGVsZW0uanF1ZXJ5ID8gZWxlbVsgMCBdIDogZWxlbVxuXHRcdCk7XG5cdH0sXG5cblx0YWRkOiBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKFxuXHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcy5nZXQoKSwgalF1ZXJ5KCBzZWxlY3RvciwgY29udGV4dCApIClcblx0XHRcdClcblx0XHQpO1xuXHR9LFxuXG5cdGFkZEJhY2s6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5hZGQoIHNlbGVjdG9yID09IG51bGwgP1xuXHRcdFx0dGhpcy5wcmV2T2JqZWN0IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKVxuXHRcdCk7XG5cdH1cbn0gKTtcblxuZnVuY3Rpb24gc2libGluZyggY3VyLCBkaXIgKSB7XG5cdHdoaWxlICggKCBjdXIgPSBjdXJbIGRpciBdICkgJiYgY3VyLm5vZGVUeXBlICE9PSAxICkge31cblx0cmV0dXJuIGN1cjtcbn1cblxualF1ZXJ5LmVhY2goIHtcblx0cGFyZW50OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdHJldHVybiBwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlICE9PSAxMSA/IHBhcmVudCA6IG51bGw7XG5cdH0sXG5cdHBhcmVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiICk7XG5cdH0sXG5cdHBhcmVudHNVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xuXHR9LFxuXHRuZXh0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XG5cdH0sXG5cdHByZXY6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRBbGw6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XG5cdH0sXG5cdG5leHRVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0cHJldlVudGlsOiBmdW5jdGlvbiggZWxlbSwgaSwgdW50aWwgKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiwgdW50aWwgKTtcblx0fSxcblx0c2libGluZ3M6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBzaWJsaW5ncyggKCBlbGVtLnBhcmVudE5vZGUgfHwge30gKS5maXJzdENoaWxkLCBlbGVtICk7XG5cdH0sXG5cdGNoaWxkcmVuOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoIGVsZW0uZmlyc3RDaGlsZCApO1xuXHR9LFxuXHRjb250ZW50czogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5jb250ZW50RG9jdW1lbnQgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQ7XG5cdFx0fVxuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHksIGlPUyA3IG9ubHksIEFuZHJvaWQgQnJvd3NlciA8PTQuMyBvbmx5XG5cdFx0Ly8gVHJlYXQgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYXMgYSByZWd1bGFyIG9uZSBpbiBicm93c2VycyB0aGF0XG5cdFx0Ly8gZG9uJ3Qgc3VwcG9ydCBpdC5cblx0XHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRlbXBsYXRlXCIgKSApIHtcblx0XHRcdGVsZW0gPSBlbGVtLmNvbnRlbnQgfHwgZWxlbTtcblx0XHR9XG5cblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XG5cdH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBmbiApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xuXHRcdHZhciBtYXRjaGVkID0galF1ZXJ5Lm1hcCggdGhpcywgZm4sIHVudGlsICk7XG5cblx0XHRpZiAoIG5hbWUuc2xpY2UoIC01ICkgIT09IFwiVW50aWxcIiApIHtcblx0XHRcdHNlbGVjdG9yID0gdW50aWw7XG5cdFx0fVxuXG5cdFx0aWYgKCBzZWxlY3RvciAmJiB0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRtYXRjaGVkID0galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIG1hdGNoZWQgKTtcblx0XHR9XG5cblx0XHRpZiAoIHRoaXMubGVuZ3RoID4gMSApIHtcblxuXHRcdFx0Ly8gUmVtb3ZlIGR1cGxpY2F0ZXNcblx0XHRcdGlmICggIWd1YXJhbnRlZWRVbmlxdWVbIG5hbWUgXSApIHtcblx0XHRcdFx0alF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmV2ZXJzZSBvcmRlciBmb3IgcGFyZW50cyogYW5kIHByZXYtZGVyaXZhdGl2ZXNcblx0XHRcdGlmICggcnBhcmVudHNwcmV2LnRlc3QoIG5hbWUgKSApIHtcblx0XHRcdFx0bWF0Y2hlZC5yZXZlcnNlKCk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBtYXRjaGVkICk7XG5cdH07XG59ICk7XG52YXIgcm5vdGh0bWx3aGl0ZSA9ICggL1teXFx4MjBcXHRcXHJcXG5cXGZdKy9nICk7XG5cblxuXG4vLyBDb252ZXJ0IFN0cmluZy1mb3JtYXR0ZWQgb3B0aW9ucyBpbnRvIE9iamVjdC1mb3JtYXR0ZWQgb25lc1xuZnVuY3Rpb24gY3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIHtcblx0dmFyIG9iamVjdCA9IHt9O1xuXHRqUXVlcnkuZWFjaCggb3B0aW9ucy5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdLCBmdW5jdGlvbiggXywgZmxhZyApIHtcblx0XHRvYmplY3RbIGZsYWcgXSA9IHRydWU7XG5cdH0gKTtcblx0cmV0dXJuIG9iamVjdDtcbn1cblxuLypcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxuICpcbiAqXHRvcHRpb25zOiBhbiBvcHRpb25hbCBsaXN0IG9mIHNwYWNlLXNlcGFyYXRlZCBvcHRpb25zIHRoYXQgd2lsbCBjaGFuZ2UgaG93XG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcbiAqXG4gKiBCeSBkZWZhdWx0IGEgY2FsbGJhY2sgbGlzdCB3aWxsIGFjdCBsaWtlIGFuIGV2ZW50IGNhbGxiYWNrIGxpc3QgYW5kIGNhbiBiZVxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxuICpcbiAqIFBvc3NpYmxlIG9wdGlvbnM6XG4gKlxuICpcdG9uY2U6XHRcdFx0d2lsbCBlbnN1cmUgdGhlIGNhbGxiYWNrIGxpc3QgY2FuIG9ubHkgYmUgZmlyZWQgb25jZSAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxuICpcdFx0XHRcdFx0YWZ0ZXIgdGhlIGxpc3QgaGFzIGJlZW4gZmlyZWQgcmlnaHQgYXdheSB3aXRoIHRoZSBsYXRlc3QgXCJtZW1vcml6ZWRcIlxuICpcdFx0XHRcdFx0dmFsdWVzIChsaWtlIGEgRGVmZXJyZWQpXG4gKlxuICpcdHVuaXF1ZTpcdFx0XHR3aWxsIGVuc3VyZSBhIGNhbGxiYWNrIGNhbiBvbmx5IGJlIGFkZGVkIG9uY2UgKG5vIGR1cGxpY2F0ZSBpbiB0aGUgbGlzdClcbiAqXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcbiAqXG4gKi9cbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHQvLyBDb252ZXJ0IG9wdGlvbnMgZnJvbSBTdHJpbmctZm9ybWF0dGVkIHRvIE9iamVjdC1mb3JtYXR0ZWQgaWYgbmVlZGVkXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcblx0b3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zID09PSBcInN0cmluZ1wiID9cblx0XHRjcmVhdGVPcHRpb25zKCBvcHRpb25zICkgOlxuXHRcdGpRdWVyeS5leHRlbmQoIHt9LCBvcHRpb25zICk7XG5cblx0dmFyIC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IGlzIGN1cnJlbnRseSBmaXJpbmdcblx0XHRmaXJpbmcsXG5cblx0XHQvLyBMYXN0IGZpcmUgdmFsdWUgZm9yIG5vbi1mb3JnZXR0YWJsZSBsaXN0c1xuXHRcdG1lbW9yeSxcblxuXHRcdC8vIEZsYWcgdG8ga25vdyBpZiBsaXN0IHdhcyBhbHJlYWR5IGZpcmVkXG5cdFx0ZmlyZWQsXG5cblx0XHQvLyBGbGFnIHRvIHByZXZlbnQgZmlyaW5nXG5cdFx0bG9ja2VkLFxuXG5cdFx0Ly8gQWN0dWFsIGNhbGxiYWNrIGxpc3Rcblx0XHRsaXN0ID0gW10sXG5cblx0XHQvLyBRdWV1ZSBvZiBleGVjdXRpb24gZGF0YSBmb3IgcmVwZWF0YWJsZSBsaXN0c1xuXHRcdHF1ZXVlID0gW10sXG5cblx0XHQvLyBJbmRleCBvZiBjdXJyZW50bHkgZmlyaW5nIGNhbGxiYWNrIChtb2RpZmllZCBieSBhZGQvcmVtb3ZlIGFzIG5lZWRlZClcblx0XHRmaXJpbmdJbmRleCA9IC0xLFxuXG5cdFx0Ly8gRmlyZSBjYWxsYmFja3Ncblx0XHRmaXJlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEVuZm9yY2Ugc2luZ2xlLWZpcmluZ1xuXHRcdFx0bG9ja2VkID0gbG9ja2VkIHx8IG9wdGlvbnMub25jZTtcblxuXHRcdFx0Ly8gRXhlY3V0ZSBjYWxsYmFja3MgZm9yIGFsbCBwZW5kaW5nIGV4ZWN1dGlvbnMsXG5cdFx0XHQvLyByZXNwZWN0aW5nIGZpcmluZ0luZGV4IG92ZXJyaWRlcyBhbmQgcnVudGltZSBjaGFuZ2VzXG5cdFx0XHRmaXJlZCA9IGZpcmluZyA9IHRydWU7XG5cdFx0XHRmb3IgKCA7IHF1ZXVlLmxlbmd0aDsgZmlyaW5nSW5kZXggPSAtMSApIHtcblx0XHRcdFx0bWVtb3J5ID0gcXVldWUuc2hpZnQoKTtcblx0XHRcdFx0d2hpbGUgKCArK2ZpcmluZ0luZGV4IDwgbGlzdC5sZW5ndGggKSB7XG5cblx0XHRcdFx0XHQvLyBSdW4gY2FsbGJhY2sgYW5kIGNoZWNrIGZvciBlYXJseSB0ZXJtaW5hdGlvblxuXHRcdFx0XHRcdGlmICggbGlzdFsgZmlyaW5nSW5kZXggXS5hcHBseSggbWVtb3J5WyAwIF0sIG1lbW9yeVsgMSBdICkgPT09IGZhbHNlICYmXG5cdFx0XHRcdFx0XHRvcHRpb25zLnN0b3BPbkZhbHNlICkge1xuXG5cdFx0XHRcdFx0XHQvLyBKdW1wIHRvIGVuZCBhbmQgZm9yZ2V0IHRoZSBkYXRhIHNvIC5hZGQgZG9lc24ndCByZS1maXJlXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoO1xuXHRcdFx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvcmdldCB0aGUgZGF0YSBpZiB3ZSdyZSBkb25lIHdpdGggaXRcblx0XHRcdGlmICggIW9wdGlvbnMubWVtb3J5ICkge1xuXHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0ZmlyaW5nID0gZmFsc2U7XG5cblx0XHRcdC8vIENsZWFuIHVwIGlmIHdlJ3JlIGRvbmUgZmlyaW5nIGZvciBnb29kXG5cdFx0XHRpZiAoIGxvY2tlZCApIHtcblxuXHRcdFx0XHQvLyBLZWVwIGFuIGVtcHR5IGxpc3QgaWYgd2UgaGF2ZSBkYXRhIGZvciBmdXR1cmUgYWRkIGNhbGxzXG5cdFx0XHRcdGlmICggbWVtb3J5ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIHRoaXMgb2JqZWN0IGlzIHNwZW50XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0bGlzdCA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3Rcblx0XHRzZWxmID0ge1xuXG5cdFx0XHQvLyBBZGQgYSBjYWxsYmFjayBvciBhIGNvbGxlY3Rpb24gb2YgY2FsbGJhY2tzIHRvIHRoZSBsaXN0XG5cdFx0XHRhZGQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cblx0XHRcdFx0XHQvLyBJZiB3ZSBoYXZlIG1lbW9yeSBmcm9tIGEgcGFzdCBydW4sIHdlIHNob3VsZCBmaXJlIGFmdGVyIGFkZGluZ1xuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTtcblx0XHRcdFx0XHRcdHF1ZXVlLnB1c2goIG1lbW9yeSApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdCggZnVuY3Rpb24gYWRkKCBhcmdzICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3MsIGZ1bmN0aW9uKCBfLCBhcmcgKSB7XG5cdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy51bmlxdWUgfHwgIXNlbGYuaGFzKCBhcmcgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGxpc3QucHVzaCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBhcmcgJiYgYXJnLmxlbmd0aCAmJiB0b1R5cGUoIGFyZyApICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSW5zcGVjdCByZWN1cnNpdmVseVxuXHRcdFx0XHRcdFx0XHRcdGFkZCggYXJnICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHR9ICkoIGFyZ3VtZW50cyApO1xuXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBSZW1vdmUgYSBjYWxsYmFjayBmcm9tIHRoZSBsaXN0XG5cdFx0XHRyZW1vdmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRqUXVlcnkuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdHZhciBpbmRleDtcblx0XHRcdFx0XHR3aGlsZSAoICggaW5kZXggPSBqUXVlcnkuaW5BcnJheSggYXJnLCBsaXN0LCBpbmRleCApICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdGxpc3Quc3BsaWNlKCBpbmRleCwgMSApO1xuXG5cdFx0XHRcdFx0XHQvLyBIYW5kbGUgZmlyaW5nIGluZGV4ZXNcblx0XHRcdFx0XHRcdGlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7XG5cdFx0XHRcdFx0XHRcdGZpcmluZ0luZGV4LS07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2hlY2sgaWYgYSBnaXZlbiBjYWxsYmFjayBpcyBpbiB0aGUgbGlzdC5cblx0XHRcdC8vIElmIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCByZXR1cm4gd2hldGhlciBvciBub3QgbGlzdCBoYXMgY2FsbGJhY2tzIGF0dGFjaGVkLlxuXHRcdFx0aGFzOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdHJldHVybiBmbiA/XG5cdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6XG5cdFx0XHRcdFx0bGlzdC5sZW5ndGggPiAwO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGFsbCBjYWxsYmFja3MgZnJvbSB0aGUgbGlzdFxuXHRcdFx0ZW1wdHk6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XG5cdFx0XHRcdFx0bGlzdCA9IFtdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZFxuXHRcdFx0Ly8gQWJvcnQgYW55IGN1cnJlbnQvcGVuZGluZyBleGVjdXRpb25zXG5cdFx0XHQvLyBDbGVhciBhbGwgY2FsbGJhY2tzIGFuZCB2YWx1ZXNcblx0XHRcdGRpc2FibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXHRcdFx0ZGlzYWJsZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gIWxpc3Q7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlXG5cdFx0XHQvLyBBbHNvIGRpc2FibGUgLmFkZCB1bmxlc3Mgd2UgaGF2ZSBtZW1vcnkgKHNpbmNlIGl0IHdvdWxkIGhhdmUgbm8gZWZmZWN0KVxuXHRcdFx0Ly8gQWJvcnQgYW55IHBlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0bG9jazogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XG5cdFx0XHRcdGlmICggIW1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdGxpc3QgPSBtZW1vcnkgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiAhIWxvY2tlZDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIENhbGwgYWxsIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBjb250ZXh0IGFuZCBhcmd1bWVudHNcblx0XHRcdGZpcmVXaXRoOiBmdW5jdGlvbiggY29udGV4dCwgYXJncyApIHtcblx0XHRcdFx0aWYgKCAhbG9ja2VkICkge1xuXHRcdFx0XHRcdGFyZ3MgPSBhcmdzIHx8IFtdO1xuXHRcdFx0XHRcdGFyZ3MgPSBbIGNvbnRleHQsIGFyZ3Muc2xpY2UgPyBhcmdzLnNsaWNlKCkgOiBhcmdzIF07XG5cdFx0XHRcdFx0cXVldWUucHVzaCggYXJncyApO1xuXHRcdFx0XHRcdGlmICggIWZpcmluZyApIHtcblx0XHRcdFx0XHRcdGZpcmUoKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCB0aGUgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGFyZ3VtZW50c1xuXHRcdFx0ZmlyZTogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHNlbGYuZmlyZVdpdGgoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIFRvIGtub3cgaWYgdGhlIGNhbGxiYWNrcyBoYXZlIGFscmVhZHkgYmVlbiBjYWxsZWQgYXQgbGVhc3Qgb25jZVxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFmaXJlZDtcblx0XHRcdH1cblx0XHR9O1xuXG5cdHJldHVybiBzZWxmO1xufTtcblxuXG5mdW5jdGlvbiBJZGVudGl0eSggdiApIHtcblx0cmV0dXJuIHY7XG59XG5mdW5jdGlvbiBUaHJvd2VyKCBleCApIHtcblx0dGhyb3cgZXg7XG59XG5cbmZ1bmN0aW9uIGFkb3B0VmFsdWUoIHZhbHVlLCByZXNvbHZlLCByZWplY3QsIG5vVmFsdWUgKSB7XG5cdHZhciBtZXRob2Q7XG5cblx0dHJ5IHtcblxuXHRcdC8vIENoZWNrIGZvciBwcm9taXNlIGFzcGVjdCBmaXJzdCB0byBwcml2aWxlZ2Ugc3luY2hyb25vdXMgYmVoYXZpb3Jcblx0XHRpZiAoIHZhbHVlICYmIGlzRnVuY3Rpb24oICggbWV0aG9kID0gdmFsdWUucHJvbWlzZSApICkgKSB7XG5cdFx0XHRtZXRob2QuY2FsbCggdmFsdWUgKS5kb25lKCByZXNvbHZlICkuZmFpbCggcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciB0aGVuYWJsZXNcblx0XHR9IGVsc2UgaWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnRoZW4gKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlLCByZXNvbHZlLCByZWplY3QgKTtcblxuXHRcdC8vIE90aGVyIG5vbi10aGVuYWJsZXNcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBDb250cm9sIGByZXNvbHZlYCBhcmd1bWVudHMgYnkgbGV0dGluZyBBcnJheSNzbGljZSBjYXN0IGJvb2xlYW4gYG5vVmFsdWVgIHRvIGludGVnZXI6XG5cdFx0XHQvLyAqIGZhbHNlOiBbIHZhbHVlIF0uc2xpY2UoIDAgKSA9PiByZXNvbHZlKCB2YWx1ZSApXG5cdFx0XHQvLyAqIHRydWU6IFsgdmFsdWUgXS5zbGljZSggMSApID0+IHJlc29sdmUoKVxuXHRcdFx0cmVzb2x2ZS5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0uc2xpY2UoIG5vVmFsdWUgKSApO1xuXHRcdH1cblxuXHQvLyBGb3IgUHJvbWlzZXMvQSssIGNvbnZlcnQgZXhjZXB0aW9ucyBpbnRvIHJlamVjdGlvbnNcblx0Ly8gU2luY2UgalF1ZXJ5LndoZW4gZG9lc24ndCB1bndyYXAgdGhlbmFibGVzLCB3ZSBjYW4gc2tpcCB0aGUgZXh0cmEgY2hlY2tzIGFwcGVhcmluZyBpblxuXHQvLyBEZWZlcnJlZCN0aGVuIHRvIGNvbmRpdGlvbmFsbHkgc3VwcHJlc3MgcmVqZWN0aW9uLlxuXHR9IGNhdGNoICggdmFsdWUgKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCBvbmx5XG5cdFx0Ly8gU3RyaWN0IG1vZGUgZnVuY3Rpb25zIGludm9rZWQgd2l0aG91dCAuY2FsbC8uYXBwbHkgZ2V0IGdsb2JhbC1vYmplY3QgY29udGV4dFxuXHRcdHJlamVjdC5hcHBseSggdW5kZWZpbmVkLCBbIHZhbHVlIF0gKTtcblx0fVxufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0RGVmZXJyZWQ6IGZ1bmN0aW9uKCBmdW5jICkge1xuXHRcdHZhciB0dXBsZXMgPSBbXG5cblx0XHRcdFx0Ly8gYWN0aW9uLCBhZGQgbGlzdGVuZXIsIGNhbGxiYWNrcyxcblx0XHRcdFx0Ly8gLi4uIC50aGVuIGhhbmRsZXJzLCBhcmd1bWVudCBpbmRleCwgW2ZpbmFsIHN0YXRlXVxuXHRcdFx0XHRbIFwibm90aWZ5XCIsIFwicHJvZ3Jlc3NcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSwgMiBdLFxuXHRcdFx0XHRbIFwicmVzb2x2ZVwiLCBcImRvbmVcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDAsIFwicmVzb2x2ZWRcIiBdLFxuXHRcdFx0XHRbIFwicmVqZWN0XCIsIFwiZmFpbFwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgMSwgXCJyZWplY3RlZFwiIF1cblx0XHRcdF0sXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxuXHRcdFx0cHJvbWlzZSA9IHtcblx0XHRcdFx0c3RhdGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcblx0XHRcdFx0fSxcblx0XHRcdFx0YWx3YXlzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fSxcblx0XHRcdFx0XCJjYXRjaFwiOiBmdW5jdGlvbiggZm4gKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHByb21pc2UudGhlbiggbnVsbCwgZm4gKTtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0XG5cdFx0XHRcdHBpcGU6IGZ1bmN0aW9uKCAvKiBmbkRvbmUsIGZuRmFpbCwgZm5Qcm9ncmVzcyAqLyApIHtcblx0XHRcdFx0XHR2YXIgZm5zID0gYXJndW1lbnRzO1xuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE1hcCB0dXBsZXMgKHByb2dyZXNzLCBkb25lLCBmYWlsKSB0byBhcmd1bWVudHMgKGRvbmUsIGZhaWwsIHByb2dyZXNzKVxuXHRcdFx0XHRcdFx0XHR2YXIgZm4gPSBpc0Z1bmN0aW9uKCBmbnNbIHR1cGxlWyA0IF0gXSApICYmIGZuc1sgdHVwbGVbIDQgXSBdO1xuXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLnByb2dyZXNzKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLm5vdGlmeSB9KVxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5kb25lKGZ1bmN0aW9uKCkgeyBiaW5kIHRvIG5ld0RlZmVyIG9yIG5ld0RlZmVyLnJlc29sdmUgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZmFpbChmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZWplY3QgfSlcblx0XHRcdFx0XHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAxIF0gXSggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkID0gZm4gJiYgZm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgJiYgaXNGdW5jdGlvbiggcmV0dXJuZWQucHJvbWlzZSApICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQucHJvbWlzZSgpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5wcm9ncmVzcyggbmV3RGVmZXIubm90aWZ5IClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmRvbmUoIG5ld0RlZmVyLnJlc29sdmUgKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZmFpbCggbmV3RGVmZXIucmVqZWN0ICk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXShcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcyxcblx0XHRcdFx0XHRcdFx0XHRcdFx0Zm4gPyBbIHJldHVybmVkIF0gOiBhcmd1bWVudHNcblx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHRmbnMgPSBudWxsO1xuXHRcdFx0XHRcdH0gKS5wcm9taXNlKCk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdHRoZW46IGZ1bmN0aW9uKCBvbkZ1bGZpbGxlZCwgb25SZWplY3RlZCwgb25Qcm9ncmVzcyApIHtcblx0XHRcdFx0XHR2YXIgbWF4RGVwdGggPSAwO1xuXHRcdFx0XHRcdGZ1bmN0aW9uIHJlc29sdmUoIGRlcHRoLCBkZWZlcnJlZCwgaGFuZGxlciwgc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0dmFyIHRoYXQgPSB0aGlzLFxuXHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBhcmd1bWVudHMsXG5cdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdyA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0dmFyIHJldHVybmVkLCB0aGVuO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4zLjMuM1xuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTlcblx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBkb3VibGUtcmVzb2x1dGlvbiBhdHRlbXB0c1xuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCA8IG1heERlcHRoICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkID0gaGFuZGxlci5hcHBseSggdGhhdCwgYXJncyApO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy4xXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC00OFxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCByZXR1cm5lZCA9PT0gZGVmZXJyZWQucHJvbWlzZSgpICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCBcIlRoZW5hYmxlIHNlbGYtcmVzb2x1dGlvblwiICk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb25zIDIuMy4zLjEsIDMuNVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTRcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTc1XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBSZXRyaWV2ZSBgdGhlbmAgb25seSBvbmNlXG5cdFx0XHRcdFx0XHRcdFx0XHR0aGVuID0gcmV0dXJuZWQgJiZcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9uIDIuMy40XG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTY0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgY2hlY2sgb2JqZWN0cyBhbmQgZnVuY3Rpb25zIGZvciB0aGVuYWJpbGl0eVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHR5cGVvZiByZXR1cm5lZCA9PT0gXCJvYmplY3RcIiB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiByZXR1cm5lZCA9PT0gXCJmdW5jdGlvblwiICkgJiZcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQudGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGEgcmV0dXJuZWQgdGhlbmFibGVcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggaXNGdW5jdGlvbiggdGhlbiApICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFNwZWNpYWwgcHJvY2Vzc29ycyAobm90aWZ5KSBqdXN0IHdhaXQgZm9yIHJlc29sdXRpb25cblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBzcGVjaWFsICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoZW4uY2FsbChcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBUaHJvd2VyLCBzcGVjaWFsIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBhbHNvIGhvb2sgaW50byBwcm9ncmVzc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gLi4uYW5kIGRpc3JlZ2FyZCBvbGRlciByZXNvbHV0aW9uIHZhbHVlc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1heERlcHRoKys7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmVzb2x2ZSggbWF4RGVwdGgsIGRlZmVycmVkLCBJZGVudGl0eSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBIYW5kbGUgYWxsIG90aGVyIHJldHVybmVkIHZhbHVlc1xuXHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGFuZCBtdWx0aXBsZSB2YWx1ZXMgKG5vbi1zcGVjIGJlaGF2aW9yKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGhhbmRsZXIgIT09IElkZW50aXR5ICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHRoYXQgPSB1bmRlZmluZWQ7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgcmV0dXJuZWQgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFByb2Nlc3MgdGhlIHZhbHVlKHMpXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmF1bHQgcHJvY2VzcyBpcyByZXNvbHZlXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCggc3BlY2lhbCB8fCBkZWZlcnJlZC5yZXNvbHZlV2l0aCApKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fSxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgbm9ybWFsIHByb2Nlc3NvcnMgKHJlc29sdmUpIGNhdGNoIGFuZCByZWplY3QgZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdHByb2Nlc3MgPSBzcGVjaWFsID9cblx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgOlxuXHRcdFx0XHRcdFx0XHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0bWlnaHRUaHJvdygpO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayggZSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cHJvY2Vzcy5zdGFja1RyYWNlICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjQuMVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTYxXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gSWdub3JlIHBvc3QtcmVzb2x1dGlvbiBleGNlcHRpb25zXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCArIDEgPj0gbWF4RGVwdGggKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIE9ubHkgc3Vic3RpdHV0ZSBoYW5kbGVycyBwYXNzIG9uIGNvbnRleHRcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIGFuZCBtdWx0aXBsZSB2YWx1ZXMgKG5vbi1zcGVjIGJlaGF2aW9yKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBUaHJvd2VyICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRhcmdzID0gWyBlIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIHRoYXQsIGFyZ3MgKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0XHRcdH07XG5cblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjFcblx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNTdcblx0XHRcdFx0XHRcdFx0Ly8gUmUtcmVzb2x2ZSBwcm9taXNlcyBpbW1lZGlhdGVseSB0byBkb2RnZSBmYWxzZSByZWplY3Rpb24gZnJvbVxuXHRcdFx0XHRcdFx0XHQvLyBzdWJzZXF1ZW50IGVycm9yc1xuXHRcdFx0XHRcdFx0XHRpZiAoIGRlcHRoICkge1xuXHRcdFx0XHRcdFx0XHRcdHByb2Nlc3MoKTtcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENhbGwgYW4gb3B0aW9uYWwgaG9vayB0byByZWNvcmQgdGhlIHN0YWNrLCBpbiBjYXNlIG9mIGV4Y2VwdGlvblxuXHRcdFx0XHRcdFx0XHRcdC8vIHNpbmNlIGl0J3Mgb3RoZXJ3aXNlIGxvc3Qgd2hlbiBleGVjdXRpb24gZ29lcyBhc3luY1xuXHRcdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LkRlZmVycmVkLmdldFN0YWNrSG9vayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSA9IGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2soKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHByb2Nlc3MgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4galF1ZXJ5LkRlZmVycmVkKCBmdW5jdGlvbiggbmV3RGVmZXIgKSB7XG5cblx0XHRcdFx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25Qcm9ncmVzcyApID9cblx0XHRcdFx0XHRcdFx0XHRcdG9uUHJvZ3Jlc3MgOlxuXHRcdFx0XHRcdFx0XHRcdFx0SWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIubm90aWZ5V2l0aFxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuYWRkKCAuLi4gKVxuXHRcdFx0XHRcdFx0dHVwbGVzWyAxIF1bIDMgXS5hZGQoXG5cdFx0XHRcdFx0XHRcdHJlc29sdmUoXG5cdFx0XHRcdFx0XHRcdFx0MCxcblx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlcixcblx0XHRcdFx0XHRcdFx0XHRpc0Z1bmN0aW9uKCBvbkZ1bGZpbGxlZCApID9cblx0XHRcdFx0XHRcdFx0XHRcdG9uRnVsZmlsbGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5XG5cdFx0XHRcdFx0XHRcdClcblx0XHRcdFx0XHRcdCk7XG5cblx0XHRcdFx0XHRcdC8vIHJlamVjdGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMiBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25SZWplY3RlZCApID9cblx0XHRcdFx0XHRcdFx0XHRcdG9uUmVqZWN0ZWQgOlxuXHRcdFx0XHRcdFx0XHRcdFx0VGhyb3dlclxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdH0gKS5wcm9taXNlKCk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gR2V0IGEgcHJvbWlzZSBmb3IgdGhpcyBkZWZlcnJlZFxuXHRcdFx0XHQvLyBJZiBvYmogaXMgcHJvdmlkZWQsIHRoZSBwcm9taXNlIGFzcGVjdCBpcyBhZGRlZCB0byB0aGUgb2JqZWN0XG5cdFx0XHRcdHByb21pc2U6IGZ1bmN0aW9uKCBvYmogKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG9iaiAhPSBudWxsID8galF1ZXJ5LmV4dGVuZCggb2JqLCBwcm9taXNlICkgOiBwcm9taXNlO1xuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0ZGVmZXJyZWQgPSB7fTtcblxuXHRcdC8vIEFkZCBsaXN0LXNwZWNpZmljIG1ldGhvZHNcblx0XHRqUXVlcnkuZWFjaCggdHVwbGVzLCBmdW5jdGlvbiggaSwgdHVwbGUgKSB7XG5cdFx0XHR2YXIgbGlzdCA9IHR1cGxlWyAyIF0sXG5cdFx0XHRcdHN0YXRlU3RyaW5nID0gdHVwbGVbIDUgXTtcblxuXHRcdFx0Ly8gcHJvbWlzZS5wcm9ncmVzcyA9IGxpc3QuYWRkXG5cdFx0XHQvLyBwcm9taXNlLmRvbmUgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5mYWlsID0gbGlzdC5hZGRcblx0XHRcdHByb21pc2VbIHR1cGxlWyAxIF0gXSA9IGxpc3QuYWRkO1xuXG5cdFx0XHQvLyBIYW5kbGUgc3RhdGVcblx0XHRcdGlmICggc3RhdGVTdHJpbmcgKSB7XG5cdFx0XHRcdGxpc3QuYWRkKFxuXHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0XHQvLyBzdGF0ZSA9IFwicmVzb2x2ZWRcIiAoaS5lLiwgZnVsZmlsbGVkKVxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlamVjdGVkXCJcblx0XHRcdFx0XHRcdHN0YXRlID0gc3RhdGVTdHJpbmc7XG5cdFx0XHRcdFx0fSxcblxuXHRcdFx0XHRcdC8vIHJlamVjdGVkX2NhbGxiYWNrcy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2NhbGxiYWNrcy5kaXNhYmxlXG5cdFx0XHRcdFx0dHVwbGVzWyAzIC0gaSBdWyAyIF0uZGlzYWJsZSxcblxuXHRcdFx0XHRcdC8vIHJlamVjdGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHQvLyBmdWxmaWxsZWRfaGFuZGxlcnMuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMyBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19jYWxsYmFja3MubG9ja1xuXHRcdFx0XHRcdHR1cGxlc1sgMCBdWyAyIF0ubG9jayxcblxuXHRcdFx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmxvY2tcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gcHJvZ3Jlc3NfaGFuZGxlcnMuZmlyZVxuXHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIHJlamVjdGVkX2hhbmRsZXJzLmZpcmVcblx0XHRcdGxpc3QuYWRkKCB0dXBsZVsgMyBdLmZpcmUgKTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5ID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLm5vdGlmeVdpdGgoLi4uKSB9XG5cdFx0XHQvLyBkZWZlcnJlZC5yZXNvbHZlID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlc29sdmVXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0ID0gZnVuY3Rpb24oKSB7IGRlZmVycmVkLnJlamVjdFdpdGgoLi4uKSB9XG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSggdGhpcyA9PT0gZGVmZXJyZWQgPyB1bmRlZmluZWQgOiB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9O1xuXG5cdFx0XHQvLyBkZWZlcnJlZC5ub3RpZnlXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZVdpdGggPSBsaXN0LmZpcmVXaXRoXG5cdFx0XHQvLyBkZWZlcnJlZC5yZWplY3RXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gKyBcIldpdGhcIiBdID0gbGlzdC5maXJlV2l0aDtcblx0XHR9ICk7XG5cblx0XHQvLyBNYWtlIHRoZSBkZWZlcnJlZCBhIHByb21pc2Vcblx0XHRwcm9taXNlLnByb21pc2UoIGRlZmVycmVkICk7XG5cblx0XHQvLyBDYWxsIGdpdmVuIGZ1bmMgaWYgYW55XG5cdFx0aWYgKCBmdW5jICkge1xuXHRcdFx0ZnVuYy5jYWxsKCBkZWZlcnJlZCwgZGVmZXJyZWQgKTtcblx0XHR9XG5cblx0XHQvLyBBbGwgZG9uZSFcblx0XHRyZXR1cm4gZGVmZXJyZWQ7XG5cdH0sXG5cblx0Ly8gRGVmZXJyZWQgaGVscGVyXG5cdHdoZW46IGZ1bmN0aW9uKCBzaW5nbGVWYWx1ZSApIHtcblx0XHR2YXJcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5jb21wbGV0ZWQgc3Vib3JkaW5hdGVzXG5cdFx0XHRyZW1haW5pbmcgPSBhcmd1bWVudHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBjb3VudCBvZiB1bnByb2Nlc3NlZCBhcmd1bWVudHNcblx0XHRcdGkgPSByZW1haW5pbmcsXG5cblx0XHRcdC8vIHN1Ym9yZGluYXRlIGZ1bGZpbGxtZW50IGRhdGFcblx0XHRcdHJlc29sdmVDb250ZXh0cyA9IEFycmF5KCBpICksXG5cdFx0XHRyZXNvbHZlVmFsdWVzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICksXG5cblx0XHRcdC8vIHRoZSBtYXN0ZXIgRGVmZXJyZWRcblx0XHRcdG1hc3RlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBjYWxsYmFjayBmYWN0b3J5XG5cdFx0XHR1cGRhdGVGdW5jID0gZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmVzb2x2ZUNvbnRleHRzWyBpIF0gPSB0aGlzO1xuXHRcdFx0XHRcdHJlc29sdmVWYWx1ZXNbIGkgXSA9IGFyZ3VtZW50cy5sZW5ndGggPiAxID8gc2xpY2UuY2FsbCggYXJndW1lbnRzICkgOiB2YWx1ZTtcblx0XHRcdFx0XHRpZiAoICEoIC0tcmVtYWluaW5nICkgKSB7XG5cdFx0XHRcdFx0XHRtYXN0ZXIucmVzb2x2ZVdpdGgoIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblx0XHRcdH07XG5cblx0XHQvLyBTaW5nbGUtIGFuZCBlbXB0eSBhcmd1bWVudHMgYXJlIGFkb3B0ZWQgbGlrZSBQcm9taXNlLnJlc29sdmVcblx0XHRpZiAoIHJlbWFpbmluZyA8PSAxICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggc2luZ2xlVmFsdWUsIG1hc3Rlci5kb25lKCB1cGRhdGVGdW5jKCBpICkgKS5yZXNvbHZlLCBtYXN0ZXIucmVqZWN0LFxuXHRcdFx0XHQhcmVtYWluaW5nICk7XG5cblx0XHRcdC8vIFVzZSAudGhlbigpIHRvIHVud3JhcCBzZWNvbmRhcnkgdGhlbmFibGVzIChjZi4gZ2gtMzAwMClcblx0XHRcdGlmICggbWFzdGVyLnN0YXRlKCkgPT09IFwicGVuZGluZ1wiIHx8XG5cdFx0XHRcdGlzRnVuY3Rpb24oIHJlc29sdmVWYWx1ZXNbIGkgXSAmJiByZXNvbHZlVmFsdWVzWyBpIF0udGhlbiApICkge1xuXG5cdFx0XHRcdHJldHVybiBtYXN0ZXIudGhlbigpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIE11bHRpcGxlIGFyZ3VtZW50cyBhcmUgYWdncmVnYXRlZCBsaWtlIFByb21pc2UuYWxsIGFycmF5IGVsZW1lbnRzXG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRhZG9wdFZhbHVlKCByZXNvbHZlVmFsdWVzWyBpIF0sIHVwZGF0ZUZ1bmMoIGkgKSwgbWFzdGVyLnJlamVjdCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBtYXN0ZXIucHJvbWlzZSgpO1xuXHR9XG59ICk7XG5cblxuLy8gVGhlc2UgdXN1YWxseSBpbmRpY2F0ZSBhIHByb2dyYW1tZXIgbWlzdGFrZSBkdXJpbmcgZGV2ZWxvcG1lbnQsXG4vLyB3YXJuIGFib3V0IHRoZW0gQVNBUCByYXRoZXIgdGhhbiBzd2FsbG93aW5nIHRoZW0gYnkgZGVmYXVsdC5cbnZhciByZXJyb3JOYW1lcyA9IC9eKEV2YWx8SW50ZXJuYWx8UmFuZ2V8UmVmZXJlbmNlfFN5bnRheHxUeXBlfFVSSSlFcnJvciQvO1xuXG5qUXVlcnkuRGVmZXJyZWQuZXhjZXB0aW9uSG9vayA9IGZ1bmN0aW9uKCBlcnJvciwgc3RhY2sgKSB7XG5cblx0Ly8gU3VwcG9ydDogSUUgOCAtIDkgb25seVxuXHQvLyBDb25zb2xlIGV4aXN0cyB3aGVuIGRldiB0b29scyBhcmUgb3Blbiwgd2hpY2ggY2FuIGhhcHBlbiBhdCBhbnkgdGltZVxuXHRpZiAoIHdpbmRvdy5jb25zb2xlICYmIHdpbmRvdy5jb25zb2xlLndhcm4gJiYgZXJyb3IgJiYgcmVycm9yTmFtZXMudGVzdCggZXJyb3IubmFtZSApICkge1xuXHRcdHdpbmRvdy5jb25zb2xlLndhcm4oIFwialF1ZXJ5LkRlZmVycmVkIGV4Y2VwdGlvbjogXCIgKyBlcnJvci5tZXNzYWdlLCBlcnJvci5zdGFjaywgc3RhY2sgKTtcblx0fVxufTtcblxuXG5cblxualF1ZXJ5LnJlYWR5RXhjZXB0aW9uID0gZnVuY3Rpb24oIGVycm9yICkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0dGhyb3cgZXJyb3I7XG5cdH0gKTtcbn07XG5cblxuXG5cbi8vIFRoZSBkZWZlcnJlZCB1c2VkIG9uIERPTSByZWFkeVxudmFyIHJlYWR5TGlzdCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xuXG5qUXVlcnkuZm4ucmVhZHkgPSBmdW5jdGlvbiggZm4gKSB7XG5cblx0cmVhZHlMaXN0XG5cdFx0LnRoZW4oIGZuIClcblxuXHRcdC8vIFdyYXAgalF1ZXJ5LnJlYWR5RXhjZXB0aW9uIGluIGEgZnVuY3Rpb24gc28gdGhhdCB0aGUgbG9va3VwXG5cdFx0Ly8gaGFwcGVucyBhdCB0aGUgdGltZSBvZiBlcnJvciBoYW5kbGluZyBpbnN0ZWFkIG9mIGNhbGxiYWNrXG5cdFx0Ly8gcmVnaXN0cmF0aW9uLlxuXHRcdC5jYXRjaCggZnVuY3Rpb24oIGVycm9yICkge1xuXHRcdFx0alF1ZXJ5LnJlYWR5RXhjZXB0aW9uKCBlcnJvciApO1xuXHRcdH0gKTtcblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBJcyB0aGUgRE9NIHJlYWR5IHRvIGJlIHVzZWQ/IFNldCB0byB0cnVlIG9uY2UgaXQgb2NjdXJzLlxuXHRpc1JlYWR5OiBmYWxzZSxcblxuXHQvLyBBIGNvdW50ZXIgdG8gdHJhY2sgaG93IG1hbnkgaXRlbXMgdG8gd2FpdCBmb3IgYmVmb3JlXG5cdC8vIHRoZSByZWFkeSBldmVudCBmaXJlcy4gU2VlICM2NzgxXG5cdHJlYWR5V2FpdDogMSxcblxuXHQvLyBIYW5kbGUgd2hlbiB0aGUgRE9NIGlzIHJlYWR5XG5cdHJlYWR5OiBmdW5jdGlvbiggd2FpdCApIHtcblxuXHRcdC8vIEFib3J0IGlmIHRoZXJlIGFyZSBwZW5kaW5nIGhvbGRzIG9yIHdlJ3JlIGFscmVhZHkgcmVhZHlcblx0XHRpZiAoIHdhaXQgPT09IHRydWUgPyAtLWpRdWVyeS5yZWFkeVdhaXQgOiBqUXVlcnkuaXNSZWFkeSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHlcblx0XHRqUXVlcnkuaXNSZWFkeSA9IHRydWU7XG5cblx0XHQvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZVxuXHRcdGlmICggd2FpdCAhPT0gdHJ1ZSAmJiAtLWpRdWVyeS5yZWFkeVdhaXQgPiAwICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIElmIHRoZXJlIGFyZSBmdW5jdGlvbnMgYm91bmQsIHRvIGV4ZWN1dGVcblx0XHRyZWFkeUxpc3QucmVzb2x2ZVdpdGgoIGRvY3VtZW50LCBbIGpRdWVyeSBdICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LnJlYWR5LnRoZW4gPSByZWFkeUxpc3QudGhlbjtcblxuLy8gVGhlIHJlYWR5IGV2ZW50IGhhbmRsZXIgYW5kIHNlbGYgY2xlYW51cCBtZXRob2RcbmZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcblx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xuXHR3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xuXHRqUXVlcnkucmVhZHkoKTtcbn1cblxuLy8gQ2F0Y2ggY2FzZXMgd2hlcmUgJChkb2N1bWVudCkucmVhZHkoKSBpcyBjYWxsZWRcbi8vIGFmdGVyIHRoZSBicm93c2VyIGV2ZW50IGhhcyBhbHJlYWR5IG9jY3VycmVkLlxuLy8gU3VwcG9ydDogSUUgPD05IC0gMTAgb25seVxuLy8gT2xkZXIgSUUgc29tZXRpbWVzIHNpZ25hbHMgXCJpbnRlcmFjdGl2ZVwiIHRvbyBzb29uXG5pZiAoIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiB8fFxuXHQoIGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiICYmICFkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwgKSApIHtcblxuXHQvLyBIYW5kbGUgaXQgYXN5bmNocm9ub3VzbHkgdG8gYWxsb3cgc2NyaXB0cyB0aGUgb3Bwb3J0dW5pdHkgdG8gZGVsYXkgcmVhZHlcblx0d2luZG93LnNldFRpbWVvdXQoIGpRdWVyeS5yZWFkeSApO1xuXG59IGVsc2Uge1xuXG5cdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcblx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xuXG5cdC8vIEEgZmFsbGJhY2sgdG8gd2luZG93Lm9ubG9hZCwgdGhhdCB3aWxsIGFsd2F5cyB3b3JrXG5cdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcImxvYWRcIiwgY29tcGxldGVkICk7XG59XG5cblxuXG5cbi8vIE11bHRpZnVuY3Rpb25hbCBtZXRob2QgdG8gZ2V0IGFuZCBzZXQgdmFsdWVzIG9mIGEgY29sbGVjdGlvblxuLy8gVGhlIHZhbHVlL3MgY2FuIG9wdGlvbmFsbHkgYmUgZXhlY3V0ZWQgaWYgaXQncyBhIGZ1bmN0aW9uXG52YXIgYWNjZXNzID0gZnVuY3Rpb24oIGVsZW1zLCBmbiwga2V5LCB2YWx1ZSwgY2hhaW5hYmxlLCBlbXB0eUdldCwgcmF3ICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bGVuID0gZWxlbXMubGVuZ3RoLFxuXHRcdGJ1bGsgPSBrZXkgPT0gbnVsbDtcblxuXHQvLyBTZXRzIG1hbnkgdmFsdWVzXG5cdGlmICggdG9UeXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcblx0XHRjaGFpbmFibGUgPSB0cnVlO1xuXHRcdGZvciAoIGkgaW4ga2V5ICkge1xuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XG5cdFx0fVxuXG5cdC8vIFNldHMgb25lIHZhbHVlXG5cdH0gZWxzZSBpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblxuXHRcdGlmICggIWlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyYXcgPSB0cnVlO1xuXHRcdH1cblxuXHRcdGlmICggYnVsayApIHtcblxuXHRcdFx0Ly8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0XG5cdFx0XHRpZiAoIHJhdyApIHtcblx0XHRcdFx0Zm4uY2FsbCggZWxlbXMsIHZhbHVlICk7XG5cdFx0XHRcdGZuID0gbnVsbDtcblxuXHRcdFx0Ly8gLi4uZXhjZXB0IHdoZW4gZXhlY3V0aW5nIGZ1bmN0aW9uIHZhbHVlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0YnVsayA9IGZuO1xuXHRcdFx0XHRmbiA9IGZ1bmN0aW9uKCBlbGVtLCBrZXksIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xuXHRcdFx0XHR9O1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0Zm4oXG5cdFx0XHRcdFx0ZWxlbXNbIGkgXSwga2V5LCByYXcgP1xuXHRcdFx0XHRcdHZhbHVlIDpcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCBlbGVtc1sgaSBdLCBpLCBmbiggZWxlbXNbIGkgXSwga2V5ICkgKVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGlmICggY2hhaW5hYmxlICkge1xuXHRcdHJldHVybiBlbGVtcztcblx0fVxuXG5cdC8vIEdldHNcblx0aWYgKCBidWxrICkge1xuXHRcdHJldHVybiBmbi5jYWxsKCBlbGVtcyApO1xuXHR9XG5cblx0cmV0dXJuIGxlbiA/IGZuKCBlbGVtc1sgMCBdLCBrZXkgKSA6IGVtcHR5R2V0O1xufTtcblxuXG4vLyBNYXRjaGVzIGRhc2hlZCBzdHJpbmcgZm9yIGNhbWVsaXppbmdcbnZhciBybXNQcmVmaXggPSAvXi1tcy0vLFxuXHRyZGFzaEFscGhhID0gLy0oW2Etel0pL2c7XG5cbi8vIFVzZWQgYnkgY2FtZWxDYXNlIGFzIGNhbGxiYWNrIHRvIHJlcGxhY2UoKVxuZnVuY3Rpb24gZmNhbWVsQ2FzZSggYWxsLCBsZXR0ZXIgKSB7XG5cdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcbn1cblxuLy8gQ29udmVydCBkYXNoZWQgdG8gY2FtZWxDYXNlOyB1c2VkIGJ5IHRoZSBjc3MgYW5kIGRhdGEgbW9kdWxlc1xuLy8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuLy8gTWljcm9zb2Z0IGZvcmdvdCB0byBodW1wIHRoZWlyIHZlbmRvciBwcmVmaXggKCM5NTcyKVxuZnVuY3Rpb24gY2FtZWxDYXNlKCBzdHJpbmcgKSB7XG5cdHJldHVybiBzdHJpbmcucmVwbGFjZSggcm1zUHJlZml4LCBcIm1zLVwiICkucmVwbGFjZSggcmRhc2hBbHBoYSwgZmNhbWVsQ2FzZSApO1xufVxudmFyIGFjY2VwdERhdGEgPSBmdW5jdGlvbiggb3duZXIgKSB7XG5cblx0Ly8gQWNjZXB0cyBvbmx5OlxuXHQvLyAgLSBOb2RlXG5cdC8vICAgIC0gTm9kZS5FTEVNRU5UX05PREVcblx0Ly8gICAgLSBOb2RlLkRPQ1VNRU5UX05PREVcblx0Ly8gIC0gT2JqZWN0XG5cdC8vICAgIC0gQW55XG5cdHJldHVybiBvd25lci5ub2RlVHlwZSA9PT0gMSB8fCBvd25lci5ub2RlVHlwZSA9PT0gOSB8fCAhKCArb3duZXIubm9kZVR5cGUgKTtcbn07XG5cblxuXG5cbmZ1bmN0aW9uIERhdGEoKSB7XG5cdHRoaXMuZXhwYW5kbyA9IGpRdWVyeS5leHBhbmRvICsgRGF0YS51aWQrKztcbn1cblxuRGF0YS51aWQgPSAxO1xuXG5EYXRhLnByb3RvdHlwZSA9IHtcblxuXHRjYWNoZTogZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdFx0Ly8gQ2hlY2sgaWYgdGhlIG93bmVyIG9iamVjdCBhbHJlYWR5IGhhcyBhIGNhY2hlXG5cdFx0dmFyIHZhbHVlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0Ly8gSWYgbm90LCBjcmVhdGUgb25lXG5cdFx0aWYgKCAhdmFsdWUgKSB7XG5cdFx0XHR2YWx1ZSA9IHt9O1xuXG5cdFx0XHQvLyBXZSBjYW4gYWNjZXB0IGRhdGEgZm9yIG5vbi1lbGVtZW50IG5vZGVzIGluIG1vZGVybiBicm93c2Vycyxcblx0XHRcdC8vIGJ1dCB3ZSBzaG91bGQgbm90LCBzZWUgIzgzMzUuXG5cdFx0XHQvLyBBbHdheXMgcmV0dXJuIGFuIGVtcHR5IG9iamVjdC5cblx0XHRcdGlmICggYWNjZXB0RGF0YSggb3duZXIgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBpdCBpcyBhIG5vZGUgdW5saWtlbHkgdG8gYmUgc3RyaW5naWZ5LWVkIG9yIGxvb3BlZCBvdmVyXG5cdFx0XHRcdC8vIHVzZSBwbGFpbiBhc3NpZ25tZW50XG5cdFx0XHRcdGlmICggb3duZXIubm9kZVR5cGUgKSB7XG5cdFx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdmFsdWU7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHNlY3VyZSBpdCBpbiBhIG5vbi1lbnVtZXJhYmxlIHByb3BlcnR5XG5cdFx0XHRcdC8vIGNvbmZpZ3VyYWJsZSBtdXN0IGJlIHRydWUgdG8gYWxsb3cgdGhlIHByb3BlcnR5IHRvIGJlXG5cdFx0XHRcdC8vIGRlbGV0ZWQgd2hlbiBkYXRhIGlzIHJlbW92ZWRcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoIG93bmVyLCB0aGlzLmV4cGFuZG8sIHtcblx0XHRcdFx0XHRcdHZhbHVlOiB2YWx1ZSxcblx0XHRcdFx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZVxuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB2YWx1ZTtcblx0fSxcblx0c2V0OiBmdW5jdGlvbiggb3duZXIsIGRhdGEsIHZhbHVlICkge1xuXHRcdHZhciBwcm9wLFxuXHRcdFx0Y2FjaGUgPSB0aGlzLmNhY2hlKCBvd25lciApO1xuXG5cdFx0Ly8gSGFuZGxlOiBbIG93bmVyLCBrZXksIHZhbHVlIF0gYXJnc1xuXHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRpZiAoIHR5cGVvZiBkYXRhID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggZGF0YSApIF0gPSB2YWx1ZTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwgeyBwcm9wZXJ0aWVzIH0gXSBhcmdzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29weSB0aGUgcHJvcGVydGllcyBvbmUtYnktb25lIHRvIHRoZSBjYWNoZSBvYmplY3Rcblx0XHRcdGZvciAoIHByb3AgaW4gZGF0YSApIHtcblx0XHRcdFx0Y2FjaGVbIGNhbWVsQ2FzZSggcHJvcCApIF0gPSBkYXRhWyBwcm9wIF07XG5cdFx0XHR9XG5cdFx0fVxuXHRcdHJldHVybiBjYWNoZTtcblx0fSxcblx0Z2V0OiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHRyZXR1cm4ga2V5ID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcy5jYWNoZSggb3duZXIgKSA6XG5cblx0XHRcdC8vIEFsd2F5cyB1c2UgY2FtZWxDYXNlIGtleSAoZ2gtMjI1Nylcblx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSAmJiBvd25lclsgdGhpcy5leHBhbmRvIF1bIGNhbWVsQ2FzZSgga2V5ICkgXTtcblx0fSxcblx0YWNjZXNzOiBmdW5jdGlvbiggb3duZXIsIGtleSwgdmFsdWUgKSB7XG5cblx0XHQvLyBJbiBjYXNlcyB3aGVyZSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIE5vIGtleSB3YXMgc3BlY2lmaWVkXG5cdFx0Ly8gICAyLiBBIHN0cmluZyBrZXkgd2FzIHNwZWNpZmllZCwgYnV0IG5vIHZhbHVlIHByb3ZpZGVkXG5cdFx0Ly9cblx0XHQvLyBUYWtlIHRoZSBcInJlYWRcIiBwYXRoIGFuZCBhbGxvdyB0aGUgZ2V0IG1ldGhvZCB0byBkZXRlcm1pbmVcblx0XHQvLyB3aGljaCB2YWx1ZSB0byByZXR1cm4sIHJlc3BlY3RpdmVseSBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIFRoZSBlbnRpcmUgY2FjaGUgb2JqZWN0XG5cdFx0Ly8gICAyLiBUaGUgZGF0YSBzdG9yZWQgYXQgdGhlIGtleVxuXHRcdC8vXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fFxuXHRcdFx0XHQoICgga2V5ICYmIHR5cGVvZiBrZXkgPT09IFwic3RyaW5nXCIgKSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkgKSB7XG5cblx0XHRcdHJldHVybiB0aGlzLmdldCggb3duZXIsIGtleSApO1xuXHRcdH1cblxuXHRcdC8vIFdoZW4gdGhlIGtleSBpcyBub3QgYSBzdHJpbmcsIG9yIGJvdGggYSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly8gYXJlIHNwZWNpZmllZCwgc2V0IG9yIGV4dGVuZCAoZXhpc3Rpbmcgb2JqZWN0cykgd2l0aCBlaXRoZXI6XG5cdFx0Ly9cblx0XHQvLyAgIDEuIEFuIG9iamVjdCBvZiBwcm9wZXJ0aWVzXG5cdFx0Ly8gICAyLiBBIGtleSBhbmQgdmFsdWVcblx0XHQvL1xuXHRcdHRoaXMuc2V0KCBvd25lciwga2V5LCB2YWx1ZSApO1xuXG5cdFx0Ly8gU2luY2UgdGhlIFwic2V0XCIgcGF0aCBjYW4gaGF2ZSB0d28gcG9zc2libGUgZW50cnkgcG9pbnRzXG5cdFx0Ly8gcmV0dXJuIHRoZSBleHBlY3RlZCBkYXRhIGJhc2VkIG9uIHdoaWNoIHBhdGggd2FzIHRha2VuWypdXG5cdFx0cmV0dXJuIHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IGtleTtcblx0fSxcblx0cmVtb3ZlOiBmdW5jdGlvbiggb3duZXIsIGtleSApIHtcblx0XHR2YXIgaSxcblx0XHRcdGNhY2hlID0gb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXG5cdFx0aWYgKCBjYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICgga2V5ICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQgYXJyYXkgb3Igc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBvZiBrZXlzXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIGtleSApICkge1xuXG5cdFx0XHRcdC8vIElmIGtleSBpcyBhbiBhcnJheSBvZiBrZXlzLi4uXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzZXQgY2FtZWxDYXNlIGtleXMsIHNvIHJlbW92ZSB0aGF0LlxuXHRcdFx0XHRrZXkgPSBrZXkubWFwKCBjYW1lbENhc2UgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGtleSA9IGNhbWVsQ2FzZSgga2V5ICk7XG5cblx0XHRcdFx0Ly8gSWYgYSBrZXkgd2l0aCB0aGUgc3BhY2VzIGV4aXN0cywgdXNlIGl0LlxuXHRcdFx0XHQvLyBPdGhlcndpc2UsIGNyZWF0ZSBhbiBhcnJheSBieSBtYXRjaGluZyBub24td2hpdGVzcGFjZVxuXHRcdFx0XHRrZXkgPSBrZXkgaW4gY2FjaGUgP1xuXHRcdFx0XHRcdFsga2V5IF0gOlxuXHRcdFx0XHRcdCgga2V5Lm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW10gKTtcblx0XHRcdH1cblxuXHRcdFx0aSA9IGtleS5sZW5ndGg7XG5cblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRkZWxldGUgY2FjaGVbIGtleVsgaSBdIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIHRoZXJlJ3Mgbm8gbW9yZSBkYXRhXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCB8fCBqUXVlcnkuaXNFbXB0eU9iamVjdCggY2FjaGUgKSApIHtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NVxuXHRcdFx0Ly8gV2Via2l0ICYgQmxpbmsgcGVyZm9ybWFuY2Ugc3VmZmVycyB3aGVuIGRlbGV0aW5nIHByb3BlcnRpZXNcblx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwNyAoYnVnIHJlc3RyaWN0ZWQpXG5cdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRkZWxldGUgb3duZXJbIHRoaXMuZXhwYW5kbyBdO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblx0aGFzRGF0YTogZnVuY3Rpb24oIG93bmVyICkge1xuXHRcdHZhciBjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRyZXR1cm4gY2FjaGUgIT09IHVuZGVmaW5lZCAmJiAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICk7XG5cdH1cbn07XG52YXIgZGF0YVByaXYgPSBuZXcgRGF0YSgpO1xuXG52YXIgZGF0YVVzZXIgPSBuZXcgRGF0YSgpO1xuXG5cblxuLy9cdEltcGxlbWVudGF0aW9uIFN1bW1hcnlcbi8vXG4vL1x0MS4gRW5mb3JjZSBBUEkgc3VyZmFjZSBhbmQgc2VtYW50aWMgY29tcGF0aWJpbGl0eSB3aXRoIDEuOS54IGJyYW5jaFxuLy9cdDIuIEltcHJvdmUgdGhlIG1vZHVsZSdzIG1haW50YWluYWJpbGl0eSBieSByZWR1Y2luZyB0aGUgc3RvcmFnZVxuLy9cdFx0cGF0aHMgdG8gYSBzaW5nbGUgbWVjaGFuaXNtLlxuLy9cdDMuIFVzZSB0aGUgc2FtZSBzaW5nbGUgbWVjaGFuaXNtIHRvIHN1cHBvcnQgXCJwcml2YXRlXCIgYW5kIFwidXNlclwiIGRhdGEuXG4vL1x0NC4gX05ldmVyXyBleHBvc2UgXCJwcml2YXRlXCIgZGF0YSB0byB1c2VyIGNvZGUgKFRPRE86IERyb3AgX2RhdGEsIF9yZW1vdmVEYXRhKVxuLy9cdDUuIEF2b2lkIGV4cG9zaW5nIGltcGxlbWVudGF0aW9uIGRldGFpbHMgb24gdXNlciBvYmplY3RzIChlZy4gZXhwYW5kbyBwcm9wZXJ0aWVzKVxuLy9cdDYuIFByb3ZpZGUgYSBjbGVhciBwYXRoIGZvciBpbXBsZW1lbnRhdGlvbiB1cGdyYWRlIHRvIFdlYWtNYXAgaW4gMjAxNFxuXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxuXHRybXVsdGlEYXNoID0gL1tBLVpdL2c7XG5cbmZ1bmN0aW9uIGdldERhdGEoIGRhdGEgKSB7XG5cdGlmICggZGF0YSA9PT0gXCJ0cnVlXCIgKSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwiZmFsc2VcIiApIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cblxuXHRpZiAoIGRhdGEgPT09IFwibnVsbFwiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmdcblx0aWYgKCBkYXRhID09PSArZGF0YSArIFwiXCIgKSB7XG5cdFx0cmV0dXJuICtkYXRhO1xuXHR9XG5cblx0aWYgKCByYnJhY2UudGVzdCggZGF0YSApICkge1xuXHRcdHJldHVybiBKU09OLnBhcnNlKCBkYXRhICk7XG5cdH1cblxuXHRyZXR1cm4gZGF0YTtcbn1cblxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcblx0dmFyIG5hbWU7XG5cblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxuXHQvLyBkYXRhIGZyb20gdGhlIEhUTUw1IGRhdGEtKiBhdHRyaWJ1dGVcblx0aWYgKCBkYXRhID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRuYW1lID0gXCJkYXRhLVwiICsga2V5LnJlcGxhY2UoIHJtdWx0aURhc2gsIFwiLSQmXCIgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdGRhdGEgPSBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSApO1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHRyeSB7XG5cdFx0XHRcdGRhdGEgPSBnZXREYXRhKCBkYXRhICk7XG5cdFx0XHR9IGNhdGNoICggZSApIHt9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB3ZSBzZXQgdGhlIGRhdGEgc28gaXQgaXNuJ3QgY2hhbmdlZCBsYXRlclxuXHRcdFx0ZGF0YVVzZXIuc2V0KCBlbGVtLCBrZXksIGRhdGEgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGRhdGE7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0aGFzRGF0YTogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmhhc0RhdGEoIGVsZW0gKSB8fCBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICk7XG5cdH0sXG5cblx0ZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFVc2VyLmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdHJlbW92ZURhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xuXHRcdGRhdGFVc2VyLnJlbW92ZSggZWxlbSwgbmFtZSApO1xuXHR9LFxuXG5cdC8vIFRPRE86IE5vdyB0aGF0IGFsbCBjYWxscyB0byBfZGF0YSBhbmQgX3JlbW92ZURhdGEgaGF2ZSBiZWVuIHJlcGxhY2VkXG5cdC8vIHdpdGggZGlyZWN0IGNhbGxzIHRvIGRhdGFQcml2IG1ldGhvZHMsIHRoZXNlIGNhbiBiZSBkZXByZWNhdGVkLlxuXHRfZGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGRhdGEgKSB7XG5cdFx0cmV0dXJuIGRhdGFQcml2LmFjY2VzcyggZWxlbSwgbmFtZSwgZGF0YSApO1xuXHR9LFxuXG5cdF9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGRhdGE6IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkge1xuXHRcdHZhciBpLCBuYW1lLCBkYXRhLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdGF0dHJzID0gZWxlbSAmJiBlbGVtLmF0dHJpYnV0ZXM7XG5cblx0XHQvLyBHZXRzIGFsbCB2YWx1ZXNcblx0XHRpZiAoIGtleSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB0aGlzLmxlbmd0aCApIHtcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSApO1xuXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAhZGF0YVByaXYuZ2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiICkgKSB7XG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgMTEgb25seVxuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXG5cdFx0XHRcdFx0XHRpZiAoIGF0dHJzWyBpIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG5hbWUgPSBhdHRyc1sgaSBdLm5hbWU7XG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcblx0XHRcdFx0XHRcdFx0XHRuYW1lID0gY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTtcblx0XHRcdFx0XHRcdFx0XHRkYXRhQXR0ciggZWxlbSwgbmFtZSwgZGF0YVsgbmFtZSBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImhhc0RhdGFBdHRyc1wiLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0cyBtdWx0aXBsZSB2YWx1ZXNcblx0XHRpZiAoIHR5cGVvZiBrZXkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHR2YXIgZGF0YTtcblxuXHRcdFx0Ly8gVGhlIGNhbGxpbmcgalF1ZXJ5IG9iamVjdCAoZWxlbWVudCBtYXRjaGVzKSBpcyBub3QgZW1wdHlcblx0XHRcdC8vIChhbmQgdGhlcmVmb3JlIGhhcyBhbiBlbGVtZW50IGFwcGVhcnMgYXQgdGhpc1sgMCBdKSBhbmQgdGhlXG5cdFx0XHQvLyBgdmFsdWVgIHBhcmFtZXRlciB3YXMgbm90IHVuZGVmaW5lZC4gQW4gZW1wdHkgalF1ZXJ5IG9iamVjdFxuXHRcdFx0Ly8gd2lsbCByZXN1bHQgaW4gYHVuZGVmaW5lZGAgZm9yIGVsZW0gPSB0aGlzWyAwIF0gd2hpY2ggd2lsbFxuXHRcdFx0Ly8gdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFuIGF0dGVtcHQgdG8gcmVhZCBhIGRhdGEgY2FjaGUgaXMgbWFkZS5cblx0XHRcdGlmICggZWxlbSAmJiB2YWx1ZSA9PT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gZ2V0IGRhdGEgZnJvbSB0aGUgY2FjaGVcblx0XHRcdFx0Ly8gVGhlIGtleSB3aWxsIGFsd2F5cyBiZSBjYW1lbENhc2VkIGluIERhdGFcblx0XHRcdFx0ZGF0YSA9IGRhdGFVc2VyLmdldCggZWxlbSwga2V5ICk7XG5cdFx0XHRcdGlmICggZGF0YSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXR0ZW1wdCB0byBcImRpc2NvdmVyXCIgdGhlIGRhdGEgaW5cblx0XHRcdFx0Ly8gSFRNTDUgY3VzdG9tIGRhdGEtKiBhdHRyc1xuXHRcdFx0XHRkYXRhID0gZGF0YUF0dHIoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFdlIHRyaWVkIHJlYWxseSBoYXJkLCBidXQgdGhlIGRhdGEgZG9lc24ndCBleGlzdC5cblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZXQgdGhlIGRhdGEuLi5cblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0Ly8gV2UgYWx3YXlzIHN0b3JlIHRoZSBjYW1lbENhc2VkIGtleVxuXHRcdFx0XHRkYXRhVXNlci5zZXQoIHRoaXMsIGtleSwgdmFsdWUgKTtcblx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEsIG51bGwsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0ZGF0YVVzZXIucmVtb3ZlKCB0aGlzLCBrZXkgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgcXVldWU7XG5cblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHR0eXBlID0gKCB0eXBlIHx8IFwiZnhcIiApICsgXCJxdWV1ZVwiO1xuXHRcdFx0cXVldWUgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIHR5cGUgKTtcblxuXHRcdFx0Ly8gU3BlZWQgdXAgZGVxdWV1ZSBieSBnZXR0aW5nIG91dCBxdWlja2x5IGlmIHRoaXMgaXMganVzdCBhIGxvb2t1cFxuXHRcdFx0aWYgKCBkYXRhICkge1xuXHRcdFx0XHRpZiAoICFxdWV1ZSB8fCBBcnJheS5pc0FycmF5KCBkYXRhICkgKSB7XG5cdFx0XHRcdFx0cXVldWUgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIHR5cGUsIGpRdWVyeS5tYWtlQXJyYXkoIGRhdGEgKSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xuXHRcdH1cblx0fSxcblxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIGVsZW0sIHR5cGUgKSxcblx0XHRcdHN0YXJ0TGVuZ3RoID0gcXVldWUubGVuZ3RoLFxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxuXHRcdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIHR5cGUgKSxcblx0XHRcdG5leHQgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcblx0XHRcdH07XG5cblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXG5cdFx0aWYgKCBmbiA9PT0gXCJpbnByb2dyZXNzXCIgKSB7XG5cdFx0XHRmbiA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRzdGFydExlbmd0aC0tO1xuXHRcdH1cblxuXHRcdGlmICggZm4gKSB7XG5cblx0XHRcdC8vIEFkZCBhIHByb2dyZXNzIHNlbnRpbmVsIHRvIHByZXZlbnQgdGhlIGZ4IHF1ZXVlIGZyb20gYmVpbmdcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcblx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICkge1xuXHRcdFx0XHRxdWV1ZS51bnNoaWZ0KCBcImlucHJvZ3Jlc3NcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDbGVhciB1cCB0aGUgbGFzdCBxdWV1ZSBzdG9wIGZ1bmN0aW9uXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdGZuLmNhbGwoIGVsZW0sIG5leHQsIGhvb2tzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhc3RhcnRMZW5ndGggJiYgaG9va3MgKSB7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlKCk7XG5cdFx0fVxuXHR9LFxuXG5cdC8vIE5vdCBwdWJsaWMgLSBnZW5lcmF0ZSBhIHF1ZXVlSG9va3Mgb2JqZWN0LCBvciByZXR1cm4gdGhlIGN1cnJlbnQgb25lXG5cdF9xdWV1ZUhvb2tzOiBmdW5jdGlvbiggZWxlbSwgdHlwZSApIHtcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xuXHRcdHJldHVybiBkYXRhUHJpdi5nZXQoIGVsZW0sIGtleSApIHx8IGRhdGFQcml2LmFjY2VzcyggZWxlbSwga2V5LCB7XG5cdFx0XHRlbXB0eTogalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICkuYWRkKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBbIHR5cGUgKyBcInF1ZXVlXCIsIGtleSBdICk7XG5cdFx0XHR9IClcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHNldHRlciA9IDI7XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZGF0YSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gXCJmeFwiO1xuXHRcdFx0c2V0dGVyLS07XG5cdFx0fVxuXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoIDwgc2V0dGVyICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHR0aGlzIDpcblx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSBhIGhvb2tzIGZvciB0aGlzIHF1ZXVlXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xuXG5cdFx0XHRcdGlmICggdHlwZSA9PT0gXCJmeFwiICYmIHF1ZXVlWyAwIF0gIT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0fSxcblx0ZGVxdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdH0gKTtcblx0fSxcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHR9LFxuXG5cdC8vIEdldCBhIHByb21pc2UgcmVzb2x2ZWQgd2hlbiBxdWV1ZXMgb2YgYSBjZXJ0YWluIHR5cGVcblx0Ly8gYXJlIGVtcHRpZWQgKGZ4IGlzIHRoZSB0eXBlIGJ5IGRlZmF1bHQpXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XG5cdFx0dmFyIHRtcCxcblx0XHRcdGNvdW50ID0gMSxcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRlbGVtZW50cyA9IHRoaXMsXG5cdFx0XHRpID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggISggLS1jb3VudCApICkge1xuXHRcdFx0XHRcdGRlZmVyLnJlc29sdmVXaXRoKCBlbGVtZW50cywgWyBlbGVtZW50cyBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0b2JqID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblxuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG1wID0gZGF0YVByaXYuZ2V0KCBlbGVtZW50c1sgaSBdLCB0eXBlICsgXCJxdWV1ZUhvb2tzXCIgKTtcblx0XHRcdGlmICggdG1wICYmIHRtcC5lbXB0eSApIHtcblx0XHRcdFx0Y291bnQrKztcblx0XHRcdFx0dG1wLmVtcHR5LmFkZCggcmVzb2x2ZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXNvbHZlKCk7XG5cdFx0cmV0dXJuIGRlZmVyLnByb21pc2UoIG9iaiApO1xuXHR9XG59ICk7XG52YXIgcG51bSA9ICggL1srLV0/KD86XFxkKlxcLnwpXFxkKyg/OltlRV1bKy1dP1xcZCt8KS8gKS5zb3VyY2U7XG5cbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcblxuXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XG5cbnZhciBkb2N1bWVudEVsZW1lbnQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cblxuXG5cdHZhciBpc0F0dGFjaGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblx0XHR9LFxuXHRcdGNvbXBvc2VkID0geyBjb21wb3NlZDogdHJ1ZSB9O1xuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSssIEVkZ2UgMTIgLSAxOCssIGlPUyAxMC4wIC0gMTAuMiBvbmx5XG5cdC8vIENoZWNrIGF0dGFjaG1lbnQgYWNyb3NzIHNoYWRvdyBET00gYm91bmRhcmllcyB3aGVuIHBvc3NpYmxlIChnaC0zNTA0KVxuXHQvLyBTdXBwb3J0OiBpT1MgMTAuMC0xMC4yIG9ubHlcblx0Ly8gRWFybHkgaU9TIDEwIHZlcnNpb25zIHN1cHBvcnQgYGF0dGFjaFNoYWRvd2AgYnV0IG5vdCBgZ2V0Um9vdE5vZGVgLFxuXHQvLyBsZWFkaW5nIHRvIGVycm9ycy4gV2UgbmVlZCB0byBjaGVjayBmb3IgYGdldFJvb3ROb2RlYC5cblx0aWYgKCBkb2N1bWVudEVsZW1lbnQuZ2V0Um9vdE5vZGUgKSB7XG5cdFx0aXNBdHRhY2hlZCA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRSb290Tm9kZSggY29tcG9zZWQgKSA9PT0gZWxlbS5vd25lckRvY3VtZW50O1xuXHRcdH07XG5cdH1cbnZhciBpc0hpZGRlbldpdGhpblRyZWUgPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XG5cblx0XHQvLyBpc0hpZGRlbldpdGhpblRyZWUgbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcblx0XHQvLyBpbiB0aGF0IGNhc2UsIGVsZW1lbnQgd2lsbCBiZSBzZWNvbmQgYXJndW1lbnRcblx0XHRlbGVtID0gZWwgfHwgZWxlbTtcblxuXHRcdC8vIElubGluZSBzdHlsZSB0cnVtcHMgYWxsXG5cdFx0cmV0dXJuIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJub25lXCIgfHxcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJlxuXG5cdFx0XHQvLyBPdGhlcndpc2UsIGNoZWNrIGNvbXB1dGVkIHN0eWxlXG5cdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NDMgLSA0NVxuXHRcdFx0Ly8gRGlzY29ubmVjdGVkIGVsZW1lbnRzIGNhbiBoYXZlIGNvbXB1dGVkIGRpc3BsYXk6IG5vbmUsIHNvIGZpcnN0IGNvbmZpcm0gdGhhdCBlbGVtIGlzXG5cdFx0XHQvLyBpbiB0aGUgZG9jdW1lbnQuXG5cdFx0XHRpc0F0dGFjaGVkKCBlbGVtICkgJiZcblxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCI7XG5cdH07XG5cbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrLCBhcmdzICkge1xuXHR2YXIgcmV0LCBuYW1lLFxuXHRcdG9sZCA9IHt9O1xuXG5cdC8vIFJlbWVtYmVyIHRoZSBvbGQgdmFsdWVzLCBhbmQgaW5zZXJ0IHRoZSBuZXcgb25lc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb3B0aW9uc1sgbmFtZSBdO1xuXHR9XG5cblx0cmV0ID0gY2FsbGJhY2suYXBwbHkoIGVsZW0sIGFyZ3MgfHwgW10gKTtcblxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xuXHRcdGVsZW0uc3R5bGVbIG5hbWUgXSA9IG9sZFsgbmFtZSBdO1xuXHR9XG5cblx0cmV0dXJuIHJldDtcbn07XG5cblxuXG5cbmZ1bmN0aW9uIGFkanVzdENTUyggZWxlbSwgcHJvcCwgdmFsdWVQYXJ0cywgdHdlZW4gKSB7XG5cdHZhciBhZGp1c3RlZCwgc2NhbGUsXG5cdFx0bWF4SXRlcmF0aW9ucyA9IDIwLFxuXHRcdGN1cnJlbnRWYWx1ZSA9IHR3ZWVuID9cblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gdHdlZW4uY3VyKCk7XG5cdFx0XHR9IDpcblx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgcHJvcCwgXCJcIiApO1xuXHRcdFx0fSxcblx0XHRpbml0aWFsID0gY3VycmVudFZhbHVlKCksXG5cdFx0dW5pdCA9IHZhbHVlUGFydHMgJiYgdmFsdWVQYXJ0c1sgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApLFxuXG5cdFx0Ly8gU3RhcnRpbmcgdmFsdWUgY29tcHV0YXRpb24gaXMgcmVxdWlyZWQgZm9yIHBvdGVudGlhbCB1bml0IG1pc21hdGNoZXNcblx0XHRpbml0aWFsSW5Vbml0ID0gZWxlbS5ub2RlVHlwZSAmJlxuXHRcdFx0KCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gfHwgdW5pdCAhPT0gXCJweFwiICYmICtpbml0aWFsICkgJiZcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XG5cblx0aWYgKCBpbml0aWFsSW5Vbml0ICYmIGluaXRpYWxJblVuaXRbIDMgXSAhPT0gdW5pdCApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggPD01NFxuXHRcdC8vIEhhbHZlIHRoZSBpdGVyYXRpb24gdGFyZ2V0IHZhbHVlIHRvIHByZXZlbnQgaW50ZXJmZXJlbmNlIGZyb20gQ1NTIHVwcGVyIGJvdW5kcyAoZ2gtMjE0NClcblx0XHRpbml0aWFsID0gaW5pdGlhbCAvIDI7XG5cblx0XHQvLyBUcnVzdCB1bml0cyByZXBvcnRlZCBieSBqUXVlcnkuY3NzXG5cdFx0dW5pdCA9IHVuaXQgfHwgaW5pdGlhbEluVW5pdFsgMyBdO1xuXG5cdFx0Ly8gSXRlcmF0aXZlbHkgYXBwcm94aW1hdGUgZnJvbSBhIG5vbnplcm8gc3RhcnRpbmcgcG9pbnRcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWwgfHwgMTtcblxuXHRcdHdoaWxlICggbWF4SXRlcmF0aW9ucy0tICkge1xuXG5cdFx0XHQvLyBFdmFsdWF0ZSBhbmQgdXBkYXRlIG91ciBiZXN0IGd1ZXNzIChkb3VibGluZyBndWVzc2VzIHRoYXQgemVybyBvdXQpLlxuXHRcdFx0Ly8gRmluaXNoIGlmIHRoZSBzY2FsZSBlcXVhbHMgb3IgY3Jvc3NlcyAxIChtYWtpbmcgdGhlIG9sZCpuZXcgcHJvZHVjdCBub24tcG9zaXRpdmUpLlxuXHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBpbml0aWFsSW5Vbml0ICsgdW5pdCApO1xuXHRcdFx0aWYgKCAoIDEgLSBzY2FsZSApICogKCAxIC0gKCBzY2FsZSA9IGN1cnJlbnRWYWx1ZSgpIC8gaW5pdGlhbCB8fCAwLjUgKSApIDw9IDAgKSB7XG5cdFx0XHRcdG1heEl0ZXJhdGlvbnMgPSAwO1xuXHRcdFx0fVxuXHRcdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgLyBzY2FsZTtcblxuXHRcdH1cblxuXHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0ICogMjtcblx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgd2UgdXBkYXRlIHRoZSB0d2VlbiBwcm9wZXJ0aWVzIGxhdGVyIG9uXG5cdFx0dmFsdWVQYXJ0cyA9IHZhbHVlUGFydHMgfHwgW107XG5cdH1cblxuXHRpZiAoIHZhbHVlUGFydHMgKSB7XG5cdFx0aW5pdGlhbEluVW5pdCA9ICtpbml0aWFsSW5Vbml0IHx8ICtpbml0aWFsIHx8IDA7XG5cblx0XHQvLyBBcHBseSByZWxhdGl2ZSBvZmZzZXQgKCs9Ly09KSBpZiBzcGVjaWZpZWRcblx0XHRhZGp1c3RlZCA9IHZhbHVlUGFydHNbIDEgXSA/XG5cdFx0XHRpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOlxuXHRcdFx0K3ZhbHVlUGFydHNbIDIgXTtcblx0XHRpZiAoIHR3ZWVuICkge1xuXHRcdFx0dHdlZW4udW5pdCA9IHVuaXQ7XG5cdFx0XHR0d2Vlbi5zdGFydCA9IGluaXRpYWxJblVuaXQ7XG5cdFx0XHR0d2Vlbi5lbmQgPSBhZGp1c3RlZDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIGFkanVzdGVkO1xufVxuXG5cbnZhciBkZWZhdWx0RGlzcGxheU1hcCA9IHt9O1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApIHtcblx0dmFyIHRlbXAsXG5cdFx0ZG9jID0gZWxlbS5vd25lckRvY3VtZW50LFxuXHRcdG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZSxcblx0XHRkaXNwbGF5ID0gZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF07XG5cblx0aWYgKCBkaXNwbGF5ICkge1xuXHRcdHJldHVybiBkaXNwbGF5O1xuXHR9XG5cblx0dGVtcCA9IGRvYy5ib2R5LmFwcGVuZENoaWxkKCBkb2MuY3JlYXRlRWxlbWVudCggbm9kZU5hbWUgKSApO1xuXHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggdGVtcCwgXCJkaXNwbGF5XCIgKTtcblxuXHR0ZW1wLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRlbXAgKTtcblxuXHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdGRpc3BsYXkgPSBcImJsb2NrXCI7XG5cdH1cblx0ZGVmYXVsdERpc3BsYXlNYXBbIG5vZGVOYW1lIF0gPSBkaXNwbGF5O1xuXG5cdHJldHVybiBkaXNwbGF5O1xufVxuXG5mdW5jdGlvbiBzaG93SGlkZSggZWxlbWVudHMsIHNob3cgKSB7XG5cdHZhciBkaXNwbGF5LCBlbGVtLFxuXHRcdHZhbHVlcyA9IFtdLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBlbGVtZW50cy5sZW5ndGg7XG5cblx0Ly8gRGV0ZXJtaW5lIG5ldyBkaXNwbGF5IHZhbHVlIGZvciBlbGVtZW50cyB0aGF0IG5lZWQgdG8gY2hhbmdlXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1lbnRzWyBpbmRleCBdO1xuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRjb250aW51ZTtcblx0XHR9XG5cblx0XHRkaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5O1xuXHRcdGlmICggc2hvdyApIHtcblxuXHRcdFx0Ly8gU2luY2Ugd2UgZm9yY2UgdmlzaWJpbGl0eSB1cG9uIGNhc2NhZGUtaGlkZGVuIGVsZW1lbnRzLCBhbiBpbW1lZGlhdGUgKGFuZCBzbG93KVxuXHRcdFx0Ly8gY2hlY2sgaXMgcmVxdWlyZWQgaW4gdGhpcyBmaXJzdCBsb29wIHVubGVzcyB3ZSBoYXZlIGEgbm9uZW1wdHkgZGlzcGxheSB2YWx1ZSAoZWl0aGVyXG5cdFx0XHQvLyBpbmxpbmUgb3IgYWJvdXQtdG8tYmUtcmVzdG9yZWQpXG5cdFx0XHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICkgfHwgbnVsbDtcblx0XHRcdFx0aWYgKCAhdmFsdWVzWyBpbmRleCBdICkge1xuXHRcdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdGlmICggZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIlwiICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBnZXREZWZhdWx0RGlzcGxheSggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRpZiAoIGRpc3BsYXkgIT09IFwibm9uZVwiICkge1xuXHRcdFx0XHR2YWx1ZXNbIGluZGV4IF0gPSBcIm5vbmVcIjtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB3aGF0IHdlJ3JlIG92ZXJ3cml0aW5nXG5cdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJkaXNwbGF5XCIsIGRpc3BsYXkgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBTZXQgdGhlIGRpc3BsYXkgb2YgdGhlIGVsZW1lbnRzIGluIGEgc2Vjb25kIGxvb3AgdG8gYXZvaWQgY29uc3RhbnQgcmVmbG93XG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0aWYgKCB2YWx1ZXNbIGluZGV4IF0gIT0gbnVsbCApIHtcblx0XHRcdGVsZW1lbnRzWyBpbmRleCBdLnN0eWxlLmRpc3BsYXkgPSB2YWx1ZXNbIGluZGV4IF07XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRzO1xufVxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHNob3c6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcywgdHJ1ZSApO1xuXHR9LFxuXHRoaWRlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMgKTtcblx0fSxcblx0dG9nZ2xlOiBmdW5jdGlvbiggc3RhdGUgKSB7XG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlID8gdGhpcy5zaG93KCkgOiB0aGlzLmhpZGUoKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggaXNIaWRkZW5XaXRoaW5UcmVlKCB0aGlzICkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmhpZGUoKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcbnZhciByY2hlY2thYmxlVHlwZSA9ICggL14oPzpjaGVja2JveHxyYWRpbykkL2kgKTtcblxudmFyIHJ0YWdOYW1lID0gKCAvPChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopL2kgKTtcblxudmFyIHJzY3JpcHRUeXBlID0gKCAvXiR8Xm1vZHVsZSR8XFwvKD86amF2YXxlY21hKXNjcmlwdC9pICk7XG5cblxuXG4vLyBXZSBoYXZlIHRvIGNsb3NlIHRoZXNlIHRhZ3MgdG8gc3VwcG9ydCBYSFRNTCAoIzEzMjAwKVxudmFyIHdyYXBNYXAgPSB7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0b3B0aW9uOiBbIDEsIFwiPHNlbGVjdCBtdWx0aXBsZT0nbXVsdGlwbGUnPlwiLCBcIjwvc2VsZWN0PlwiIF0sXG5cblx0Ly8gWEhUTUwgcGFyc2VycyBkbyBub3QgbWFnaWNhbGx5IGluc2VydCBlbGVtZW50cyBpbiB0aGVcblx0Ly8gc2FtZSB3YXkgdGhhdCB0YWcgc291cCBwYXJzZXJzIGRvLiBTbyB3ZSBjYW5ub3Qgc2hvcnRlblxuXHQvLyB0aGlzIGJ5IG9taXR0aW5nIDx0Ym9keT4gb3Igb3RoZXIgcmVxdWlyZWQgZWxlbWVudHMuXG5cdHRoZWFkOiBbIDEsIFwiPHRhYmxlPlwiLCBcIjwvdGFibGU+XCIgXSxcblx0Y29sOiBbIDIsIFwiPHRhYmxlPjxjb2xncm91cD5cIiwgXCI8L2NvbGdyb3VwPjwvdGFibGU+XCIgXSxcblx0dHI6IFsgMiwgXCI8dGFibGU+PHRib2R5PlwiLCBcIjwvdGJvZHk+PC90YWJsZT5cIiBdLFxuXHR0ZDogWyAzLCBcIjx0YWJsZT48dGJvZHk+PHRyPlwiLCBcIjwvdHI+PC90Ym9keT48L3RhYmxlPlwiIF0sXG5cblx0X2RlZmF1bHQ6IFsgMCwgXCJcIiwgXCJcIiBdXG59O1xuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxud3JhcE1hcC5vcHRncm91cCA9IHdyYXBNYXAub3B0aW9uO1xuXG53cmFwTWFwLnRib2R5ID0gd3JhcE1hcC50Zm9vdCA9IHdyYXBNYXAuY29sZ3JvdXAgPSB3cmFwTWFwLmNhcHRpb24gPSB3cmFwTWFwLnRoZWFkO1xud3JhcE1hcC50aCA9IHdyYXBNYXAudGQ7XG5cblxuZnVuY3Rpb24gZ2V0QWxsKCBjb250ZXh0LCB0YWcgKSB7XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHQvLyBVc2UgdHlwZW9mIHRvIGF2b2lkIHplcm8tYXJndW1lbnQgbWV0aG9kIGludm9jYXRpb24gb24gaG9zdCBvYmplY3RzICgjMTUxNTEpXG5cdHZhciByZXQ7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcblx0XHRyZXQgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2UgaWYgKCB0eXBlb2YgY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnIHx8IFwiKlwiICk7XG5cblx0fSBlbHNlIHtcblx0XHRyZXQgPSBbXTtcblx0fVxuXG5cdGlmICggdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIG5vZGVOYW1lKCBjb250ZXh0LCB0YWcgKSApIHtcblx0XHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbIGNvbnRleHQgXSwgcmV0ICk7XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufVxuXG5cbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxuZnVuY3Rpb24gc2V0R2xvYmFsRXZhbCggZWxlbXMsIHJlZkVsZW1lbnRzICkge1xuXHR2YXIgaSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZGF0YVByaXYuc2V0KFxuXHRcdFx0ZWxlbXNbIGkgXSxcblx0XHRcdFwiZ2xvYmFsRXZhbFwiLFxuXHRcdFx0IXJlZkVsZW1lbnRzIHx8IGRhdGFQcml2LmdldCggcmVmRWxlbWVudHNbIGkgXSwgXCJnbG9iYWxFdmFsXCIgKVxuXHRcdCk7XG5cdH1cbn1cblxuXG52YXIgcmh0bWwgPSAvPHwmIz9cXHcrOy87XG5cbmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7XG5cdHZhciBlbGVtLCB0bXAsIHRhZywgd3JhcCwgYXR0YWNoZWQsIGosXG5cdFx0ZnJhZ21lbnQgPSBjb250ZXh0LmNyZWF0ZURvY3VtZW50RnJhZ21lbnQoKSxcblx0XHRub2RlcyA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGwgPSBlbGVtcy5sZW5ndGg7XG5cblx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdGVsZW0gPSBlbGVtc1sgaSBdO1xuXG5cdFx0aWYgKCBlbGVtIHx8IGVsZW0gPT09IDAgKSB7XG5cblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxuXHRcdFx0aWYgKCB0b1R5cGUoIGVsZW0gKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCBlbGVtLm5vZGVUeXBlID8gWyBlbGVtIF0gOiBlbGVtICk7XG5cblx0XHRcdC8vIENvbnZlcnQgbm9uLWh0bWwgaW50byBhIHRleHQgbm9kZVxuXHRcdFx0fSBlbHNlIGlmICggIXJodG1sLnRlc3QoIGVsZW0gKSApIHtcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XG5cblx0XHRcdC8vIENvbnZlcnQgaHRtbCBpbnRvIERPTSBub2Rlc1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dG1wID0gdG1wIHx8IGZyYWdtZW50LmFwcGVuZENoaWxkKCBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xuXG5cdFx0XHRcdC8vIERlc2VyaWFsaXplIGEgc3RhbmRhcmQgcmVwcmVzZW50YXRpb25cblx0XHRcdFx0dGFnID0gKCBydGFnTmFtZS5leGVjKCBlbGVtICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRcdHdyYXAgPSB3cmFwTWFwWyB0YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0O1xuXHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgalF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIGVsZW0gKSArIHdyYXBbIDIgXTtcblxuXHRcdFx0XHQvLyBEZXNjZW5kIHRocm91Z2ggd3JhcHBlcnMgdG8gdGhlIHJpZ2h0IGNvbnRlbnRcblx0XHRcdFx0aiA9IHdyYXBbIDAgXTtcblx0XHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdFx0dG1wID0gdG1wLmxhc3RDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIHRtcC5jaGlsZE5vZGVzICk7XG5cblx0XHRcdFx0Ly8gUmVtZW1iZXIgdGhlIHRvcC1sZXZlbCBjb250YWluZXJcblx0XHRcdFx0dG1wID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdFx0XHQvLyBFbnN1cmUgdGhlIGNyZWF0ZWQgbm9kZXMgYXJlIG9ycGhhbmVkICgjMTIzOTIpXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gUmVtb3ZlIHdyYXBwZXIgZnJvbSBmcmFnbWVudFxuXHRmcmFnbWVudC50ZXh0Q29udGVudCA9IFwiXCI7XG5cblx0aSA9IDA7XG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XG5cblx0XHQvLyBTa2lwIGVsZW1lbnRzIGFscmVhZHkgaW4gdGhlIGNvbnRleHQgY29sbGVjdGlvbiAodHJhYy00MDg3KVxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xuXHRcdFx0aWYgKCBpZ25vcmVkICkge1xuXHRcdFx0XHRpZ25vcmVkLnB1c2goIGVsZW0gKTtcblx0XHRcdH1cblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGF0dGFjaGVkID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBhdHRhY2hlZCApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgb25seVxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHRkaXYuaW5uZXJIVE1MID0gXCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCI7XG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xufSApKCk7XG5cblxudmFyXG5cdHJrZXlFdmVudCA9IC9ea2V5Lyxcblx0cm1vdXNlRXZlbnQgPSAvXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sXG5cdHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExK1xuLy8gZm9jdXMoKSBhbmQgYmx1cigpIGFyZSBhc3luY2hyb25vdXMsIGV4Y2VwdCB3aGVuIHRoZXkgYXJlIG5vLW9wLlxuLy8gU28gZXhwZWN0IGZvY3VzIHRvIGJlIHN5bmNocm9ub3VzIHdoZW4gdGhlIGVsZW1lbnQgaXMgYWxyZWFkeSBhY3RpdmUsXG4vLyBhbmQgYmx1ciB0byBiZSBzeW5jaHJvbm91cyB3aGVuIHRoZSBlbGVtZW50IGlzIG5vdCBhbHJlYWR5IGFjdGl2ZS5cbi8vIChmb2N1cyBhbmQgYmx1ciBhcmUgYWx3YXlzIHN5bmNocm9ub3VzIGluIG90aGVyIHN1cHBvcnRlZCBicm93c2Vycyxcbi8vIHRoaXMganVzdCBkZWZpbmVzIHdoZW4gd2UgY2FuIGNvdW50IG9uIGl0KS5cbmZ1bmN0aW9uIGV4cGVjdFN5bmMoIGVsZW0sIHR5cGUgKSB7XG5cdHJldHVybiAoIGVsZW0gPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgKSA9PT0gKCB0eXBlID09PSBcImZvY3VzXCIgKTtcbn1cblxuLy8gU3VwcG9ydDogSUUgPD05IG9ubHlcbi8vIEFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGNhbiB0aHJvdyB1bmV4cGVjdGVkbHlcbi8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMzM5M1xuZnVuY3Rpb24gc2FmZUFjdGl2ZUVsZW1lbnQoKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XG5cdH0gY2F0Y2ggKCBlcnIgKSB7IH1cbn1cblxuZnVuY3Rpb24gb24oIGVsZW0sIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIG9uZSApIHtcblx0dmFyIG9yaWdGbiwgdHlwZTtcblxuXHQvLyBUeXBlcyBjYW4gYmUgYSBtYXAgb2YgdHlwZXMvaGFuZGxlcnNcblx0aWYgKCB0eXBlb2YgdHlwZXMgPT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHQvLyAoIHR5cGVzLU9iamVjdCwgc2VsZWN0b3IsIGRhdGEgKVxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLU9iamVjdCwgZGF0YSApXG5cdFx0XHRkYXRhID0gZGF0YSB8fCBzZWxlY3Rvcjtcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRmb3IgKCB0eXBlIGluIHR5cGVzICkge1xuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIGVsZW07XG5cdH1cblxuXHRpZiAoIGRhdGEgPT0gbnVsbCAmJiBmbiA9PSBudWxsICkge1xuXG5cdFx0Ly8gKCB0eXBlcywgZm4gKVxuXHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xuXHR9IGVsc2UgaWYgKCBmbiA9PSBudWxsICkge1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBzZWxlY3RvciwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXG5cdFx0XHRmbiA9IGRhdGE7XG5cdFx0XHRkYXRhID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdH1cblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0fSBlbHNlIGlmICggIWZuICkge1xuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBvbmUgPT09IDEgKSB7XG5cdFx0b3JpZ0ZuID0gZm47XG5cdFx0Zm4gPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cblx0XHRcdC8vIENhbiB1c2UgYW4gZW1wdHkgc2V0LCBzaW5jZSBldmVudCBjb250YWlucyB0aGUgaW5mb1xuXHRcdFx0alF1ZXJ5KCkub2ZmKCBldmVudCApO1xuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0fTtcblxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXG5cdFx0Zm4uZ3VpZCA9IG9yaWdGbi5ndWlkIHx8ICggb3JpZ0ZuLmd1aWQgPSBqUXVlcnkuZ3VpZCsrICk7XG5cdH1cblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgdHlwZXMsIGZuLCBkYXRhLCBzZWxlY3RvciApO1xuXHR9ICk7XG59XG5cbi8qXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXG4gKiBQcm9wcyB0byBEZWFuIEVkd2FyZHMnIGFkZEV2ZW50IGxpYnJhcnkgZm9yIG1hbnkgb2YgdGhlIGlkZWFzLlxuICovXG5qUXVlcnkuZXZlbnQgPSB7XG5cblx0Z2xvYmFsOiB7fSxcblxuXHRhZGQ6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgZGF0YSwgc2VsZWN0b3IgKSB7XG5cblx0XHR2YXIgaGFuZGxlT2JqSW4sIGV2ZW50SGFuZGxlLCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHQvLyBEb24ndCBhdHRhY2ggZXZlbnRzIHRvIG5vRGF0YSBvciB0ZXh0L2NvbW1lbnQgbm9kZXMgKGJ1dCBhbGxvdyBwbGFpbiBvYmplY3RzKVxuXHRcdGlmICggIWVsZW1EYXRhICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhbiBvYmplY3Qgb2YgY3VzdG9tIGRhdGEgaW4gbGlldSBvZiB0aGUgaGFuZGxlclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xuXHRcdFx0aGFuZGxlT2JqSW4gPSBoYW5kbGVyO1xuXHRcdFx0aGFuZGxlciA9IGhhbmRsZU9iakluLmhhbmRsZXI7XG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xuXHRcdH1cblxuXHRcdC8vIEVuc3VyZSB0aGF0IGludmFsaWQgc2VsZWN0b3JzIHRocm93IGV4Y2VwdGlvbnMgYXQgYXR0YWNoIHRpbWVcblx0XHQvLyBFdmFsdWF0ZSBhZ2FpbnN0IGRvY3VtZW50RWxlbWVudCBpbiBjYXNlIGVsZW0gaXMgYSBub24tZWxlbWVudCBub2RlIChlLmcuLCBkb2N1bWVudClcblx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBkb2N1bWVudEVsZW1lbnQsIHNlbGVjdG9yICk7XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgdGhlIGhhbmRsZXIgaGFzIGEgdW5pcXVlIElELCB1c2VkIHRvIGZpbmQvcmVtb3ZlIGl0IGxhdGVyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xuXHRcdFx0aGFuZGxlci5ndWlkID0galF1ZXJ5Lmd1aWQrKztcblx0XHR9XG5cblx0XHQvLyBJbml0IHRoZSBlbGVtZW50J3MgZXZlbnQgc3RydWN0dXJlIGFuZCBtYWluIGhhbmRsZXIsIGlmIHRoaXMgaXMgdGhlIGZpcnN0XG5cdFx0aWYgKCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IHt9O1xuXHRcdH1cblx0XHRpZiAoICEoIGV2ZW50SGFuZGxlID0gZWxlbURhdGEuaGFuZGxlICkgKSB7XG5cdFx0XHRldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSA9IGZ1bmN0aW9uKCBlICkge1xuXG5cdFx0XHRcdC8vIERpc2NhcmQgdGhlIHNlY29uZCBldmVudCBvZiBhIGpRdWVyeS5ldmVudC50cmlnZ2VyKCkgYW5kXG5cdFx0XHRcdC8vIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWRcblx0XHRcdFx0cmV0dXJuIHR5cGVvZiBqUXVlcnkgIT09IFwidW5kZWZpbmVkXCIgJiYgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCAhPT0gZS50eXBlID9cblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuZGlzcGF0Y2guYXBwbHkoIGVsZW0sIGFyZ3VtZW50cyApIDogdW5kZWZpbmVkO1xuXHRcdFx0fTtcblx0XHR9XG5cblx0XHQvLyBIYW5kbGUgbXVsdGlwbGUgZXZlbnRzIHNlcGFyYXRlZCBieSBhIHNwYWNlXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFRoZXJlICptdXN0KiBiZSBhIHR5cGUsIG5vIGF0dGFjaGluZyBuYW1lc3BhY2Utb25seSBoYW5kbGVyc1xuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGV2ZW50IGNoYW5nZXMgaXRzIHR5cGUsIHVzZSB0aGUgc3BlY2lhbCBldmVudCBoYW5kbGVycyBmb3IgdGhlIGNoYW5nZWQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIElmIHNlbGVjdG9yIGRlZmluZWQsIGRldGVybWluZSBzcGVjaWFsIGV2ZW50IGFwaSB0eXBlLCBvdGhlcndpc2UgZ2l2ZW4gdHlwZVxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXG5cdFx0XHQvLyBVcGRhdGUgc3BlY2lhbCBiYXNlZCBvbiBuZXdseSByZXNldCB0eXBlXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblxuXHRcdFx0Ly8gaGFuZGxlT2JqIGlzIHBhc3NlZCB0byBhbGwgZXZlbnQgaGFuZGxlcnNcblx0XHRcdGhhbmRsZU9iaiA9IGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0b3JpZ1R5cGU6IG9yaWdUeXBlLFxuXHRcdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0XHRoYW5kbGVyOiBoYW5kbGVyLFxuXHRcdFx0XHRndWlkOiBoYW5kbGVyLmd1aWQsXG5cdFx0XHRcdHNlbGVjdG9yOiBzZWxlY3Rvcixcblx0XHRcdFx0bmVlZHNDb250ZXh0OiBzZWxlY3RvciAmJiBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3IgKSxcblx0XHRcdFx0bmFtZXNwYWNlOiBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiIClcblx0XHRcdH0sIGhhbmRsZU9iakluICk7XG5cblx0XHRcdC8vIEluaXQgdGhlIGV2ZW50IGhhbmRsZXIgcXVldWUgaWYgd2UncmUgdGhlIGZpcnN0XG5cdFx0XHRpZiAoICEoIGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gKSApIHtcblx0XHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSA9IFtdO1xuXHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50ID0gMDtcblxuXHRcdFx0XHQvLyBPbmx5IHVzZSBhZGRFdmVudExpc3RlbmVyIGlmIHRoZSBzcGVjaWFsIGV2ZW50cyBoYW5kbGVyIHJldHVybnMgZmFsc2Vcblx0XHRcdFx0aWYgKCAhc3BlY2lhbC5zZXR1cCB8fFxuXHRcdFx0XHRcdHNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGVsZW0uYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdFx0XHRcdGVsZW0uYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgZXZlbnRIYW5kbGUgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBzcGVjaWFsLmFkZCApIHtcblx0XHRcdFx0c3BlY2lhbC5hZGQuY2FsbCggZWxlbSwgaGFuZGxlT2JqICk7XG5cblx0XHRcdFx0aWYgKCAhaGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlci5ndWlkID0gaGFuZGxlci5ndWlkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XG5cdFx0XHRpZiAoIHNlbGVjdG9yICkge1xuXHRcdFx0XHRoYW5kbGVycy5zcGxpY2UoIGhhbmRsZXJzLmRlbGVnYXRlQ291bnQrKywgMCwgaGFuZGxlT2JqICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRoYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gS2VlcCB0cmFjayBvZiB3aGljaCBldmVudHMgaGF2ZSBldmVyIGJlZW4gdXNlZCwgZm9yIGV2ZW50IG9wdGltaXphdGlvblxuXHRcdFx0alF1ZXJ5LmV2ZW50Lmdsb2JhbFsgdHlwZSBdID0gdHJ1ZTtcblx0XHR9XG5cblx0fSxcblxuXHQvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnRcblx0cmVtb3ZlOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIHNlbGVjdG9yLCBtYXBwZWRUeXBlcyApIHtcblxuXHRcdHZhciBqLCBvcmlnQ291bnQsIHRtcCxcblx0XHRcdGV2ZW50cywgdCwgaGFuZGxlT2JqLFxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsIG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxuXHRcdFx0ZWxlbURhdGEgPSBkYXRhUHJpdi5oYXNEYXRhKCBlbGVtICkgJiYgZGF0YVByaXYuZ2V0KCBlbGVtICk7XG5cblx0XHRpZiAoICFlbGVtRGF0YSB8fCAhKCBldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgKSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBPbmNlIGZvciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkXG5cdFx0dHlwZXMgPSAoIHR5cGVzIHx8IFwiXCIgKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XG5cdFx0d2hpbGUgKCB0LS0gKSB7XG5cdFx0XHR0bXAgPSBydHlwZW5hbWVzcGFjZS5leGVjKCB0eXBlc1sgdCBdICkgfHwgW107XG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcblx0XHRcdG5hbWVzcGFjZXMgPSAoIHRtcFsgMiBdIHx8IFwiXCIgKS5zcGxpdCggXCIuXCIgKS5zb3J0KCk7XG5cblx0XHRcdC8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudFxuXHRcdFx0aWYgKCAhdHlwZSApIHtcblx0XHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0Y29udGludWU7XG5cdFx0XHR9XG5cblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xuXHRcdFx0aGFuZGxlcnMgPSBldmVudHNbIHR5cGUgXSB8fCBbXTtcblx0XHRcdHRtcCA9IHRtcFsgMiBdICYmXG5cdFx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApO1xuXG5cdFx0XHQvLyBSZW1vdmUgbWF0Y2hpbmcgZXZlbnRzXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBqLS0gKSB7XG5cdFx0XHRcdGhhbmRsZU9iaiA9IGhhbmRsZXJzWyBqIF07XG5cblx0XHRcdFx0aWYgKCAoIG1hcHBlZFR5cGVzIHx8IG9yaWdUeXBlID09PSBoYW5kbGVPYmoub3JpZ1R5cGUgKSAmJlxuXHRcdFx0XHRcdCggIWhhbmRsZXIgfHwgaGFuZGxlci5ndWlkID09PSBoYW5kbGVPYmouZ3VpZCApICYmXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxuXHRcdFx0XHRcdCggIXNlbGVjdG9yIHx8IHNlbGVjdG9yID09PSBoYW5kbGVPYmouc2VsZWN0b3IgfHxcblx0XHRcdFx0XHRcdHNlbGVjdG9yID09PSBcIioqXCIgJiYgaGFuZGxlT2JqLnNlbGVjdG9yICkgKSB7XG5cdFx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7XG5cblx0XHRcdFx0XHRpZiAoIGhhbmRsZU9iai5zZWxlY3RvciApIHtcblx0XHRcdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBzcGVjaWFsLnJlbW92ZSApIHtcblx0XHRcdFx0XHRcdHNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZW1vdmUgZ2VuZXJpYyBldmVudCBoYW5kbGVyIGlmIHdlIHJlbW92ZWQgc29tZXRoaW5nIGFuZCBubyBtb3JlIGhhbmRsZXJzIGV4aXN0XG5cdFx0XHQvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycylcblx0XHRcdGlmICggb3JpZ0NvdW50ICYmICFoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRcdGlmICggIXNwZWNpYWwudGVhcmRvd24gfHxcblx0XHRcdFx0XHRzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcblxuXHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZWxlbURhdGEuaGFuZGxlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRkZWxldGUgZXZlbnRzWyB0eXBlIF07XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUmVtb3ZlIGRhdGEgYW5kIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWRcblx0XHRpZiAoIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBldmVudHMgKSApIHtcblx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJoYW5kbGUgZXZlbnRzXCIgKTtcblx0XHR9XG5cdH0sXG5cblx0ZGlzcGF0Y2g6IGZ1bmN0aW9uKCBuYXRpdmVFdmVudCApIHtcblxuXHRcdC8vIE1ha2UgYSB3cml0YWJsZSBqUXVlcnkuRXZlbnQgZnJvbSB0aGUgbmF0aXZlIGV2ZW50IG9iamVjdFxuXHRcdHZhciBldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIG5hdGl2ZUV2ZW50ICk7XG5cblx0XHR2YXIgaSwgaiwgcmV0LCBtYXRjaGVkLCBoYW5kbGVPYmosIGhhbmRsZXJRdWV1ZSxcblx0XHRcdGFyZ3MgPSBuZXcgQXJyYXkoIGFyZ3VtZW50cy5sZW5ndGggKSxcblx0XHRcdGhhbmRsZXJzID0gKCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gfHwgW10sXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGV2ZW50LnR5cGUgXSB8fCB7fTtcblxuXHRcdC8vIFVzZSB0aGUgZml4LWVkIGpRdWVyeS5FdmVudCByYXRoZXIgdGhhbiB0aGUgKHJlYWQtb25seSkgbmF0aXZlIGV2ZW50XG5cdFx0YXJnc1sgMCBdID0gZXZlbnQ7XG5cblx0XHRmb3IgKCBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdGFyZ3NbIGkgXSA9IGFyZ3VtZW50c1sgaSBdO1xuXHRcdH1cblxuXHRcdGV2ZW50LmRlbGVnYXRlVGFyZ2V0ID0gdGhpcztcblxuXHRcdC8vIENhbGwgdGhlIHByZURpc3BhdGNoIGhvb2sgZm9yIHRoZSBtYXBwZWQgdHlwZSwgYW5kIGxldCBpdCBiYWlsIGlmIGRlc2lyZWRcblx0XHRpZiAoIHNwZWNpYWwucHJlRGlzcGF0Y2ggJiYgc3BlY2lhbC5wcmVEaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcblx0XHRoYW5kbGVyUXVldWUgPSBqUXVlcnkuZXZlbnQuaGFuZGxlcnMuY2FsbCggdGhpcywgZXZlbnQsIGhhbmRsZXJzICk7XG5cblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBtYXRjaGVkID0gaGFuZGxlclF1ZXVlWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcblxuXHRcdFx0aiA9IDA7XG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxuXHRcdFx0XHQhZXZlbnQuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblxuXHRcdFx0XHQvLyBJZiB0aGUgZXZlbnQgaXMgbmFtZXNwYWNlZCwgdGhlbiBlYWNoIGhhbmRsZXIgaXMgb25seSBpbnZva2VkIGlmIGl0IGlzXG5cdFx0XHRcdC8vIHNwZWNpYWxseSB1bml2ZXJzYWwgb3IgaXRzIG5hbWVzcGFjZXMgYXJlIGEgc3VwZXJzZXQgb2YgdGhlIGV2ZW50J3MuXG5cdFx0XHRcdGlmICggIWV2ZW50LnJuYW1lc3BhY2UgfHwgaGFuZGxlT2JqLm5hbWVzcGFjZSA9PT0gZmFsc2UgfHxcblx0XHRcdFx0XHRldmVudC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHtcblxuXHRcdFx0XHRcdGV2ZW50LmhhbmRsZU9iaiA9IGhhbmRsZU9iajtcblx0XHRcdFx0XHRldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7XG5cblx0XHRcdFx0XHRyZXQgPSAoICggalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGhhbmRsZU9iai5vcmlnVHlwZSBdIHx8IHt9ICkuaGFuZGxlIHx8XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZXZlbnQucmVzdWx0ID0gcmV0ICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWxsIHRoZSBwb3N0RGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlXG5cdFx0aWYgKCBzcGVjaWFsLnBvc3REaXNwYXRjaCApIHtcblx0XHRcdHNwZWNpYWwucG9zdERpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHRoYW5kbGVyczogZnVuY3Rpb24oIGV2ZW50LCBoYW5kbGVycyApIHtcblx0XHR2YXIgaSwgaGFuZGxlT2JqLCBzZWwsIG1hdGNoZWRIYW5kbGVycywgbWF0Y2hlZFNlbGVjdG9ycyxcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBGaW5kIGRlbGVnYXRlIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50ICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OVxuXHRcdFx0Ly8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKHRyYWMtMTMxODApXG5cdFx0XHRjdXIubm9kZVR5cGUgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQyXG5cdFx0XHQvLyBTdXBwcmVzcyBzcGVjLXZpb2xhdGluZyBjbGlja3MgaW5kaWNhdGluZyBhIG5vbi1wcmltYXJ5IHBvaW50ZXIgYnV0dG9uICh0cmFjLTM4NjEpXG5cdFx0XHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudC10eXBlLWNsaWNrXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHQvLyAuLi5idXQgbm90IGFycm93IGtleSBcImNsaWNrc1wiIG9mIHJhZGlvIGlucHV0cywgd2hpY2ggY2FuIGhhdmUgYGJ1dHRvbmAgLTEgKGdoLTIzNDMpXG5cdFx0XHQhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgZXZlbnQuYnV0dG9uID49IDEgKSApIHtcblxuXHRcdFx0Zm9yICggOyBjdXIgIT09IHRoaXM7IGN1ciA9IGN1ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY2hlY2sgbm9uLWVsZW1lbnRzICgjMTMyMDgpXG5cdFx0XHRcdC8vIERvbid0IHByb2Nlc3MgY2xpY2tzIG9uIGRpc2FibGVkIGVsZW1lbnRzICgjNjkxMSwgIzgxNjUsICMxMTM4MiwgIzExNzY0KVxuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA9PT0gMSAmJiAhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgY3VyLmRpc2FibGVkID09PSB0cnVlICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9ycyA9IHt9O1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xuXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkSGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlZEhhbmRsZXJzIH0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0Y3VyID0gdGhpcztcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgPCBoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBoYW5kbGVycy5zbGljZSggZGVsZWdhdGVDb3VudCApIH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xuXHR9LFxuXG5cdGFkZFByb3A6IGZ1bmN0aW9uKCBuYW1lLCBob29rICkge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSwgbmFtZSwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblxuXHRcdFx0Z2V0OiBpc0Z1bmN0aW9uKCBob29rICkgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50WyBuYW1lIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7XG5cdFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRcdFx0d3JpdGFibGU6IHRydWUsXG5cdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Zml4OiBmdW5jdGlvbiggb3JpZ2luYWxFdmVudCApIHtcblx0XHRyZXR1cm4gb3JpZ2luYWxFdmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRvcmlnaW5hbEV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIG9yaWdpbmFsRXZlbnQgKTtcblx0fSxcblxuXHRzcGVjaWFsOiB7XG5cdFx0bG9hZDoge1xuXG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Y2xpY2s6IHtcblxuXHRcdFx0Ly8gVXRpbGl6ZSBuYXRpdmUgZXZlbnQgdG8gZW5zdXJlIGNvcnJlY3Qgc3RhdGUgZm9yIGNoZWNrYWJsZSBpbnB1dHNcblx0XHRcdHNldHVwOiBmdW5jdGlvbiggZGF0YSApIHtcblxuXHRcdFx0XHQvLyBGb3IgbXV0dWFsIGNvbXByZXNzaWJpbGl0eSB3aXRoIF9kZWZhdWx0LCByZXBsYWNlIGB0aGlzYCBhY2Nlc3Mgd2l0aCBhIGxvY2FsIHZhci5cblx0XHRcdFx0Ly8gYHx8IGRhdGFgIGlzIGRlYWQgY29kZSBtZWFudCBvbmx5IHRvIHByZXNlcnZlIHRoZSB2YXJpYWJsZSB0aHJvdWdoIG1pbmlmaWNhdGlvbi5cblx0XHRcdFx0dmFyIGVsID0gdGhpcyB8fCBkYXRhO1xuXG5cdFx0XHRcdC8vIENsYWltIHRoZSBmaXJzdCBoYW5kbGVyXG5cdFx0XHRcdGlmICggcmNoZWNrYWJsZVR5cGUudGVzdCggZWwudHlwZSApICYmXG5cdFx0XHRcdFx0ZWwuY2xpY2sgJiYgbm9kZU5hbWUoIGVsLCBcImlucHV0XCIgKSApIHtcblxuXHRcdFx0XHRcdC8vIGRhdGFQcml2LnNldCggZWwsIFwiY2xpY2tcIiwgLi4uIClcblx0XHRcdFx0XHRsZXZlcmFnZU5hdGl2ZSggZWwsIFwiY2xpY2tcIiwgcmV0dXJuVHJ1ZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmV0dXJuIGZhbHNlIHRvIGFsbG93IG5vcm1hbCBwcm9jZXNzaW5nIGluIHRoZSBjYWxsZXJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fSxcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCBkYXRhICkge1xuXG5cdFx0XHRcdC8vIEZvciBtdXR1YWwgY29tcHJlc3NpYmlsaXR5IHdpdGggX2RlZmF1bHQsIHJlcGxhY2UgYHRoaXNgIGFjY2VzcyB3aXRoIGEgbG9jYWwgdmFyLlxuXHRcdFx0XHQvLyBgfHwgZGF0YWAgaXMgZGVhZCBjb2RlIG1lYW50IG9ubHkgdG8gcHJlc2VydmUgdGhlIHZhcmlhYmxlIHRocm91Z2ggbWluaWZpY2F0aW9uLlxuXHRcdFx0XHR2YXIgZWwgPSB0aGlzIHx8IGRhdGE7XG5cblx0XHRcdFx0Ly8gRm9yY2Ugc2V0dXAgYmVmb3JlIHRyaWdnZXJpbmcgYSBjbGlja1xuXHRcdFx0XHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsLnR5cGUgKSAmJlxuXHRcdFx0XHRcdGVsLmNsaWNrICYmIG5vZGVOYW1lKCBlbCwgXCJpbnB1dFwiICkgKSB7XG5cblx0XHRcdFx0XHRsZXZlcmFnZU5hdGl2ZSggZWwsIFwiY2xpY2tcIiApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmV0dXJuIG5vbi1mYWxzZSB0byBhbGxvdyBub3JtYWwgZXZlbnQtcGF0aCBwcm9wYWdhdGlvblxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH0sXG5cblx0XHRcdC8vIEZvciBjcm9zcy1icm93c2VyIGNvbnNpc3RlbmN5LCBzdXBwcmVzcyBuYXRpdmUgLmNsaWNrKCkgb24gbGlua3Ncblx0XHRcdC8vIEFsc28gcHJldmVudCBpdCBpZiB3ZSdyZSBjdXJyZW50bHkgaW5zaWRlIGEgbGV2ZXJhZ2VkIG5hdGl2ZS1ldmVudCBzdGFja1xuXHRcdFx0X2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IGV2ZW50LnRhcmdldDtcblx0XHRcdFx0cmV0dXJuIHJjaGVja2FibGVUeXBlLnRlc3QoIHRhcmdldC50eXBlICkgJiZcblx0XHRcdFx0XHR0YXJnZXQuY2xpY2sgJiYgbm9kZU5hbWUoIHRhcmdldCwgXCJpbnB1dFwiICkgJiZcblx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRhcmdldCwgXCJjbGlja1wiICkgfHxcblx0XHRcdFx0XHRub2RlTmFtZSggdGFyZ2V0LCBcImFcIiApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRiZWZvcmV1bmxvYWQ6IHtcblx0XHRcdHBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggMjArXG5cdFx0XHRcdC8vIEZpcmVmb3ggZG9lc24ndCBhbGVydCBpZiB0aGUgcmV0dXJuVmFsdWUgZmllbGQgaXMgbm90IHNldC5cblx0XHRcdFx0aWYgKCBldmVudC5yZXN1bHQgIT09IHVuZGVmaW5lZCAmJiBldmVudC5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdGV2ZW50Lm9yaWdpbmFsRXZlbnQucmV0dXJuVmFsdWUgPSBldmVudC5yZXN1bHQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIEVuc3VyZSB0aGUgcHJlc2VuY2Ugb2YgYW4gZXZlbnQgbGlzdGVuZXIgdGhhdCBoYW5kbGVzIG1hbnVhbGx5LXRyaWdnZXJlZFxuLy8gc3ludGhldGljIGV2ZW50cyBieSBpbnRlcnJ1cHRpbmcgcHJvZ3Jlc3MgdW50aWwgcmVpbnZva2VkIGluIHJlc3BvbnNlIHRvXG4vLyAqbmF0aXZlKiBldmVudHMgdGhhdCBpdCBmaXJlcyBkaXJlY3RseSwgZW5zdXJpbmcgdGhhdCBzdGF0ZSBjaGFuZ2VzIGhhdmVcbi8vIGFscmVhZHkgb2NjdXJyZWQgYmVmb3JlIG90aGVyIGxpc3RlbmVycyBhcmUgaW52b2tlZC5cbmZ1bmN0aW9uIGxldmVyYWdlTmF0aXZlKCBlbCwgdHlwZSwgZXhwZWN0U3luYyApIHtcblxuXHQvLyBNaXNzaW5nIGV4cGVjdFN5bmMgaW5kaWNhdGVzIGEgdHJpZ2dlciBjYWxsLCB3aGljaCBtdXN0IGZvcmNlIHNldHVwIHRocm91Z2ggalF1ZXJ5LmV2ZW50LmFkZFxuXHRpZiAoICFleHBlY3RTeW5jICkge1xuXHRcdGlmICggZGF0YVByaXYuZ2V0KCBlbCwgdHlwZSApID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCBlbCwgdHlwZSwgcmV0dXJuVHJ1ZSApO1xuXHRcdH1cblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZWdpc3RlciB0aGUgY29udHJvbGxlciBhcyBhIHNwZWNpYWwgdW5pdmVyc2FsIGhhbmRsZXIgZm9yIGFsbCBldmVudCBuYW1lc3BhY2VzXG5cdGRhdGFQcml2LnNldCggZWwsIHR5cGUsIGZhbHNlICk7XG5cdGpRdWVyeS5ldmVudC5hZGQoIGVsLCB0eXBlLCB7XG5cdFx0bmFtZXNwYWNlOiBmYWxzZSxcblx0XHRoYW5kbGVyOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHR2YXIgbm90QXN5bmMsIHJlc3VsdCxcblx0XHRcdFx0c2F2ZWQgPSBkYXRhUHJpdi5nZXQoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0aWYgKCAoIGV2ZW50LmlzVHJpZ2dlciAmIDEgKSAmJiB0aGlzWyB0eXBlIF0gKSB7XG5cblx0XHRcdFx0Ly8gSW50ZXJydXB0IHByb2Nlc3Npbmcgb2YgdGhlIG91dGVyIHN5bnRoZXRpYyAudHJpZ2dlcigpZWQgZXZlbnRcblx0XHRcdFx0Ly8gU2F2ZWQgZGF0YSBzaG91bGQgYmUgZmFsc2UgaW4gc3VjaCBjYXNlcywgYnV0IG1pZ2h0IGJlIGEgbGVmdG92ZXIgY2FwdHVyZSBvYmplY3Rcblx0XHRcdFx0Ly8gZnJvbSBhbiBhc3luYyBuYXRpdmUgaGFuZGxlciAoZ2gtNDM1MClcblx0XHRcdFx0aWYgKCAhc2F2ZWQubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gU3RvcmUgYXJndW1lbnRzIGZvciB1c2Ugd2hlbiBoYW5kbGluZyB0aGUgaW5uZXIgbmF0aXZlIGV2ZW50XG5cdFx0XHRcdFx0Ly8gVGhlcmUgd2lsbCBhbHdheXMgYmUgYXQgbGVhc3Qgb25lIGFyZ3VtZW50IChhbiBldmVudCBvYmplY3QpLCBzbyB0aGlzIGFycmF5XG5cdFx0XHRcdFx0Ly8gd2lsbCBub3QgYmUgY29uZnVzZWQgd2l0aCBhIGxlZnRvdmVyIGNhcHR1cmUgb2JqZWN0LlxuXHRcdFx0XHRcdHNhdmVkID0gc2xpY2UuY2FsbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCBzYXZlZCApO1xuXG5cdFx0XHRcdFx0Ly8gVHJpZ2dlciB0aGUgbmF0aXZlIGV2ZW50IGFuZCBjYXB0dXJlIGl0cyByZXN1bHRcblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMStcblx0XHRcdFx0XHQvLyBmb2N1cygpIGFuZCBibHVyKCkgYXJlIGFzeW5jaHJvbm91c1xuXHRcdFx0XHRcdG5vdEFzeW5jID0gZXhwZWN0U3luYyggdGhpcywgdHlwZSApO1xuXHRcdFx0XHRcdHRoaXNbIHR5cGUgXSgpO1xuXHRcdFx0XHRcdHJlc3VsdCA9IGRhdGFQcml2LmdldCggdGhpcywgdHlwZSApO1xuXHRcdFx0XHRcdGlmICggc2F2ZWQgIT09IHJlc3VsdCB8fCBub3RBc3luYyApIHtcblx0XHRcdFx0XHRcdGRhdGFQcml2LnNldCggdGhpcywgdHlwZSwgZmFsc2UgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmVzdWx0ID0ge307XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc2F2ZWQgIT09IHJlc3VsdCApIHtcblxuXHRcdFx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSBvdXRlciBzeW50aGV0aWMgZXZlbnRcblx0XHRcdFx0XHRcdGV2ZW50LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpO1xuXHRcdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHQudmFsdWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoaXMgaXMgYW4gaW5uZXIgc3ludGhldGljIGV2ZW50IGZvciBhbiBldmVudCB3aXRoIGEgYnViYmxpbmcgc3Vycm9nYXRlXG5cdFx0XHRcdC8vIChmb2N1cyBvciBibHVyKSwgYXNzdW1lIHRoYXQgdGhlIHN1cnJvZ2F0ZSBhbHJlYWR5IHByb3BhZ2F0ZWQgZnJvbSB0cmlnZ2VyaW5nIHRoZVxuXHRcdFx0XHQvLyBuYXRpdmUgZXZlbnQgYW5kIHByZXZlbnQgdGhhdCBmcm9tIGhhcHBlbmluZyBhZ2FpbiBoZXJlLlxuXHRcdFx0XHQvLyBUaGlzIHRlY2huaWNhbGx5IGdldHMgdGhlIG9yZGVyaW5nIHdyb25nIHcuci50LiB0byBgLnRyaWdnZXIoKWAgKGluIHdoaWNoIHRoZVxuXHRcdFx0XHQvLyBidWJibGluZyBzdXJyb2dhdGUgcHJvcGFnYXRlcyAqYWZ0ZXIqIHRoZSBub24tYnViYmxpbmcgYmFzZSksIGJ1dCB0aGF0IHNlZW1zXG5cdFx0XHRcdC8vIGxlc3MgYmFkIHRoYW4gZHVwbGljYXRpb24uXG5cdFx0XHRcdH0gZWxzZSBpZiAoICggalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fSApLmRlbGVnYXRlVHlwZSApIHtcblx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgbmF0aXZlIGV2ZW50IHRyaWdnZXJlZCBhYm92ZSwgZXZlcnl0aGluZyBpcyBub3cgaW4gb3JkZXJcblx0XHRcdC8vIEZpcmUgYW4gaW5uZXIgc3ludGhldGljIGV2ZW50IHdpdGggdGhlIG9yaWdpbmFsIGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggc2F2ZWQubGVuZ3RoICkge1xuXG5cdFx0XHRcdC8vIC4uLmFuZCBjYXB0dXJlIHRoZSByZXN1bHRcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCB0eXBlLCB7XG5cdFx0XHRcdFx0dmFsdWU6IGpRdWVyeS5ldmVudC50cmlnZ2VyKFxuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMStcblx0XHRcdFx0XHRcdC8vIEV4dGVuZCB3aXRoIHRoZSBwcm90b3R5cGUgdG8gcmVzZXQgdGhlIGFib3ZlIHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpXG5cdFx0XHRcdFx0XHRqUXVlcnkuZXh0ZW5kKCBzYXZlZFsgMCBdLCBqUXVlcnkuRXZlbnQucHJvdG90eXBlICksXG5cdFx0XHRcdFx0XHRzYXZlZC5zbGljZSggMSApLFxuXHRcdFx0XHRcdFx0dGhpc1xuXHRcdFx0XHRcdClcblx0XHRcdFx0fSApO1xuXG5cdFx0XHRcdC8vIEFib3J0IGhhbmRsaW5nIG9mIHRoZSBuYXRpdmUgZXZlbnRcblx0XHRcdFx0ZXZlbnQuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9ICk7XG59XG5cbmpRdWVyeS5yZW1vdmVFdmVudCA9IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XG5cblx0Ly8gVGhpcyBcImlmXCIgaXMgbmVlZGVkIGZvciBwbGFpbiBvYmplY3RzXG5cdGlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkge1xuXHRcdGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgaGFuZGxlICk7XG5cdH1cbn07XG5cbmpRdWVyeS5FdmVudCA9IGZ1bmN0aW9uKCBzcmMsIHByb3BzICkge1xuXG5cdC8vIEFsbG93IGluc3RhbnRpYXRpb24gd2l0aG91dCB0aGUgJ25ldycga2V5d29yZFxuXHRpZiAoICEoIHRoaXMgaW5zdGFuY2VvZiBqUXVlcnkuRXZlbnQgKSApIHtcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gRXZlbnQgb2JqZWN0XG5cdGlmICggc3JjICYmIHNyYy50eXBlICkge1xuXHRcdHRoaXMub3JpZ2luYWxFdmVudCA9IHNyYztcblx0XHR0aGlzLnR5cGUgPSBzcmMudHlwZTtcblxuXHRcdC8vIEV2ZW50cyBidWJibGluZyB1cCB0aGUgZG9jdW1lbnQgbWF5IGhhdmUgYmVlbiBtYXJrZWQgYXMgcHJldmVudGVkXG5cdFx0Ly8gYnkgYSBoYW5kbGVyIGxvd2VyIGRvd24gdGhlIHRyZWU7IHJlZmxlY3QgdGhlIGNvcnJlY3QgdmFsdWUuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSBzcmMuZGVmYXVsdFByZXZlbnRlZCB8fFxuXHRcdFx0XHRzcmMuZGVmYXVsdFByZXZlbnRlZCA9PT0gdW5kZWZpbmVkICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTIuMyBvbmx5XG5cdFx0XHRcdHNyYy5yZXR1cm5WYWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0cmV0dXJuVHJ1ZSA6XG5cdFx0XHRyZXR1cm5GYWxzZTtcblxuXHRcdC8vIENyZWF0ZSB0YXJnZXQgcHJvcGVydGllc1xuXHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA8PTYgLSA3IG9ubHlcblx0XHQvLyBUYXJnZXQgc2hvdWxkIG5vdCBiZSBhIHRleHQgbm9kZSAoIzUwNCwgIzEzMTQzKVxuXHRcdHRoaXMudGFyZ2V0ID0gKCBzcmMudGFyZ2V0ICYmIHNyYy50YXJnZXQubm9kZVR5cGUgPT09IDMgKSA/XG5cdFx0XHRzcmMudGFyZ2V0LnBhcmVudE5vZGUgOlxuXHRcdFx0c3JjLnRhcmdldDtcblxuXHRcdHRoaXMuY3VycmVudFRhcmdldCA9IHNyYy5jdXJyZW50VGFyZ2V0O1xuXHRcdHRoaXMucmVsYXRlZFRhcmdldCA9IHNyYy5yZWxhdGVkVGFyZ2V0O1xuXG5cdC8vIEV2ZW50IHR5cGVcblx0fSBlbHNlIHtcblx0XHR0aGlzLnR5cGUgPSBzcmM7XG5cdH1cblxuXHQvLyBQdXQgZXhwbGljaXRseSBwcm92aWRlZCBwcm9wZXJ0aWVzIG9udG8gdGhlIGV2ZW50IG9iamVjdFxuXHRpZiAoIHByb3BzICkge1xuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XG5cdH1cblxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxuXHR0aGlzLnRpbWVTdGFtcCA9IHNyYyAmJiBzcmMudGltZVN0YW1wIHx8IERhdGUubm93KCk7XG5cblx0Ly8gTWFyayBpdCBhcyBmaXhlZFxuXHR0aGlzWyBqUXVlcnkuZXhwYW5kbyBdID0gdHJ1ZTtcbn07XG5cbi8vIGpRdWVyeS5FdmVudCBpcyBiYXNlZCBvbiBET00zIEV2ZW50cyBhcyBzcGVjaWZpZWQgYnkgdGhlIEVDTUFTY3JpcHQgTGFuZ3VhZ2UgQmluZGluZ1xuLy8gaHR0cHM6Ly93d3cudzMub3JnL1RSLzIwMDMvV0QtRE9NLUxldmVsLTMtRXZlbnRzLTIwMDMwMzMxL2VjbWEtc2NyaXB0LWJpbmRpbmcuaHRtbFxualF1ZXJ5LkV2ZW50LnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IGpRdWVyeS5FdmVudCxcblx0aXNEZWZhdWx0UHJldmVudGVkOiByZXR1cm5GYWxzZSxcblx0aXNQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXG5cdGlzU2ltdWxhdGVkOiBmYWxzZSxcblxuXHRwcmV2ZW50RGVmYXVsdDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnByZXZlbnREZWZhdWx0KCk7XG5cdFx0fVxuXHR9LFxuXHRzdG9wUHJvcGFnYXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc1Byb3BhZ2F0aW9uU3RvcHBlZCA9IHJldHVyblRydWU7XG5cblx0XHRpZiAoIGUgJiYgIXRoaXMuaXNTaW11bGF0ZWQgKSB7XG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHRcdH1cblx0fSxcblx0c3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cblx0XHR0aGlzLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9XG59O1xuXG4vLyBJbmNsdWRlcyBhbGwgY29tbW9uIGV2ZW50IHByb3BzIGluY2x1ZGluZyBLZXlFdmVudCBhbmQgTW91c2VFdmVudCBzcGVjaWZpYyBwcm9wc1xualF1ZXJ5LmVhY2goIHtcblx0YWx0S2V5OiB0cnVlLFxuXHRidWJibGVzOiB0cnVlLFxuXHRjYW5jZWxhYmxlOiB0cnVlLFxuXHRjaGFuZ2VkVG91Y2hlczogdHJ1ZSxcblx0Y3RybEtleTogdHJ1ZSxcblx0ZGV0YWlsOiB0cnVlLFxuXHRldmVudFBoYXNlOiB0cnVlLFxuXHRtZXRhS2V5OiB0cnVlLFxuXHRwYWdlWDogdHJ1ZSxcblx0cGFnZVk6IHRydWUsXG5cdHNoaWZ0S2V5OiB0cnVlLFxuXHR2aWV3OiB0cnVlLFxuXHRcImNoYXJcIjogdHJ1ZSxcblx0Y29kZTogdHJ1ZSxcblx0Y2hhckNvZGU6IHRydWUsXG5cdGtleTogdHJ1ZSxcblx0a2V5Q29kZTogdHJ1ZSxcblx0YnV0dG9uOiB0cnVlLFxuXHRidXR0b25zOiB0cnVlLFxuXHRjbGllbnRYOiB0cnVlLFxuXHRjbGllbnRZOiB0cnVlLFxuXHRvZmZzZXRYOiB0cnVlLFxuXHRvZmZzZXRZOiB0cnVlLFxuXHRwb2ludGVySWQ6IHRydWUsXG5cdHBvaW50ZXJUeXBlOiB0cnVlLFxuXHRzY3JlZW5YOiB0cnVlLFxuXHRzY3JlZW5ZOiB0cnVlLFxuXHR0YXJnZXRUb3VjaGVzOiB0cnVlLFxuXHR0b0VsZW1lbnQ6IHRydWUsXG5cdHRvdWNoZXM6IHRydWUsXG5cblx0d2hpY2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHR2YXIgYnV0dG9uID0gZXZlbnQuYnV0dG9uO1xuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBrZXkgZXZlbnRzXG5cdFx0aWYgKCBldmVudC53aGljaCA9PSBudWxsICYmIHJrZXlFdmVudC50ZXN0KCBldmVudC50eXBlICkgKSB7XG5cdFx0XHRyZXR1cm4gZXZlbnQuY2hhckNvZGUgIT0gbnVsbCA/IGV2ZW50LmNoYXJDb2RlIDogZXZlbnQua2V5Q29kZTtcblx0XHR9XG5cblx0XHQvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0XG5cdFx0aWYgKCAhZXZlbnQud2hpY2ggJiYgYnV0dG9uICE9PSB1bmRlZmluZWQgJiYgcm1vdXNlRXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0aWYgKCBidXR0b24gJiAxICkge1xuXHRcdFx0XHRyZXR1cm4gMTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBidXR0b24gJiAyICkge1xuXHRcdFx0XHRyZXR1cm4gMztcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBidXR0b24gJiA0ICkge1xuXHRcdFx0XHRyZXR1cm4gMjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LndoaWNoO1xuXHR9XG59LCBqUXVlcnkuZXZlbnQuYWRkUHJvcCApO1xuXG5qUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggdHlwZSwgZGVsZWdhdGVUeXBlICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdID0ge1xuXG5cdFx0Ly8gVXRpbGl6ZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0c2V0dXA6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBDbGFpbSB0aGUgZmlyc3QgaGFuZGxlclxuXHRcdFx0Ly8gZGF0YVByaXYuc2V0KCB0aGlzLCBcImZvY3VzXCIsIC4uLiApXG5cdFx0XHQvLyBkYXRhUHJpdi5zZXQoIHRoaXMsIFwiYmx1clwiLCAuLi4gKVxuXHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUsIGV4cGVjdFN5bmMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIGZhbHNlIHRvIGFsbG93IG5vcm1hbCBwcm9jZXNzaW5nIGluIHRoZSBjYWxsZXJcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBGb3JjZSBzZXR1cCBiZWZvcmUgdHJpZ2dlclxuXHRcdFx0bGV2ZXJhZ2VOYXRpdmUoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIG5vbi1mYWxzZSB0byBhbGxvdyBub3JtYWwgZXZlbnQtcGF0aCBwcm9wYWdhdGlvblxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdGRlbGVnYXRlVHlwZTogZGVsZWdhdGVUeXBlXG5cdH07XG59ICk7XG5cbi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrc1xuLy8gc28gdGhhdCBldmVudCBkZWxlZ2F0aW9uIHdvcmtzIGluIGpRdWVyeS5cbi8vIERvIHRoZSBzYW1lIGZvciBwb2ludGVyZW50ZXIvcG9pbnRlcmxlYXZlIGFuZCBwb2ludGVyb3Zlci9wb2ludGVyb3V0XG4vL1xuLy8gU3VwcG9ydDogU2FmYXJpIDcgb25seVxuLy8gU2FmYXJpIHNlbmRzIG1vdXNlZW50ZXIgdG9vIG9mdGVuOyBzZWU6XG4vLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NzAyNThcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXG5qUXVlcnkuZWFjaCgge1xuXHRtb3VzZWVudGVyOiBcIm1vdXNlb3ZlclwiLFxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXG5cdHBvaW50ZXJlbnRlcjogXCJwb2ludGVyb3ZlclwiLFxuXHRwb2ludGVybGVhdmU6IFwicG9pbnRlcm91dFwiXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgb3JpZyBdID0ge1xuXHRcdGRlbGVnYXRlVHlwZTogZml4LFxuXHRcdGJpbmRUeXBlOiBmaXgsXG5cblx0XHRoYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHtcblx0XHRcdHZhciByZXQsXG5cdFx0XHRcdHRhcmdldCA9IHRoaXMsXG5cdFx0XHRcdHJlbGF0ZWQgPSBldmVudC5yZWxhdGVkVGFyZ2V0LFxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XG5cblx0XHRcdC8vIEZvciBtb3VzZWVudGVyL2xlYXZlIGNhbGwgdGhlIGhhbmRsZXIgaWYgcmVsYXRlZCBpcyBvdXRzaWRlIHRoZSB0YXJnZXQuXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xuXHRcdFx0aWYgKCAhcmVsYXRlZCB8fCAoIHJlbGF0ZWQgIT09IHRhcmdldCAmJiAhalF1ZXJ5LmNvbnRhaW5zKCB0YXJnZXQsIHJlbGF0ZWQgKSApICkge1xuXHRcdFx0XHRldmVudC50eXBlID0gaGFuZGxlT2JqLm9yaWdUeXBlO1xuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBmaXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdG9uOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4gKTtcblx0fSxcblx0b25lOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gb24oIHRoaXMsIHR5cGVzLCBzZWxlY3RvciwgZGF0YSwgZm4sIDEgKTtcblx0fSxcblx0b2ZmOiBmdW5jdGlvbiggdHlwZXMsIHNlbGVjdG9yLCBmbiApIHtcblx0XHR2YXIgaGFuZGxlT2JqLCB0eXBlO1xuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xuXG5cdFx0XHQvLyAoIGV2ZW50ICkgIGRpc3BhdGNoZWQgalF1ZXJ5LkV2ZW50XG5cdFx0XHRoYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7XG5cdFx0XHRqUXVlcnkoIHR5cGVzLmRlbGVnYXRlVGFyZ2V0ICkub2ZmKFxuXHRcdFx0XHRoYW5kbGVPYmoubmFtZXNwYWNlID9cblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUgKyBcIi5cIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOlxuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSxcblx0XHRcdFx0aGFuZGxlT2JqLnNlbGVjdG9yLFxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxuXHRcdFx0KTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0XHRpZiAoIHR5cGVvZiB0eXBlcyA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdIClcblx0XHRcdGZvciAoIHR5cGUgaW4gdHlwZXMgKSB7XG5cdFx0XHRcdHRoaXMub2ZmKCB0eXBlLCBzZWxlY3RvciwgdHlwZXNbIHR5cGUgXSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggc2VsZWN0b3IgPT09IGZhbHNlIHx8IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzIFssIGZuXSApXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdFx0Zm4gPSByZXR1cm5GYWxzZTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCB0eXBlcywgZm4sIHNlbGVjdG9yICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxudmFyXG5cblx0LyogZXNsaW50LWRpc2FibGUgbWF4LWxlbiAqL1xuXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vZXNsaW50L2VzbGludC9pc3N1ZXMvMzIyOVxuXHRyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbYS16XVteXFwvXFwwPlxceDIwXFx0XFxyXFxuXFxmXSopW14+XSopXFwvPi9naSxcblxuXHQvKiBlc2xpbnQtZW5hYmxlICovXG5cblx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExLCBFZGdlIDEyIC0gMTMgb25seVxuXHQvLyBJbiBJRS9FZGdlIHVzaW5nIHJlZ2V4IGdyb3VwcyBoZXJlIGNhdXNlcyBzZXZlcmUgc2xvd2Rvd25zLlxuXHQvLyBTZWUgaHR0cHM6Ly9jb25uZWN0Lm1pY3Jvc29mdC5jb20vSUUvZmVlZGJhY2svZGV0YWlscy8xNzM2NTEyL1xuXHRybm9Jbm5lcmh0bWwgPSAvPHNjcmlwdHw8c3R5bGV8PGxpbmsvaSxcblxuXHQvLyBjaGVja2VkPVwiY2hlY2tlZFwiIG9yIGNoZWNrZWRcblx0cmNoZWNrZWQgPSAvY2hlY2tlZFxccyooPzpbXj1dfD1cXHMqLmNoZWNrZWQuKS9pLFxuXHRyY2xlYW5TY3JpcHQgPSAvXlxccyo8ISg/OlxcW0NEQVRBXFxbfC0tKXwoPzpcXF1cXF18LS0pPlxccyokL2c7XG5cbi8vIFByZWZlciBhIHRib2R5IG92ZXIgaXRzIHBhcmVudCB0YWJsZSBmb3IgY29udGFpbmluZyBuZXcgcm93c1xuZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkge1xuXHRpZiAoIG5vZGVOYW1lKCBlbGVtLCBcInRhYmxlXCIgKSAmJlxuXHRcdG5vZGVOYW1lKCBjb250ZW50Lm5vZGVUeXBlICE9PSAxMSA/IGNvbnRlbnQgOiBjb250ZW50LmZpcnN0Q2hpbGQsIFwidHJcIiApICkge1xuXG5cdFx0cmV0dXJuIGpRdWVyeSggZWxlbSApLmNoaWxkcmVuKCBcInRib2R5XCIgKVsgMCBdIHx8IGVsZW07XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxuZnVuY3Rpb24gZGlzYWJsZVNjcmlwdCggZWxlbSApIHtcblx0ZWxlbS50eXBlID0gKCBlbGVtLmdldEF0dHJpYnV0ZSggXCJ0eXBlXCIgKSAhPT0gbnVsbCApICsgXCIvXCIgKyBlbGVtLnR5cGU7XG5cdHJldHVybiBlbGVtO1xufVxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcblx0aWYgKCAoIGVsZW0udHlwZSB8fCBcIlwiICkuc2xpY2UoIDAsIDUgKSA9PT0gXCJ0cnVlL1wiICkge1xuXHRcdGVsZW0udHlwZSA9IGVsZW0udHlwZS5zbGljZSggNSApO1xuXHR9IGVsc2Uge1xuXHRcdGVsZW0ucmVtb3ZlQXR0cmlidXRlKCBcInR5cGVcIiApO1xuXHR9XG5cblx0cmV0dXJuIGVsZW07XG59XG5cbmZ1bmN0aW9uIGNsb25lQ29weUV2ZW50KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBpLCBsLCB0eXBlLCBwZGF0YU9sZCwgcGRhdGFDdXIsIHVkYXRhT2xkLCB1ZGF0YUN1ciwgZXZlbnRzO1xuXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyAxLiBDb3B5IHByaXZhdGUgZGF0YTogZXZlbnRzLCBoYW5kbGVycywgZXRjLlxuXHRpZiAoIGRhdGFQcml2Lmhhc0RhdGEoIHNyYyApICkge1xuXHRcdHBkYXRhT2xkID0gZGF0YVByaXYuYWNjZXNzKCBzcmMgKTtcblx0XHRwZGF0YUN1ciA9IGRhdGFQcml2LnNldCggZGVzdCwgcGRhdGFPbGQgKTtcblx0XHRldmVudHMgPSBwZGF0YU9sZC5ldmVudHM7XG5cblx0XHRpZiAoIGV2ZW50cyApIHtcblx0XHRcdGRlbGV0ZSBwZGF0YUN1ci5oYW5kbGU7XG5cdFx0XHRwZGF0YUN1ci5ldmVudHMgPSB7fTtcblxuXHRcdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIDIuIENvcHkgdXNlciBkYXRhXG5cdGlmICggZGF0YVVzZXIuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0dWRhdGFPbGQgPSBkYXRhVXNlci5hY2Nlc3MoIHNyYyApO1xuXHRcdHVkYXRhQ3VyID0galF1ZXJ5LmV4dGVuZCgge30sIHVkYXRhT2xkICk7XG5cblx0XHRkYXRhVXNlci5zZXQoIGRlc3QsIHVkYXRhQ3VyICk7XG5cdH1cbn1cblxuLy8gRml4IElFIGJ1Z3MsIHNlZSBzdXBwb3J0IHRlc3RzXG5mdW5jdGlvbiBmaXhJbnB1dCggc3JjLCBkZXN0ICkge1xuXHR2YXIgbm9kZU5hbWUgPSBkZXN0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0Ly8gRmFpbHMgdG8gcGVyc2lzdCB0aGUgY2hlY2tlZCBzdGF0ZSBvZiBhIGNsb25lZCBjaGVja2JveCBvciByYWRpbyBidXR0b24uXG5cdGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiByY2hlY2thYmxlVHlwZS50ZXN0KCBzcmMudHlwZSApICkge1xuXHRcdGRlc3QuY2hlY2tlZCA9IHNyYy5jaGVja2VkO1xuXG5cdC8vIEZhaWxzIHRvIHJldHVybiB0aGUgc2VsZWN0ZWQgb3B0aW9uIHRvIHRoZSBkZWZhdWx0IHNlbGVjdGVkIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgfHwgbm9kZU5hbWUgPT09IFwidGV4dGFyZWFcIiApIHtcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XG5cdH1cbn1cblxuZnVuY3Rpb24gZG9tTWFuaXAoIGNvbGxlY3Rpb24sIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICkge1xuXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0YXJncyA9IGNvbmNhdC5hcHBseSggW10sIGFyZ3MgKTtcblxuXHR2YXIgZnJhZ21lbnQsIGZpcnN0LCBzY3JpcHRzLCBoYXNTY3JpcHRzLCBub2RlLCBkb2MsXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGNvbGxlY3Rpb24ubGVuZ3RoLFxuXHRcdGlOb0Nsb25lID0gbCAtIDEsXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHQvLyBXZSBjYW4ndCBjbG9uZU5vZGUgZnJhZ21lbnRzIHRoYXQgY29udGFpbiBjaGVja2VkLCBpbiBXZWJLaXRcblx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gfHxcblx0XHRcdCggbCA+IDEgJiYgdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xuXHRcdHJldHVybiBjb2xsZWN0aW9uLmVhY2goIGZ1bmN0aW9uKCBpbmRleCApIHtcblx0XHRcdHZhciBzZWxmID0gY29sbGVjdGlvbi5lcSggaW5kZXggKTtcblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHRhcmdzWyAwIF0gPSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTtcblx0XHRcdH1cblx0XHRcdGRvbU1hbmlwKCBzZWxmLCBhcmdzLCBjYWxsYmFjaywgaWdub3JlZCApO1xuXHRcdH0gKTtcblx0fVxuXG5cdGlmICggbCApIHtcblx0XHRmcmFnbWVudCA9IGJ1aWxkRnJhZ21lbnQoIGFyZ3MsIGNvbGxlY3Rpb25bIDAgXS5vd25lckRvY3VtZW50LCBmYWxzZSwgY29sbGVjdGlvbiwgaWdub3JlZCApO1xuXHRcdGZpcnN0ID0gZnJhZ21lbnQuZmlyc3RDaGlsZDtcblxuXHRcdGlmICggZnJhZ21lbnQuY2hpbGROb2Rlcy5sZW5ndGggPT09IDEgKSB7XG5cdFx0XHRmcmFnbWVudCA9IGZpcnN0O1xuXHRcdH1cblxuXHRcdC8vIFJlcXVpcmUgZWl0aGVyIG5ldyBjb250ZW50IG9yIGFuIGludGVyZXN0IGluIGlnbm9yZWQgZWxlbWVudHMgdG8gaW52b2tlIHRoZSBjYWxsYmFja1xuXHRcdGlmICggZmlyc3QgfHwgaWdub3JlZCApIHtcblx0XHRcdHNjcmlwdHMgPSBqUXVlcnkubWFwKCBnZXRBbGwoIGZyYWdtZW50LCBcInNjcmlwdFwiICksIGRpc2FibGVTY3JpcHQgKTtcblx0XHRcdGhhc1NjcmlwdHMgPSBzY3JpcHRzLmxlbmd0aDtcblxuXHRcdFx0Ly8gVXNlIHRoZSBvcmlnaW5hbCBmcmFnbWVudCBmb3IgdGhlIGxhc3QgaXRlbVxuXHRcdFx0Ly8gaW5zdGVhZCBvZiB0aGUgZmlyc3QgYmVjYXVzZSBpdCBjYW4gZW5kIHVwXG5cdFx0XHQvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0aW9ucyAoIzgwNzApLlxuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRub2RlID0gZnJhZ21lbnQ7XG5cblx0XHRcdFx0aWYgKCBpICE9PSBpTm9DbG9uZSApIHtcblx0XHRcdFx0XHRub2RlID0galF1ZXJ5LmNsb25lKCBub2RlLCB0cnVlLCB0cnVlICk7XG5cblx0XHRcdFx0XHQvLyBLZWVwIHJlZmVyZW5jZXMgdG8gY2xvbmVkIHNjcmlwdHMgZm9yIGxhdGVyIHJlc3RvcmF0aW9uXG5cdFx0XHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggc2NyaXB0cywgZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRjYWxsYmFjay5jYWxsKCBjb2xsZWN0aW9uWyBpIF0sIG5vZGUsIGkgKTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBoYXNTY3JpcHRzICkge1xuXHRcdFx0XHRkb2MgPSBzY3JpcHRzWyBzY3JpcHRzLmxlbmd0aCAtIDEgXS5vd25lckRvY3VtZW50O1xuXG5cdFx0XHRcdC8vIFJlZW5hYmxlIHNjcmlwdHNcblx0XHRcdFx0alF1ZXJ5Lm1hcCggc2NyaXB0cywgcmVzdG9yZVNjcmlwdCApO1xuXG5cdFx0XHRcdC8vIEV2YWx1YXRlIGV4ZWN1dGFibGUgc2NyaXB0cyBvbiBmaXJzdCBkb2N1bWVudCBpbnNlcnRpb25cblx0XHRcdFx0Zm9yICggaSA9IDA7IGkgPCBoYXNTY3JpcHRzOyBpKysgKSB7XG5cdFx0XHRcdFx0bm9kZSA9IHNjcmlwdHNbIGkgXTtcblx0XHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIG5vZGUudHlwZSB8fCBcIlwiICkgJiZcblx0XHRcdFx0XHRcdCFkYXRhUHJpdi5hY2Nlc3MoIG5vZGUsIFwiZ2xvYmFsRXZhbFwiICkgJiZcblx0XHRcdFx0XHRcdGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XG5cblx0XHRcdFx0XHRcdGlmICggbm9kZS5zcmMgJiYgKCBub2RlLnR5cGUgfHwgXCJcIiApLnRvTG93ZXJDYXNlKCkgICE9PSBcIm1vZHVsZVwiICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIE9wdGlvbmFsIEFKQVggZGVwZW5kZW5jeSwgYnV0IHdvbid0IHJ1biBzY3JpcHRzIGlmIG5vdCBwcmVzZW50XG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICYmICFub2RlLm5vTW9kdWxlICkge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5fZXZhbFVybCggbm9kZS5zcmMsIHtcblx0XHRcdFx0XHRcdFx0XHRcdG5vbmNlOiBub2RlLm5vbmNlIHx8IG5vZGUuZ2V0QXR0cmlidXRlKCBcIm5vbmNlXCIgKVxuXHRcdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0RE9NRXZhbCggbm9kZS50ZXh0Q29udGVudC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKSwgbm9kZSwgZG9jICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGNvbGxlY3Rpb247XG59XG5cbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xuXHR2YXIgbm9kZSxcblx0XHRub2RlcyA9IHNlbGVjdG9yID8galF1ZXJ5LmZpbHRlciggc2VsZWN0b3IsIGVsZW0gKSA6IGVsZW0sXG5cdFx0aSA9IDA7XG5cblx0Zm9yICggOyAoIG5vZGUgPSBub2Rlc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdGlmICggIWtlZXBEYXRhICYmIG5vZGUubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xuXHRcdH1cblxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xuXHRcdFx0aWYgKCBrZWVwRGF0YSAmJiBpc0F0dGFjaGVkKCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0gaXNBdHRhY2hlZCggZWxlbSApO1xuXG5cdFx0Ly8gRml4IElFIGNsb25pbmcgaXNzdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5ub0Nsb25lQ2hlY2tlZCAmJiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgZWxlbS5ub2RlVHlwZSA9PT0gMTEgKSAmJlxuXHRcdFx0XHQhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cHM6Ly9qc3BlcmYuY29tL2dldGFsbC12cy1zaXp6bGUvMlxuXHRcdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSApO1xuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcblxuXHRcdFx0Zm9yICggaSA9IDAsIGwgPSBzcmNFbGVtZW50cy5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZpeElucHV0KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvcHkgdGhlIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCB0byB0aGUgY2xvbmVcblx0XHRpZiAoIGRhdGFBbmRFdmVudHMgKSB7XG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0XHRzcmNFbGVtZW50cyA9IHNyY0VsZW1lbnRzIHx8IGdldEFsbCggZWxlbSApO1xuXHRcdFx0XHRkZXN0RWxlbWVudHMgPSBkZXN0RWxlbWVudHMgfHwgZ2V0QWxsKCBjbG9uZSApO1xuXG5cdFx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRcdGNsb25lQ29weUV2ZW50KCBzcmNFbGVtZW50c1sgaSBdLCBkZXN0RWxlbWVudHNbIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRjbG9uZUNvcHlFdmVudCggZWxlbSwgY2xvbmUgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0ZGVzdEVsZW1lbnRzID0gZ2V0QWxsKCBjbG9uZSwgXCJzY3JpcHRcIiApO1xuXHRcdGlmICggZGVzdEVsZW1lbnRzLmxlbmd0aCA+IDAgKSB7XG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gdGhlIGNsb25lZCBzZXRcblx0XHRyZXR1cm4gY2xvbmU7XG5cdH0sXG5cblx0Y2xlYW5EYXRhOiBmdW5jdGlvbiggZWxlbXMgKSB7XG5cdFx0dmFyIGRhdGEsIGVsZW0sIHR5cGUsXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWwsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9PSB1bmRlZmluZWQ7IGkrKyApIHtcblx0XHRcdGlmICggYWNjZXB0RGF0YSggZWxlbSApICkge1xuXHRcdFx0XHRpZiAoICggZGF0YSA9IGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSApICkge1xuXHRcdFx0XHRcdGlmICggZGF0YS5ldmVudHMgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIHNwZWNpYWxbIHR5cGUgXSApIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdFx0XHRcdFx0Ly8gVGhpcyBpcyBhIHNob3J0Y3V0IHRvIGF2b2lkIGpRdWVyeS5ldmVudC5yZW1vdmUncyBvdmVyaGVhZFxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVByaXYuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGlmICggZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdICkge1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9MzUgLSA0NStcblx0XHRcdFx0XHQvLyBBc3NpZ24gdW5kZWZpbmVkIGluc3RlYWQgb2YgdXNpbmcgZGVsZXRlLCBzZWUgRGF0YSNyZW1vdmVcblx0XHRcdFx0XHRlbGVtWyBkYXRhVXNlci5leHBhbmRvIF0gPSB1bmRlZmluZWQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkZXRhY2g6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHR9LFxuXG5cdHJlbW92ZTogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XG5cdH0sXG5cblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0XHRcdHRoaXMudGV4dENvbnRlbnQgPSB2YWx1ZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gKTtcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9LFxuXG5cdGFwcGVuZDogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHZhciB0YXJnZXQgPSBtYW5pcHVsYXRpb25UYXJnZXQoIHRoaXMsIGVsZW0gKTtcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHByZXBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGJlZm9yZTogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0aWYgKCB0aGlzLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0YWZ0ZXI6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzLm5leHRTaWJsaW5nICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZWxlbSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0Zm9yICggOyAoIGVsZW0gPSB0aGlzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gUHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cblx0XHRcdFx0Ly8gUmVtb3ZlIGFueSByZW1haW5pbmcgbm9kZXNcblx0XHRcdFx0ZWxlbS50ZXh0Q29udGVudCA9IFwiXCI7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRkYXRhQW5kRXZlbnRzID0gZGF0YUFuZEV2ZW50cyA9PSBudWxsID8gZmFsc2UgOiBkYXRhQW5kRXZlbnRzO1xuXHRcdGRlZXBEYXRhQW5kRXZlbnRzID0gZGVlcERhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGRhdGFBbmRFdmVudHMgOiBkZWVwRGF0YUFuZEV2ZW50cztcblxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmNsb25lKCB0aGlzLCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApO1xuXHRcdH0gKTtcblx0fSxcblxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF0gfHwge30sXG5cdFx0XHRcdGkgPSAwLFxuXHRcdFx0XHRsID0gdGhpcy5sZW5ndGg7XG5cblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pbm5lckhUTUw7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNlZSBpZiB3ZSBjYW4gdGFrZSBhIHNob3J0Y3V0IGFuZCBqdXN0IHVzZSBpbm5lckhUTUxcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxuXHRcdFx0XHQhd3JhcE1hcFsgKCBydGFnTmFtZS5leGVjKCB2YWx1ZSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpIF0gKSB7XG5cblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcblxuXHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRcdGVsZW0gPSB0aGlzWyBpIF0gfHwge307XG5cblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xuXHRcdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIGVsZW0sIGZhbHNlICkgKTtcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtID0gMDtcblxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2Rcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRcdHRoaXMuZW1wdHkoKS5hcHBlbmQoIHZhbHVlICk7XG5cdFx0XHR9XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRyZXBsYWNlV2l0aDogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlnbm9yZWQgPSBbXTtcblxuXHRcdC8vIE1ha2UgdGhlIGNoYW5nZXMsIHJlcGxhY2luZyBlYWNoIG5vbi1pZ25vcmVkIGNvbnRleHQgZWxlbWVudCB3aXRoIHRoZSBuZXcgY29udGVudFxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XG5cblx0XHRcdGlmICggalF1ZXJ5LmluQXJyYXkoIHRoaXMsIGlnbm9yZWQgKSA8IDAgKSB7XG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XG5cdFx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRcdHBhcmVudC5yZXBsYWNlQ2hpbGQoIGVsZW0sIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxuXHRcdH0sIGlnbm9yZWQgKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCgge1xuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcblx0cHJlcGVuZFRvOiBcInByZXBlbmRcIixcblx0aW5zZXJ0QmVmb3JlOiBcImJlZm9yZVwiLFxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxuXHRyZXBsYWNlQWxsOiBcInJlcGxhY2VXaXRoXCJcbn0sIGZ1bmN0aW9uKCBuYW1lLCBvcmlnaW5hbCApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dmFyIGVsZW1zLFxuXHRcdFx0cmV0ID0gW10sXG5cdFx0XHRpbnNlcnQgPSBqUXVlcnkoIHNlbGVjdG9yICksXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDEsXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgaSA8PSBsYXN0OyBpKysgKSB7XG5cdFx0XHRlbGVtcyA9IGkgPT09IGxhc3QgPyB0aGlzIDogdGhpcy5jbG9uZSggdHJ1ZSApO1xuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHksIFBoYW50b21KUyAxIG9ubHlcblx0XHRcdC8vIC5nZXQoKSBiZWNhdXNlIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdHB1c2guYXBwbHkoIHJldCwgZWxlbXMuZ2V0KCkgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHJldCApO1xuXHR9O1xufSApO1xudmFyIHJudW1ub25weCA9IG5ldyBSZWdFeHAoIFwiXihcIiArIHBudW0gKyBcIikoPyFweClbYS16JV0rJFwiLCBcImlcIiApO1xuXG52YXIgZ2V0U3R5bGVzID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHksIEZpcmVmb3ggPD0zMCAoIzE1MDk4LCAjMTQxNTApXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXG5cdFx0Ly8gRkYgbWVhbndoaWxlIHRocm93cyBvbiBmcmFtZSBlbGVtZW50cyB0aHJvdWdoIFwiZGVmYXVsdFZpZXcuZ2V0Q29tcHV0ZWRTdHlsZVwiXG5cdFx0dmFyIHZpZXcgPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cblx0XHRpZiAoICF2aWV3IHx8ICF2aWV3Lm9wZW5lciApIHtcblx0XHRcdHZpZXcgPSB3aW5kb3c7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZpZXcuZ2V0Q29tcHV0ZWRTdHlsZSggZWxlbSApO1xuXHR9O1xuXG52YXIgcmJveFN0eWxlID0gbmV3IFJlZ0V4cCggY3NzRXhwYW5kLmpvaW4oIFwifFwiICksIFwiaVwiICk7XG5cblxuXG4oIGZ1bmN0aW9uKCkge1xuXG5cdC8vIEV4ZWN1dGluZyBib3RoIHBpeGVsUG9zaXRpb24gJiBib3hTaXppbmdSZWxpYWJsZSB0ZXN0cyByZXF1aXJlIG9ubHkgb25lIGxheW91dFxuXHQvLyBzbyB0aGV5J3JlIGV4ZWN1dGVkIGF0IHRoZSBzYW1lIHRpbWUgdG8gc2F2ZSB0aGUgc2Vjb25kIGNvbXB1dGF0aW9uLlxuXHRmdW5jdGlvbiBjb21wdXRlU3R5bGVUZXN0cygpIHtcblxuXHRcdC8vIFRoaXMgaXMgYSBzaW5nbGV0b24sIHdlIG5lZWQgdG8gZXhlY3V0ZSBpdCBvbmx5IG9uY2Vcblx0XHRpZiAoICFkaXYgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29udGFpbmVyLnN0eWxlLmNzc1RleHQgPSBcInBvc2l0aW9uOmFic29sdXRlO2xlZnQ6LTExMTExcHg7d2lkdGg6NjBweDtcIiArXG5cdFx0XHRcIm1hcmdpbi10b3A6MXB4O3BhZGRpbmc6MDtib3JkZXI6MFwiO1xuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztib3gtc2l6aW5nOmJvcmRlci1ib3g7b3ZlcmZsb3c6c2Nyb2xsO1wiICtcblx0XHRcdFwibWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDtcIiArXG5cdFx0XHRcIndpZHRoOjYwJTt0b3A6MSVcIjtcblx0XHRkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcblxuXHRcdHZhciBkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gZGl2U3R5bGUudG9wICE9PSBcIjElXCI7XG5cblx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDQ0XG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsID0gcm91bmRQaXhlbE1lYXN1cmVzKCBkaXZTdHlsZS5tYXJnaW5MZWZ0ICkgPT09IDEyO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgU2FmYXJpIDw9OS4xIC0gMTAuMSwgaU9TIDw9Ny4wIC0gOS4zXG5cdFx0Ly8gU29tZSBzdHlsZXMgY29tZSBiYWNrIHdpdGggcGVyY2VudGFnZSB2YWx1ZXMsIGV2ZW4gdGhvdWdoIHRoZXkgc2hvdWxkbid0XG5cdFx0ZGl2LnN0eWxlLnJpZ2h0ID0gXCI2MCVcIjtcblx0XHRwaXhlbEJveFN0eWxlc1ZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUucmlnaHQgKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seVxuXHRcdC8vIERldGVjdCBtaXNyZXBvcnRpbmcgb2YgY29udGVudCBkaW1lbnNpb25zIGZvciBib3gtc2l6aW5nOmJvcmRlci1ib3ggZWxlbWVudHNcblx0XHRib3hTaXppbmdSZWxpYWJsZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUud2lkdGggKSA9PT0gMzY7XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA5IG9ubHlcblx0XHQvLyBEZXRlY3Qgb3ZlcmZsb3c6c2Nyb2xsIHNjcmV3aW5lc3MgKGdoLTM2OTkpXG5cdFx0Ly8gU3VwcG9ydDogQ2hyb21lIDw9NjRcblx0XHQvLyBEb24ndCBnZXQgdHJpY2tlZCB3aGVuIHpvb20gYWZmZWN0cyBvZmZzZXRXaWR0aCAoZ2gtNDAyOSlcblx0XHRkaXYuc3R5bGUucG9zaXRpb24gPSBcImFic29sdXRlXCI7XG5cdFx0c2Nyb2xsYm94U2l6ZVZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2Lm9mZnNldFdpZHRoIC8gMyApID09PSAxMjtcblxuXHRcdGRvY3VtZW50RWxlbWVudC5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XG5cblx0XHQvLyBOdWxsaWZ5IHRoZSBkaXYgc28gaXQgd291bGRuJ3QgYmUgc3RvcmVkIGluIHRoZSBtZW1vcnkgYW5kXG5cdFx0Ly8gaXQgd2lsbCBhbHNvIGJlIGEgc2lnbiB0aGF0IGNoZWNrcyBhbHJlYWR5IHBlcmZvcm1lZFxuXHRcdGRpdiA9IG51bGw7XG5cdH1cblxuXHRmdW5jdGlvbiByb3VuZFBpeGVsTWVhc3VyZXMoIG1lYXN1cmUgKSB7XG5cdFx0cmV0dXJuIE1hdGgucm91bmQoIHBhcnNlRmxvYXQoIG1lYXN1cmUgKSApO1xuXHR9XG5cblx0dmFyIHBpeGVsUG9zaXRpb25WYWwsIGJveFNpemluZ1JlbGlhYmxlVmFsLCBzY3JvbGxib3hTaXplVmFsLCBwaXhlbEJveFN0eWxlc1ZhbCxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnRWYWwsXG5cdFx0Y29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcblxuXHQvLyBGaW5pc2ggZWFybHkgaW4gbGltaXRlZCAobm9uLWJyb3dzZXIpIGVudmlyb25tZW50c1xuXHRpZiAoICFkaXYuc3R5bGUgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHQvLyBTdHlsZSBvZiBjbG9uZWQgZWxlbWVudCBhZmZlY3RzIHNvdXJjZSBlbGVtZW50IGNsb25lZCAoIzg5MDgpXG5cdGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiY29udGVudC1ib3hcIjtcblx0ZGl2LmNsb25lTm9kZSggdHJ1ZSApLnN0eWxlLmJhY2tncm91bmRDbGlwID0gXCJcIjtcblx0c3VwcG9ydC5jbGVhckNsb25lU3R5bGUgPSBkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPT09IFwiY29udGVudC1ib3hcIjtcblxuXHRqUXVlcnkuZXh0ZW5kKCBzdXBwb3J0LCB7XG5cdFx0Ym94U2l6aW5nUmVsaWFibGU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBib3hTaXppbmdSZWxpYWJsZVZhbDtcblx0XHR9LFxuXHRcdHBpeGVsQm94U3R5bGVzOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcGl4ZWxCb3hTdHlsZXNWYWw7XG5cdFx0fSxcblx0XHRwaXhlbFBvc2l0aW9uOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gcGl4ZWxQb3NpdGlvblZhbDtcblx0XHR9LFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdDogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZhbDtcblx0XHR9LFxuXHRcdHNjcm9sbGJveFNpemU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiBzY3JvbGxib3hTaXplVmFsO1xuXHRcdH1cblx0fSApO1xufSApKCk7XG5cblxuZnVuY3Rpb24gY3VyQ1NTKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcblx0dmFyIHdpZHRoLCBtaW5XaWR0aCwgbWF4V2lkdGgsIHJldCxcblxuXHRcdC8vIFN1cHBvcnQ6IEZpcmVmb3ggNTErXG5cdFx0Ly8gUmV0cmlldmluZyBzdHlsZSBiZWZvcmUgY29tcHV0ZWQgc29tZWhvd1xuXHRcdC8vIGZpeGVzIGFuIGlzc3VlIHdpdGggZ2V0dGluZyB3cm9uZyB2YWx1ZXNcblx0XHQvLyBvbiBkZXRhY2hlZCBlbGVtZW50c1xuXHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcblxuXHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xuXG5cdC8vIGdldFByb3BlcnR5VmFsdWUgaXMgbmVlZGVkIGZvcjpcblx0Ly8gICAuY3NzKCdmaWx0ZXInKSAoSUUgOSBvbmx5LCAjMTI1MzcpXG5cdC8vICAgLmNzcygnLS1jdXN0b21Qcm9wZXJ0eSkgKCMzMTQ0KVxuXHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdHJldCA9IGNvbXB1dGVkLmdldFByb3BlcnR5VmFsdWUoIG5hbWUgKSB8fCBjb21wdXRlZFsgbmFtZSBdO1xuXG5cdFx0aWYgKCByZXQgPT09IFwiXCIgJiYgIWlzQXR0YWNoZWQoIGVsZW0gKSApIHtcblx0XHRcdHJldCA9IGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSApO1xuXHRcdH1cblxuXHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcblx0XHQvLyBBbmRyb2lkIEJyb3dzZXIgcmV0dXJucyBwZXJjZW50YWdlIGZvciBzb21lIHZhbHVlcyxcblx0XHQvLyBidXQgd2lkdGggc2VlbXMgdG8gYmUgcmVsaWFibHkgcGl4ZWxzLlxuXHRcdC8vIFRoaXMgaXMgYWdhaW5zdCB0aGUgQ1NTT00gZHJhZnQgc3BlYzpcblx0XHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI3Jlc29sdmVkLXZhbHVlc1xuXHRcdGlmICggIXN1cHBvcnQucGl4ZWxCb3hTdHlsZXMoKSAmJiBybnVtbm9ucHgudGVzdCggcmV0ICkgJiYgcmJveFN0eWxlLnRlc3QoIG5hbWUgKSApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIG9yaWdpbmFsIHZhbHVlc1xuXHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcblx0XHRcdG1pbldpZHRoID0gc3R5bGUubWluV2lkdGg7XG5cdFx0XHRtYXhXaWR0aCA9IHN0eWxlLm1heFdpZHRoO1xuXG5cdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XG5cdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XG5cdFx0XHRyZXQgPSBjb21wdXRlZC53aWR0aDtcblxuXHRcdFx0Ly8gUmV2ZXJ0IHRoZSBjaGFuZ2VkIHZhbHVlc1xuXHRcdFx0c3R5bGUud2lkdGggPSB3aWR0aDtcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7XG5cdFx0XHRzdHlsZS5tYXhXaWR0aCA9IG1heFdpZHRoO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXQgIT09IHVuZGVmaW5lZCA/XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0Ly8gSUUgcmV0dXJucyB6SW5kZXggdmFsdWUgYXMgYW4gaW50ZWdlci5cblx0XHRyZXQgKyBcIlwiIDpcblx0XHRyZXQ7XG59XG5cblxuZnVuY3Rpb24gYWRkR2V0SG9va0lmKCBjb25kaXRpb25GbiwgaG9va0ZuICkge1xuXG5cdC8vIERlZmluZSB0aGUgaG9vaywgd2UnbGwgY2hlY2sgb24gdGhlIGZpcnN0IHJ1biBpZiBpdCdzIHJlYWxseSBuZWVkZWQuXG5cdHJldHVybiB7XG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggY29uZGl0aW9uRm4oKSApIHtcblxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcblx0XHRcdFx0Ly8gdG8gbWlzc2luZyBkZXBlbmRlbmN5KSwgcmVtb3ZlIGl0LlxuXHRcdFx0XHRkZWxldGUgdGhpcy5nZXQ7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXG5cdFx0XHRyZXR1cm4gKCB0aGlzLmdldCA9IGhvb2tGbiApLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHR9XG5cdH07XG59XG5cblxudmFyIGNzc1ByZWZpeGVzID0gWyBcIldlYmtpdFwiLCBcIk1velwiLCBcIm1zXCIgXSxcblx0ZW1wdHlTdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKS5zdHlsZSxcblx0dmVuZG9yUHJvcHMgPSB7fTtcblxuLy8gUmV0dXJuIGEgdmVuZG9yLXByZWZpeGVkIHByb3BlcnR5IG9yIHVuZGVmaW5lZFxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHBvdGVudGlhbGx5LW1hcHBlZCBqUXVlcnkuY3NzUHJvcHMgb3IgdmVuZG9yIHByZWZpeGVkIHByb3BlcnR5XG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgZmluYWwgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSB8fCB2ZW5kb3JQcm9wc1sgbmFtZSBdO1xuXG5cdGlmICggZmluYWwgKSB7XG5cdFx0cmV0dXJuIGZpbmFsO1xuXHR9XG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cdHJldHVybiB2ZW5kb3JQcm9wc1sgbmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB8fCBuYW1lO1xufVxuXG5cbnZhclxuXG5cdC8vIFN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGVcblx0Ly8gZXhjZXB0IFwidGFibGVcIiwgXCJ0YWJsZS1jZWxsXCIsIG9yIFwidGFibGUtY2FwdGlvblwiXG5cdC8vIFNlZSBoZXJlIGZvciBkaXNwbGF5IHZhbHVlczogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxuXHRyZGlzcGxheXN3YXAgPSAvXihub25lfHRhYmxlKD8hLWNbZWFdKS4rKS8sXG5cdHJjdXN0b21Qcm9wID0gL14tLS8sXG5cdGNzc1Nob3cgPSB7IHBvc2l0aW9uOiBcImFic29sdXRlXCIsIHZpc2liaWxpdHk6IFwiaGlkZGVuXCIsIGRpc3BsYXk6IFwiYmxvY2tcIiB9LFxuXHRjc3NOb3JtYWxUcmFuc2Zvcm0gPSB7XG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXG5cdFx0Zm9udFdlaWdodDogXCI0MDBcIlxuXHR9O1xuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXG5cdFx0Ly8gSWYgb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIHVua25vd24sIHRoZW4gd2UgY2FuJ3QgZGV0ZXJtaW5lIGNvbnRlbnQtYm94IHNjcm9sbCBndXR0ZXJcblx0XHQvLyBVc2UgYW4gZXhwbGljaXQgemVybyB0byBhdm9pZCBOYU4gKGdoLTM5NjQpXG5cdFx0KSApIHx8IDA7XG5cdH1cblxuXHRyZXR1cm4gZGVsdGE7XG59XG5cbmZ1bmN0aW9uIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKSB7XG5cblx0Ly8gU3RhcnQgd2l0aCBjb21wdXRlZCBzdHlsZVxuXHR2YXIgc3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC00MzIyKS5cblx0XHQvLyBGYWtlIGNvbnRlbnQtYm94IHVudGlsIHdlIGtub3cgaXQncyBuZWVkZWQgdG8ga25vdyB0aGUgdHJ1ZSB2YWx1ZS5cblx0XHRib3hTaXppbmdOZWVkZWQgPSAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpIHx8IGV4dHJhLFxuXHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCxcblxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgZGltZW5zaW9uLCBzdHlsZXMgKSxcblx0XHRvZmZzZXRQcm9wID0gXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKTtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXG5cdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHQvLyBUaGlzIGhhcHBlbnMgZm9yIGlubGluZSBlbGVtZW50cyB3aXRoIG5vIGV4cGxpY2l0IHNldHRpbmcgKGdoLTM1NzEpXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHQvLyBTdXBwb3J0OiBJRSA5LTExIG9ubHlcblx0Ly8gQWxzbyB1c2Ugb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGZvciB3aGVuIGJveCBzaXppbmcgaXMgdW5yZWxpYWJsZVxuXHQvLyBXZSB1c2UgZ2V0Q2xpZW50UmVjdHMoKSB0byBjaGVjayBmb3IgaGlkZGVuL2Rpc2Nvbm5lY3RlZC5cblx0Ly8gSW4gdGhvc2UgY2FzZXMsIHRoZSBjb21wdXRlZCB2YWx1ZSBjYW4gYmUgdHJ1c3RlZCB0byBiZSBib3JkZXItYm94XG5cdGlmICggKCAhc3VwcG9ydC5ib3hTaXppbmdSZWxpYWJsZSgpICYmIGlzQm9yZGVyQm94IHx8XG5cdFx0dmFsID09PSBcImF1dG9cIiB8fFxuXHRcdCFwYXJzZUZsb2F0KCB2YWwgKSAmJiBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImlubGluZVwiICkgJiZcblx0XHRlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICkge1xuXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiO1xuXG5cdFx0Ly8gV2hlcmUgYXZhaWxhYmxlLCBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgYXBwcm94aW1hdGUgYm9yZGVyIGJveCBkaW1lbnNpb25zLlxuXHRcdC8vIFdoZXJlIG5vdCBhdmFpbGFibGUgKGUuZy4sIFNWRyksIGFzc3VtZSB1bnJlbGlhYmxlIGJveC1zaXppbmcgYW5kIGludGVycHJldCB0aGVcblx0XHQvLyByZXRyaWV2ZWQgdmFsdWUgYXMgYSBjb250ZW50IGJveCBkaW1lbnNpb24uXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IG9mZnNldFByb3AgaW4gZWxlbTtcblx0XHRpZiAoIHZhbHVlSXNCb3JkZXJCb3ggKSB7XG5cdFx0XHR2YWwgPSBlbGVtWyBvZmZzZXRQcm9wIF07XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIFwiXCIgYW5kIGF1dG9cblx0dmFsID0gcGFyc2VGbG9hdCggdmFsICkgfHwgMDtcblxuXHQvLyBBZGp1c3QgZm9yIHRoZSBlbGVtZW50J3MgYm94IG1vZGVsXG5cdHJldHVybiAoIHZhbCArXG5cdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0ZWxlbSxcblx0XHRcdGRpbWVuc2lvbixcblx0XHRcdGV4dHJhIHx8ICggaXNCb3JkZXJCb3ggPyBcImJvcmRlclwiIDogXCJjb250ZW50XCIgKSxcblx0XHRcdHZhbHVlSXNCb3JkZXJCb3gsXG5cdFx0XHRzdHlsZXMsXG5cblx0XHRcdC8vIFByb3ZpZGUgdGhlIGN1cnJlbnQgY29tcHV0ZWQgc2l6ZSB0byByZXF1ZXN0IHNjcm9sbCBndXR0ZXIgY2FsY3VsYXRpb24gKGdoLTM1ODkpXG5cdFx0XHR2YWxcblx0XHQpXG5cdCkgKyBcInB4XCI7XG59XG5cbmpRdWVyeS5leHRlbmQoIHtcblxuXHQvLyBBZGQgaW4gc3R5bGUgcHJvcGVydHkgaG9va3MgZm9yIG92ZXJyaWRpbmcgdGhlIGRlZmF1bHRcblx0Ly8gYmVoYXZpb3Igb2YgZ2V0dGluZyBhbmQgc2V0dGluZyBhIHN0eWxlIHByb3BlcnR5XG5cdGNzc0hvb2tzOiB7XG5cdFx0b3BhY2l0eToge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0XHQvLyBXZSBzaG91bGQgYWx3YXlzIGdldCBhIG51bWJlciBiYWNrIGZyb20gb3BhY2l0eVxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJldCA9PT0gXCJcIiA/IFwiMVwiIDogcmV0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9LFxuXG5cdC8vIERvbid0IGF1dG9tYXRpY2FsbHkgYWRkIFwicHhcIiB0byB0aGVzZSBwb3NzaWJseS11bml0bGVzcyBwcm9wZXJ0aWVzXG5cdGNzc051bWJlcjoge1xuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcblx0XHRcImNvbHVtbkNvdW50XCI6IHRydWUsXG5cdFx0XCJmaWxsT3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcblx0XHRcImZsZXhTaHJpbmtcIjogdHJ1ZSxcblx0XHRcImZvbnRXZWlnaHRcIjogdHJ1ZSxcblx0XHRcImdyaWRBcmVhXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uRW5kXCI6IHRydWUsXG5cdFx0XCJncmlkQ29sdW1uU3RhcnRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dFbmRcIjogdHJ1ZSxcblx0XHRcImdyaWRSb3dTdGFydFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcblxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0Ly8gVGhlIGlzQ3VzdG9tUHJvcCBjaGVjayBjYW4gYmUgcmVtb3ZlZCBpbiBqUXVlcnkgNC4wIHdoZW4gd2Ugb25seSBhdXRvLWFwcGVuZFxuXHRcdFx0Ly8gXCJweFwiIHRvIGEgZmV3IGhhcmRjb2RlZCB2YWx1ZXMuXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwibnVtYmVyXCIgJiYgIWlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0dmFsdWUgKz0gcmV0ICYmIHJldFsgMyBdIHx8ICggalF1ZXJ5LmNzc051bWJlclsgb3JpZ05hbWUgXSA/IFwiXCIgOiBcInB4XCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gYmFja2dyb3VuZC0qIHByb3BzIGFmZmVjdCBvcmlnaW5hbCBjbG9uZSdzIHZhbHVlc1xuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xuXHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gXCJpbmhlcml0XCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQsIHVzZSB0aGF0IHZhbHVlLCBvdGhlcndpc2UganVzdCBzZXQgdGhlIHNwZWNpZmllZCB2YWx1ZVxuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8XG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRpZiAoIGlzQ3VzdG9tUHJvcCApIHtcblx0XHRcdFx0XHRzdHlsZS5zZXRQcm9wZXJ0eSggbmFtZSwgdmFsdWUgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRzdHlsZVsgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIElmIGEgaG9vayB3YXMgcHJvdmlkZWQgZ2V0IHRoZSBub24tY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBmYWxzZSwgZXh0cmEgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3Rcblx0XHRcdHJldHVybiBzdHlsZVsgbmFtZSBdO1xuXHRcdH1cblx0fSxcblxuXHRjc3M6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBleHRyYSwgc3R5bGVzICkge1xuXHRcdHZhciB2YWwsIG51bSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gbW9kaWZ5IHRoZSB2YWx1ZSBpZiBpdCBpcyBhIENTUyBjdXN0b20gcHJvcGVydHlcblx0XHQvLyBzaW5jZSB0aGV5IGFyZSB1c2VyLWRlZmluZWQuXG5cdFx0aWYgKCAhaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0bmFtZSA9IGZpbmFsUHJvcE5hbWUoIG9yaWdOYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gVHJ5IHByZWZpeGVkIG5hbWUgZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgbmFtZVxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcblx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWwgPSBob29rcy5nZXQoIGVsZW0sIHRydWUsIGV4dHJhICk7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXJ3aXNlLCBpZiBhIHdheSB0byBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGV4aXN0cywgdXNlIHRoYXRcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dmFsID0gY3VyQ1NTKCBlbGVtLCBuYW1lLCBzdHlsZXMgKTtcblx0XHR9XG5cblx0XHQvLyBDb252ZXJ0IFwibm9ybWFsXCIgdG8gY29tcHV0ZWQgdmFsdWVcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcblx0XHRcdHZhbCA9IGNzc05vcm1hbFRyYW5zZm9ybVsgbmFtZSBdO1xuXHRcdH1cblxuXHRcdC8vIE1ha2UgbnVtZXJpYyBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xuXHRcdGlmICggZXh0cmEgPT09IFwiXCIgfHwgZXh0cmEgKSB7XG5cdFx0XHRudW0gPSBwYXJzZUZsb2F0KCB2YWwgKTtcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwiaGVpZ2h0XCIsIFwid2lkdGhcIiBdLCBmdW5jdGlvbiggaSwgZGltZW5zaW9uICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIGRpbWVuc2lvbiBdID0ge1xuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkLCBleHRyYSApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cblx0XHRcdFx0Ly8gQ2VydGFpbiBlbGVtZW50cyBjYW4gaGF2ZSBkaW1lbnNpb24gaW5mbyBpZiB3ZSBpbnZpc2libHkgc2hvdyB0aGVtXG5cdFx0XHRcdC8vIGJ1dCBpdCBtdXN0IGhhdmUgYSBjdXJyZW50IGRpc3BsYXkgc3R5bGUgdGhhdCB3b3VsZCBiZW5lZml0XG5cdFx0XHRcdHJldHVybiByZGlzcGxheXN3YXAudGVzdCggalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSApICYmXG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgOCtcblx0XHRcdFx0XHQvLyBUYWJsZSBjb2x1bW5zIGluIFNhZmFyaSBoYXZlIG5vbi16ZXJvIG9mZnNldFdpZHRoICYgemVyb1xuXHRcdFx0XHRcdC8vIGdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoIHVubGVzcyBkaXNwbGF5IGlzIGNoYW5nZWQuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0XHRcdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYSBkaXNjb25uZWN0ZWQgbm9kZVxuXHRcdFx0XHRcdC8vIGluIElFIHRocm93cyBhbiBlcnJvci5cblx0XHRcdFx0XHQoICFlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoIHx8ICFlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoICkgP1xuXHRcdFx0XHRcdFx0c3dhcCggZWxlbSwgY3NzU2hvdywgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHRcdFx0XHR9ICkgOlxuXHRcdFx0XHRcdFx0Z2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApO1xuXHRcdFx0fVxuXHRcdH0sXG5cblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7XG5cdFx0XHR2YXIgbWF0Y2hlcyxcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICksXG5cblx0XHRcdFx0Ly8gT25seSByZWFkIHN0eWxlcy5wb3NpdGlvbiBpZiB0aGUgdGVzdCBoYXMgYSBjaGFuY2UgdG8gZmFpbFxuXHRcdFx0XHQvLyB0byBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LlxuXHRcdFx0XHRzY3JvbGxib3hTaXplQnVnZ3kgPSAhc3VwcG9ydC5zY3JvbGxib3hTaXplKCkgJiZcblx0XHRcdFx0XHRzdHlsZXMucG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIixcblxuXHRcdFx0XHQvLyBUbyBhdm9pZCBmb3JjaW5nIGEgcmVmbG93LCBvbmx5IGZldGNoIGJveFNpemluZyBpZiB3ZSBuZWVkIGl0IChnaC0zOTkxKVxuXHRcdFx0XHRib3hTaXppbmdOZWVkZWQgPSBzY3JvbGxib3hTaXplQnVnZ3kgfHwgZXh0cmEsXG5cdFx0XHRcdGlzQm9yZGVyQm94ID0gYm94U2l6aW5nTmVlZGVkICYmXG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIixcblx0XHRcdFx0c3VidHJhY3QgPSBleHRyYSA/XG5cdFx0XHRcdFx0Ym94TW9kZWxBZGp1c3RtZW50KFxuXHRcdFx0XHRcdFx0ZWxlbSxcblx0XHRcdFx0XHRcdGRpbWVuc2lvbixcblx0XHRcdFx0XHRcdGV4dHJhLFxuXHRcdFx0XHRcdFx0aXNCb3JkZXJCb3gsXG5cdFx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0XHQpIDpcblx0XHRcdFx0XHQwO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB1bnJlbGlhYmxlIGJvcmRlci1ib3ggZGltZW5zaW9ucyBieSBjb21wYXJpbmcgb2Zmc2V0KiB0byBjb21wdXRlZCBhbmRcblx0XHRcdC8vIGZha2luZyBhIGNvbnRlbnQtYm94IHRvIGdldCBib3JkZXIgYW5kIHBhZGRpbmcgKGdoLTM2OTkpXG5cdFx0XHRpZiAoIGlzQm9yZGVyQm94ICYmIHNjcm9sbGJveFNpemVCdWdneSApIHtcblx0XHRcdFx0c3VidHJhY3QgLT0gTWF0aC5jZWlsKFxuXHRcdFx0XHRcdGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXSAtXG5cdFx0XHRcdFx0cGFyc2VGbG9hdCggc3R5bGVzWyBkaW1lbnNpb24gXSApIC1cblx0XHRcdFx0XHRib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgXCJib3JkZXJcIiwgZmFsc2UsIHN0eWxlcyApIC1cblx0XHRcdFx0XHQwLjVcblx0XHRcdFx0KTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udmVydCB0byBwaXhlbHMgaWYgdmFsdWUgYWRqdXN0bWVudCBpcyBuZWVkZWRcblx0XHRcdGlmICggc3VidHJhY3QgJiYgKCBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiZcblx0XHRcdFx0KCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgIT09IFwicHhcIiApIHtcblxuXHRcdFx0XHRlbGVtLnN0eWxlWyBkaW1lbnNpb24gXSA9IHZhbHVlO1xuXHRcdFx0XHR2YWx1ZSA9IGpRdWVyeS5jc3MoIGVsZW0sIGRpbWVuc2lvbiApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gc2V0UG9zaXRpdmVOdW1iZXIoIGVsZW0sIHZhbHVlLCBzdWJ0cmFjdCApO1xuXHRcdH1cblx0fTtcbn0gKTtcblxualF1ZXJ5LmNzc0hvb2tzLm1hcmdpbkxlZnQgPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucmVsaWFibGVNYXJnaW5MZWZ0LFxuXHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRcdHJldHVybiAoIHBhcnNlRmxvYXQoIGN1ckNTUyggZWxlbSwgXCJtYXJnaW5MZWZ0XCIgKSApIHx8XG5cdFx0XHRcdGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCAtXG5cdFx0XHRcdFx0c3dhcCggZWxlbSwgeyBtYXJnaW5MZWZ0OiAwIH0sIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdDtcblx0XHRcdFx0XHR9IClcblx0XHRcdFx0KSArIFwicHhcIjtcblx0XHR9XG5cdH1cbik7XG5cbi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXNcbmpRdWVyeS5lYWNoKCB7XG5cdG1hcmdpbjogXCJcIixcblx0cGFkZGluZzogXCJcIixcblx0Ym9yZGVyOiBcIldpZHRoXCJcbn0sIGZ1bmN0aW9uKCBwcmVmaXgsIHN1ZmZpeCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHtcblx0XHRleHBhbmQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBpID0gMCxcblx0XHRcdFx0ZXhwYW5kZWQgPSB7fSxcblxuXHRcdFx0XHQvLyBBc3N1bWVzIGEgc2luZ2xlIG51bWJlciBpZiBub3QgYSBzdHJpbmdcblx0XHRcdFx0cGFydHMgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZS5zcGxpdCggXCIgXCIgKSA6IFsgdmFsdWUgXTtcblxuXHRcdFx0Zm9yICggOyBpIDwgNDsgaSsrICkge1xuXHRcdFx0XHRleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9XG5cdFx0XHRcdFx0cGFydHNbIGkgXSB8fCBwYXJ0c1sgaSAtIDIgXSB8fCBwYXJ0c1sgMCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZXhwYW5kZWQ7XG5cdFx0fVxuXHR9O1xuXG5cdGlmICggcHJlZml4ICE9PSBcIm1hcmdpblwiICkge1xuXHRcdGpRdWVyeS5jc3NIb29rc1sgcHJlZml4ICsgc3VmZml4IF0uc2V0ID0gc2V0UG9zaXRpdmVOdW1iZXI7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRjc3M6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgc3R5bGVzLCBsZW4sXG5cdFx0XHRcdG1hcCA9IHt9LFxuXHRcdFx0XHRpID0gMDtcblxuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBuYW1lICkgKSB7XG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xuXHRcdFx0XHRsZW4gPSBuYW1lLmxlbmd0aDtcblxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRcdFx0XHRtYXBbIG5hbWVbIGkgXSBdID0galF1ZXJ5LmNzcyggZWxlbSwgbmFtZVsgaSBdLCBmYWxzZSwgc3R5bGVzICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gbWFwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdmFsdWUgIT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgbmFtZSwgdmFsdWUgKSA6XG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcblx0XHR9LCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fVxufSApO1xuXG5cbmZ1bmN0aW9uIFR3ZWVuKCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApIHtcblx0cmV0dXJuIG5ldyBUd2Vlbi5wcm90b3R5cGUuaW5pdCggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKTtcbn1cbmpRdWVyeS5Ud2VlbiA9IFR3ZWVuO1xuXG5Ud2Vlbi5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBUd2Vlbixcblx0aW5pdDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nLCB1bml0ICkge1xuXHRcdHRoaXMuZWxlbSA9IGVsZW07XG5cdFx0dGhpcy5wcm9wID0gcHJvcDtcblx0XHR0aGlzLmVhc2luZyA9IGVhc2luZyB8fCBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0O1xuXHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XG5cdFx0dGhpcy5zdGFydCA9IHRoaXMubm93ID0gdGhpcy5jdXIoKTtcblx0XHR0aGlzLmVuZCA9IGVuZDtcblx0XHR0aGlzLnVuaXQgPSB1bml0IHx8ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdID8gXCJcIiA6IFwicHhcIiApO1xuXHR9LFxuXHRjdXI6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRyZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID9cblx0XHRcdGhvb2tzLmdldCggdGhpcyApIDpcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5nZXQoIHRoaXMgKTtcblx0fSxcblx0cnVuOiBmdW5jdGlvbiggcGVyY2VudCApIHtcblx0XHR2YXIgZWFzZWQsXG5cdFx0XHRob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5kdXJhdGlvbiApIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBqUXVlcnkuZWFzaW5nWyB0aGlzLmVhc2luZyBdKFxuXHRcdFx0XHRwZXJjZW50LCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKiBwZXJjZW50LCAwLCAxLCB0aGlzLm9wdGlvbnMuZHVyYXRpb25cblx0XHRcdCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBwZXJjZW50O1xuXHRcdH1cblx0XHR0aGlzLm5vdyA9ICggdGhpcy5lbmQgLSB0aGlzLnN0YXJ0ICkgKiBlYXNlZCArIHRoaXMuc3RhcnQ7XG5cblx0XHRpZiAoIHRoaXMub3B0aW9ucy5zdGVwICkge1xuXHRcdFx0dGhpcy5vcHRpb25zLnN0ZXAuY2FsbCggdGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgaG9va3Muc2V0ICkge1xuXHRcdFx0aG9va3Muc2V0KCB0aGlzICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQoIHRoaXMgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cbn07XG5cblR3ZWVuLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZSA9IFR3ZWVuLnByb3RvdHlwZTtcblxuVHdlZW4ucHJvcEhvb2tzID0ge1xuXHRfZGVmYXVsdDoge1xuXHRcdGdldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdFx0dmFyIHJlc3VsdDtcblxuXHRcdFx0Ly8gVXNlIGEgcHJvcGVydHkgb24gdGhlIGVsZW1lbnQgZGlyZWN0bHkgd2hlbiBpdCBpcyBub3QgYSBET00gZWxlbWVudCxcblx0XHRcdC8vIG9yIHdoZW4gdGhlcmUgaXMgbm8gbWF0Y2hpbmcgc3R5bGUgcHJvcGVydHkgdGhhdCBleGlzdHMuXG5cdFx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgIT09IDEgfHxcblx0XHRcdFx0dHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdICE9IG51bGwgJiYgdHdlZW4uZWxlbS5zdHlsZVsgdHdlZW4ucHJvcCBdID09IG51bGwgKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF07XG5cdFx0XHR9XG5cblx0XHRcdC8vIFBhc3NpbmcgYW4gZW1wdHkgc3RyaW5nIGFzIGEgM3JkIHBhcmFtZXRlciB0byAuY3NzIHdpbGwgYXV0b21hdGljYWxseVxuXHRcdFx0Ly8gYXR0ZW1wdCBhIHBhcnNlRmxvYXQgYW5kIGZhbGxiYWNrIHRvIGEgc3RyaW5nIGlmIHRoZSBwYXJzZSBmYWlscy5cblx0XHRcdC8vIFNpbXBsZSB2YWx1ZXMgc3VjaCBhcyBcIjEwcHhcIiBhcmUgcGFyc2VkIHRvIEZsb2F0O1xuXHRcdFx0Ly8gY29tcGxleCB2YWx1ZXMgc3VjaCBhcyBcInJvdGF0ZSgxcmFkKVwiIGFyZSByZXR1cm5lZCBhcy1pcy5cblx0XHRcdHJlc3VsdCA9IGpRdWVyeS5jc3MoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIFwiXCIgKTtcblxuXHRcdFx0Ly8gRW1wdHkgc3RyaW5ncywgbnVsbCwgdW5kZWZpbmVkIGFuZCBcImF1dG9cIiBhcmUgY29udmVydGVkIHRvIDAuXG5cdFx0XHRyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXG5cdFx0XHQvLyBVc2Ugc3RlcCBob29rIGZvciBiYWNrIGNvbXBhdC5cblx0XHRcdC8vIFVzZSBjc3NIb29rIGlmIGl0cyB0aGVyZS5cblx0XHRcdC8vIFVzZSAuc3R5bGUgaWYgYXZhaWxhYmxlIGFuZCB1c2UgcGxhaW4gcHJvcGVydGllcyB3aGVyZSBhdmFpbGFibGUuXG5cdFx0XHRpZiAoIGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XG5cdFx0XHR9IGVsc2UgaWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0XHRqUXVlcnkuY3NzSG9va3NbIHR3ZWVuLnByb3AgXSB8fFxuXHRcdFx0XHRcdHR3ZWVuLmVsZW0uc3R5bGVbIGZpbmFsUHJvcE5hbWUoIHR3ZWVuLnByb3AgKSBdICE9IG51bGwgKSApIHtcblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCB0d2Vlbi5lbGVtLCB0d2Vlbi5wcm9wLCB0d2Vlbi5ub3cgKyB0d2Vlbi51bml0ICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG4vLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuLy8gUGFuaWMgYmFzZWQgYXBwcm9hY2ggdG8gc2V0dGluZyB0aGluZ3Mgb24gZGlzY29ubmVjdGVkIG5vZGVzXG5Ud2Vlbi5wcm9wSG9va3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7XG5cdHNldDogZnVuY3Rpb24oIHR3ZWVuICkge1xuXHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAmJiB0d2Vlbi5lbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZWFzaW5nID0ge1xuXHRsaW5lYXI6IGZ1bmN0aW9uKCBwICkge1xuXHRcdHJldHVybiBwO1xuXHR9LFxuXHRzd2luZzogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIDAuNSAtIE1hdGguY29zKCBwICogTWF0aC5QSSApIC8gMjtcblx0fSxcblx0X2RlZmF1bHQ6IFwic3dpbmdcIlxufTtcblxualF1ZXJ5LmZ4ID0gVHdlZW4ucHJvdG90eXBlLmluaXQ7XG5cbi8vIEJhY2sgY29tcGF0IDwxLjggZXh0ZW5zaW9uIHBvaW50XG5qUXVlcnkuZnguc3RlcCA9IHt9O1xuXG5cblxuXG52YXJcblx0ZnhOb3csIGluUHJvZ3Jlc3MsXG5cdHJmeHR5cGVzID0gL14oPzp0b2dnbGV8c2hvd3xoaWRlKSQvLFxuXHRycnVuID0gL3F1ZXVlSG9va3MkLztcblxuZnVuY3Rpb24gc2NoZWR1bGUoKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRpZiAoIGRvY3VtZW50LmhpZGRlbiA9PT0gZmFsc2UgJiYgd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSApIHtcblx0XHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIHNjaGVkdWxlICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBzY2hlZHVsZSwgalF1ZXJ5LmZ4LmludGVydmFsICk7XG5cdFx0fVxuXG5cdFx0alF1ZXJ5LmZ4LnRpY2soKTtcblx0fVxufVxuXG4vLyBBbmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJvbm91c2x5XG5mdW5jdGlvbiBjcmVhdGVGeE5vdygpIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdGZ4Tm93ID0gdW5kZWZpbmVkO1xuXHR9ICk7XG5cdHJldHVybiAoIGZ4Tm93ID0gRGF0ZS5ub3coKSApO1xufVxuXG4vLyBHZW5lcmF0ZSBwYXJhbWV0ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFuaW1hdGlvblxuZnVuY3Rpb24gZ2VuRngoIHR5cGUsIGluY2x1ZGVXaWR0aCApIHtcblx0dmFyIHdoaWNoLFxuXHRcdGkgPSAwLFxuXHRcdGF0dHJzID0geyBoZWlnaHQ6IHR5cGUgfTtcblxuXHQvLyBJZiB3ZSBpbmNsdWRlIHdpZHRoLCBzdGVwIHZhbHVlIGlzIDEgdG8gZG8gYWxsIGNzc0V4cGFuZCB2YWx1ZXMsXG5cdC8vIG90aGVyd2lzZSBzdGVwIHZhbHVlIGlzIDIgdG8gc2tpcCBvdmVyIExlZnQgYW5kIFJpZ2h0XG5cdGluY2x1ZGVXaWR0aCA9IGluY2x1ZGVXaWR0aCA/IDEgOiAwO1xuXHRmb3IgKCA7IGkgPCA0OyBpICs9IDIgLSBpbmNsdWRlV2lkdGggKSB7XG5cdFx0d2hpY2ggPSBjc3NFeHBhbmRbIGkgXTtcblx0XHRhdHRyc1sgXCJtYXJnaW5cIiArIHdoaWNoIF0gPSBhdHRyc1sgXCJwYWRkaW5nXCIgKyB3aGljaCBdID0gdHlwZTtcblx0fVxuXG5cdGlmICggaW5jbHVkZVdpZHRoICkge1xuXHRcdGF0dHJzLm9wYWNpdHkgPSBhdHRycy53aWR0aCA9IHR5cGU7XG5cdH1cblxuXHRyZXR1cm4gYXR0cnM7XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVR3ZWVuKCB2YWx1ZSwgcHJvcCwgYW5pbWF0aW9uICkge1xuXHR2YXIgdHdlZW4sXG5cdFx0Y29sbGVjdGlvbiA9ICggQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW10gKS5jb25jYXQoIEFuaW1hdGlvbi50d2VlbmVyc1sgXCIqXCIgXSApLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBjb2xsZWN0aW9uLmxlbmd0aDtcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoICggdHdlZW4gPSBjb2xsZWN0aW9uWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgcHJvcCwgdmFsdWUgKSApICkge1xuXG5cdFx0XHQvLyBXZSdyZSBkb25lIHdpdGggdGhpcyBwcm9wZXJ0eVxuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBkZWZhdWx0UHJlZmlsdGVyKCBlbGVtLCBwcm9wcywgb3B0cyApIHtcblx0dmFyIHByb3AsIHZhbHVlLCB0b2dnbGUsIGhvb2tzLCBvbGRmaXJlLCBwcm9wVHdlZW4sIHJlc3RvcmVEaXNwbGF5LCBkaXNwbGF5LFxuXHRcdGlzQm94ID0gXCJ3aWR0aFwiIGluIHByb3BzIHx8IFwiaGVpZ2h0XCIgaW4gcHJvcHMsXG5cdFx0YW5pbSA9IHRoaXMsXG5cdFx0b3JpZyA9IHt9LFxuXHRcdHN0eWxlID0gZWxlbS5zdHlsZSxcblx0XHRoaWRkZW4gPSBlbGVtLm5vZGVUeXBlICYmIGlzSGlkZGVuV2l0aGluVHJlZSggZWxlbSApLFxuXHRcdGRhdGFTaG93ID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImZ4c2hvd1wiICk7XG5cblx0Ly8gUXVldWUtc2tpcHBpbmcgYW5pbWF0aW9ucyBoaWphY2sgdGhlIGZ4IGhvb2tzXG5cdGlmICggIW9wdHMucXVldWUgKSB7XG5cdFx0aG9va3MgPSBqUXVlcnkuX3F1ZXVlSG9va3MoIGVsZW0sIFwiZnhcIiApO1xuXHRcdGlmICggaG9va3MudW5xdWV1ZWQgPT0gbnVsbCApIHtcblx0XHRcdGhvb2tzLnVucXVldWVkID0gMDtcblx0XHRcdG9sZGZpcmUgPSBob29rcy5lbXB0eS5maXJlO1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICFob29rcy51bnF1ZXVlZCApIHtcblx0XHRcdFx0XHRvbGRmaXJlKCk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRcdGhvb2tzLnVucXVldWVkKys7XG5cblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIEVuc3VyZSB0aGUgY29tcGxldGUgaGFuZGxlciBpcyBjYWxsZWQgYmVmb3JlIHRoaXMgY29tcGxldGVzXG5cdFx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGhvb2tzLnVucXVldWVkLS07XG5cdFx0XHRcdGlmICggIWpRdWVyeS5xdWV1ZSggZWxlbSwgXCJmeFwiICkubGVuZ3RoICkge1xuXHRcdFx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIERldGVjdCBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRmb3IgKCBwcm9wIGluIHByb3BzICkge1xuXHRcdHZhbHVlID0gcHJvcHNbIHByb3AgXTtcblx0XHRpZiAoIHJmeHR5cGVzLnRlc3QoIHZhbHVlICkgKSB7XG5cdFx0XHRkZWxldGUgcHJvcHNbIHByb3AgXTtcblx0XHRcdHRvZ2dsZSA9IHRvZ2dsZSB8fCB2YWx1ZSA9PT0gXCJ0b2dnbGVcIjtcblx0XHRcdGlmICggdmFsdWUgPT09ICggaGlkZGVuID8gXCJoaWRlXCIgOiBcInNob3dcIiApICkge1xuXG5cdFx0XHRcdC8vIFByZXRlbmQgdG8gYmUgaGlkZGVuIGlmIHRoaXMgaXMgYSBcInNob3dcIiBhbmRcblx0XHRcdFx0Ly8gdGhlcmUgaXMgc3RpbGwgZGF0YSBmcm9tIGEgc3RvcHBlZCBzaG93L2hpZGVcblx0XHRcdFx0aWYgKCB2YWx1ZSA9PT0gXCJzaG93XCIgJiYgZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IHRydWU7XG5cblx0XHRcdFx0Ly8gSWdub3JlIGFsbCBvdGhlciBuby1vcCBzaG93L2hpZGUgZGF0YVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRvcmlnWyBwcm9wIF0gPSBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdIHx8IGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIEJhaWwgb3V0IGlmIHRoaXMgaXMgYSBuby1vcCBsaWtlIC5oaWRlKCkuaGlkZSgpXG5cdHByb3BUd2VlbiA9ICFqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcHMgKTtcblx0aWYgKCAhcHJvcFR3ZWVuICYmIGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBvcmlnICkgKSB7XG5cdFx0cmV0dXJuO1xuXHR9XG5cblx0Ly8gUmVzdHJpY3QgXCJvdmVyZmxvd1wiIGFuZCBcImRpc3BsYXlcIiBzdHlsZXMgZHVyaW5nIGJveCBhbmltYXRpb25zXG5cdGlmICggaXNCb3ggJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTVcblx0XHQvLyBSZWNvcmQgYWxsIDMgb3ZlcmZsb3cgYXR0cmlidXRlcyBiZWNhdXNlIElFIGRvZXMgbm90IGluZmVyIHRoZSBzaG9ydGhhbmRcblx0XHQvLyBmcm9tIGlkZW50aWNhbGx5LXZhbHVlZCBvdmVyZmxvd1ggYW5kIG92ZXJmbG93WSBhbmQgRWRnZSBqdXN0IG1pcnJvcnNcblx0XHQvLyB0aGUgb3ZlcmZsb3dYIHZhbHVlIHRoZXJlLlxuXHRcdG9wdHMub3ZlcmZsb3cgPSBbIHN0eWxlLm92ZXJmbG93LCBzdHlsZS5vdmVyZmxvd1gsIHN0eWxlLm92ZXJmbG93WSBdO1xuXG5cdFx0Ly8gSWRlbnRpZnkgYSBkaXNwbGF5IHR5cGUsIHByZWZlcnJpbmcgb2xkIHNob3cvaGlkZSBkYXRhIG92ZXIgdGhlIENTUyBjYXNjYWRlXG5cdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhU2hvdyAmJiBkYXRhU2hvdy5kaXNwbGF5O1xuXHRcdGlmICggcmVzdG9yZURpc3BsYXkgPT0gbnVsbCApIHtcblx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGF0YVByaXYuZ2V0KCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdH1cblx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRpZiAoIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xuXHRcdFx0aWYgKCByZXN0b3JlRGlzcGxheSApIHtcblx0XHRcdFx0ZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBHZXQgbm9uZW1wdHkgdmFsdWUocykgYnkgdGVtcG9yYXJpbHkgZm9yY2luZyB2aXNpYmlsaXR5XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0XHRyZXN0b3JlRGlzcGxheSA9IGVsZW0uc3R5bGUuZGlzcGxheSB8fCByZXN0b3JlRGlzcGxheTtcblx0XHRcdFx0ZGlzcGxheSA9IGpRdWVyeS5jc3MoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEFuaW1hdGUgaW5saW5lIGVsZW1lbnRzIGFzIGlubGluZS1ibG9ja1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJpbmxpbmVcIiB8fCBkaXNwbGF5ID09PSBcImlubGluZS1ibG9ja1wiICYmIHJlc3RvcmVEaXNwbGF5ICE9IG51bGwgKSB7XG5cdFx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwiZmxvYXRcIiApID09PSBcIm5vbmVcIiApIHtcblxuXHRcdFx0XHQvLyBSZXN0b3JlIHRoZSBvcmlnaW5hbCBkaXNwbGF5IHZhbHVlIGF0IHRoZSBlbmQgb2YgcHVyZSBzaG93L2hpZGUgYW5pbWF0aW9uc1xuXHRcdFx0XHRpZiAoICFwcm9wVHdlZW4gKSB7XG5cdFx0XHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSByZXN0b3JlRGlzcGxheTtcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0XHRcdFx0ZGlzcGxheSA9IHN0eWxlLmRpc3BsYXk7XG5cdFx0XHRcdFx0XHRyZXN0b3JlRGlzcGxheSA9IGRpc3BsYXkgPT09IFwibm9uZVwiID8gXCJcIiA6IGRpc3BsYXk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSBcImlubGluZS1ibG9ja1wiO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdGlmICggb3B0cy5vdmVyZmxvdyApIHtcblx0XHRzdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XG5cdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXHRcdFx0c3R5bGUub3ZlcmZsb3cgPSBvcHRzLm92ZXJmbG93WyAwIF07XG5cdFx0XHRzdHlsZS5vdmVyZmxvd1ggPSBvcHRzLm92ZXJmbG93WyAxIF07XG5cdFx0XHRzdHlsZS5vdmVyZmxvd1kgPSBvcHRzLm92ZXJmbG93WyAyIF07XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gSW1wbGVtZW50IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdHByb3BUd2VlbiA9IGZhbHNlO1xuXHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cblx0XHQvLyBHZW5lcmFsIHNob3cvaGlkZSBzZXR1cCBmb3IgdGhpcyBlbGVtZW50IGFuaW1hdGlvblxuXHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdGlmICggZGF0YVNob3cgKSB7XG5cdFx0XHRcdGlmICggXCJoaWRkZW5cIiBpbiBkYXRhU2hvdyApIHtcblx0XHRcdFx0XHRoaWRkZW4gPSBkYXRhU2hvdy5oaWRkZW47XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRhdGFTaG93ID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCBcImZ4c2hvd1wiLCB7IGRpc3BsYXk6IHJlc3RvcmVEaXNwbGF5IH0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RvcmUgaGlkZGVuL3Zpc2libGUgZm9yIHRvZ2dsZSBzbyBgLnN0b3AoKS50b2dnbGUoKWAgXCJyZXZlcnNlc1wiXG5cdFx0XHRpZiAoIHRvZ2dsZSApIHtcblx0XHRcdFx0ZGF0YVNob3cuaGlkZGVuID0gIWhpZGRlbjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2hvdyBlbGVtZW50cyBiZWZvcmUgYW5pbWF0aW5nIHRoZW1cblx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0sIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tbG9vcC1mdW5jICovXG5cblx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8qIGVzbGludC1lbmFibGUgbm8tbG9vcC1mdW5jICovXG5cblx0XHRcdFx0Ly8gVGhlIGZpbmFsIHN0ZXAgb2YgYSBcImhpZGVcIiBhbmltYXRpb24gaXMgYWN0dWFsbHkgaGlkaW5nIHRoZSBlbGVtZW50XG5cdFx0XHRcdGlmICggIWhpZGRlbiApIHtcblx0XHRcdFx0XHRzaG93SGlkZSggWyBlbGVtIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiZnhzaG93XCIgKTtcblx0XHRcdFx0Zm9yICggcHJvcCBpbiBvcmlnICkge1xuXHRcdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgb3JpZ1sgcHJvcCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHQvLyBQZXItcHJvcGVydHkgc2V0dXBcblx0XHRwcm9wVHdlZW4gPSBjcmVhdGVUd2VlbiggaGlkZGVuID8gZGF0YVNob3dbIHByb3AgXSA6IDAsIHByb3AsIGFuaW0gKTtcblx0XHRpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHtcblx0XHRcdGRhdGFTaG93WyBwcm9wIF0gPSBwcm9wVHdlZW4uc3RhcnQ7XG5cdFx0XHRpZiAoIGhpZGRlbiApIHtcblx0XHRcdFx0cHJvcFR3ZWVuLmVuZCA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdFx0cHJvcFR3ZWVuLnN0YXJ0ID0gMDtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gcHJvcEZpbHRlciggcHJvcHMsIHNwZWNpYWxFYXNpbmcgKSB7XG5cdHZhciBpbmRleCwgbmFtZSwgZWFzaW5nLCB2YWx1ZSwgaG9va3M7XG5cblx0Ly8gY2FtZWxDYXNlLCBzcGVjaWFsRWFzaW5nIGFuZCBleHBhbmQgY3NzSG9vayBwYXNzXG5cdGZvciAoIGluZGV4IGluIHByb3BzICkge1xuXHRcdG5hbWUgPSBjYW1lbENhc2UoIGluZGV4ICk7XG5cdFx0ZWFzaW5nID0gc3BlY2lhbEVhc2luZ1sgbmFtZSBdO1xuXHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF07XG5cdFx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcblx0XHRcdHZhbHVlID0gcHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgMCBdO1xuXHRcdH1cblxuXHRcdGlmICggaW5kZXggIT09IG5hbWUgKSB7XG5cdFx0XHRwcm9wc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XG5cdFx0fVxuXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcblx0XHRpZiAoIGhvb2tzICYmIFwiZXhwYW5kXCIgaW4gaG9va3MgKSB7XG5cdFx0XHR2YWx1ZSA9IGhvb2tzLmV4cGFuZCggdmFsdWUgKTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xuXG5cdFx0XHQvLyBOb3QgcXVpdGUgJC5leHRlbmQsIHRoaXMgd29uJ3Qgb3ZlcndyaXRlIGV4aXN0aW5nIGtleXMuXG5cdFx0XHQvLyBSZXVzaW5nICdpbmRleCcgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXG5cdFx0XHRmb3IgKCBpbmRleCBpbiB2YWx1ZSApIHtcblx0XHRcdFx0aWYgKCAhKCBpbmRleCBpbiBwcm9wcyApICkge1xuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XG5cdFx0XHRcdFx0c3BlY2lhbEVhc2luZ1sgaW5kZXggXSA9IGVhc2luZztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHRzcGVjaWFsRWFzaW5nWyBuYW1lIF0gPSBlYXNpbmc7XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIEFuaW1hdGlvbiggZWxlbSwgcHJvcGVydGllcywgb3B0aW9ucyApIHtcblx0dmFyIHJlc3VsdCxcblx0XHRzdG9wcGVkLFxuXHRcdGluZGV4ID0gMCxcblx0XHRsZW5ndGggPSBBbmltYXRpb24ucHJlZmlsdGVycy5sZW5ndGgsXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBEb24ndCBtYXRjaCBlbGVtIGluIHRoZSA6YW5pbWF0ZWQgc2VsZWN0b3Jcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XG5cdFx0fSApLFxuXHRcdHRpY2sgPSBmdW5jdGlvbigpIHtcblx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcblx0XHRcdFx0cmVtYWluaW5nID0gTWF0aC5tYXgoIDAsIGFuaW1hdGlvbi5zdGFydFRpbWUgKyBhbmltYXRpb24uZHVyYXRpb24gLSBjdXJyZW50VGltZSApLFxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zIG9ubHlcblx0XHRcdFx0Ly8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAoIzEyNDk3KVxuXHRcdFx0XHR0ZW1wID0gcmVtYWluaW5nIC8gYW5pbWF0aW9uLmR1cmF0aW9uIHx8IDAsXG5cdFx0XHRcdHBlcmNlbnQgPSAxIC0gdGVtcCxcblx0XHRcdFx0aW5kZXggPSAwLFxuXHRcdFx0XHRsZW5ndGggPSBhbmltYXRpb24udHdlZW5zLmxlbmd0aDtcblxuXHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0YW5pbWF0aW9uLnR3ZWVuc1sgaW5kZXggXS5ydW4oIHBlcmNlbnQgKTtcblx0XHRcdH1cblxuXHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIHBlcmNlbnQsIHJlbWFpbmluZyBdICk7XG5cblx0XHRcdC8vIElmIHRoZXJlJ3MgbW9yZSB0byBkbywgeWllbGRcblx0XHRcdGlmICggcGVyY2VudCA8IDEgJiYgbGVuZ3RoICkge1xuXHRcdFx0XHRyZXR1cm4gcmVtYWluaW5nO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiB0aGlzIHdhcyBhbiBlbXB0eSBhbmltYXRpb24sIHN5bnRoZXNpemUgYSBmaW5hbCBwcm9ncmVzcyBub3RpZmljYXRpb25cblx0XHRcdGlmICggIWxlbmd0aCApIHtcblx0XHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIDEsIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBSZXNvbHZlIHRoZSBhbmltYXRpb24gYW5kIHJlcG9ydCBpdHMgY29uY2x1c2lvblxuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uIF0gKTtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9LFxuXHRcdGFuaW1hdGlvbiA9IGRlZmVycmVkLnByb21pc2UoIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRwcm9wczogalF1ZXJ5LmV4dGVuZCgge30sIHByb3BlcnRpZXMgKSxcblx0XHRcdG9wdHM6IGpRdWVyeS5leHRlbmQoIHRydWUsIHtcblx0XHRcdFx0c3BlY2lhbEVhc2luZzoge30sXG5cdFx0XHRcdGVhc2luZzogalF1ZXJ5LmVhc2luZy5fZGVmYXVsdFxuXHRcdFx0fSwgb3B0aW9ucyApLFxuXHRcdFx0b3JpZ2luYWxQcm9wZXJ0aWVzOiBwcm9wZXJ0aWVzLFxuXHRcdFx0b3JpZ2luYWxPcHRpb25zOiBvcHRpb25zLFxuXHRcdFx0c3RhcnRUaW1lOiBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0ZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sXG5cdFx0XHR0d2VlbnM6IFtdLFxuXHRcdFx0Y3JlYXRlVHdlZW46IGZ1bmN0aW9uKCBwcm9wLCBlbmQgKSB7XG5cdFx0XHRcdHZhciB0d2VlbiA9IGpRdWVyeS5Ud2VlbiggZWxlbSwgYW5pbWF0aW9uLm9wdHMsIHByb3AsIGVuZCxcblx0XHRcdFx0XHRcdGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmdbIHByb3AgXSB8fCBhbmltYXRpb24ub3B0cy5lYXNpbmcgKTtcblx0XHRcdFx0YW5pbWF0aW9uLnR3ZWVucy5wdXNoKCB0d2VlbiApO1xuXHRcdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0XHR9LFxuXHRcdFx0c3RvcDogZnVuY3Rpb24oIGdvdG9FbmQgKSB7XG5cdFx0XHRcdHZhciBpbmRleCA9IDAsXG5cblx0XHRcdFx0XHQvLyBJZiB3ZSBhcmUgZ29pbmcgdG8gdGhlIGVuZCwgd2Ugd2FudCB0byBydW4gYWxsIHRoZSB0d2VlbnNcblx0XHRcdFx0XHQvLyBvdGhlcndpc2Ugd2Ugc2tpcCB0aGlzIHBhcnRcblx0XHRcdFx0XHRsZW5ndGggPSBnb3RvRW5kID8gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGggOiAwO1xuXHRcdFx0XHRpZiAoIHN0b3BwZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblx0XHRcdFx0c3RvcHBlZCA9IHRydWU7XG5cdFx0XHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRcdFx0YW5pbWF0aW9uLnR3ZWVuc1sgaW5kZXggXS5ydW4oIDEgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFJlc29sdmUgd2hlbiB3ZSBwbGF5ZWQgdGhlIGxhc3QgZnJhbWU7IG90aGVyd2lzZSwgcmVqZWN0XG5cdFx0XHRcdGlmICggZ290b0VuZCApIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XG5cdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9XG5cdFx0fSApLFxuXHRcdHByb3BzID0gYW5pbWF0aW9uLnByb3BzO1xuXG5cdHByb3BGaWx0ZXIoIHByb3BzLCBhbmltYXRpb24ub3B0cy5zcGVjaWFsRWFzaW5nICk7XG5cblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRyZXN1bHQgPSBBbmltYXRpb24ucHJlZmlsdGVyc1sgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIGVsZW0sIHByb3BzLCBhbmltYXRpb24ub3B0cyApO1xuXHRcdGlmICggcmVzdWx0ICkge1xuXHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCByZXN1bHQuc3RvcCApICkge1xuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIGFuaW1hdGlvbi5lbGVtLCBhbmltYXRpb24ub3B0cy5xdWV1ZSApLnN0b3AgPVxuXHRcdFx0XHRcdHJlc3VsdC5zdG9wLmJpbmQoIHJlc3VsdCApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHR9XG5cdH1cblxuXHRqUXVlcnkubWFwKCBwcm9wcywgY3JlYXRlVHdlZW4sIGFuaW1hdGlvbiApO1xuXG5cdGlmICggaXNGdW5jdGlvbiggYW5pbWF0aW9uLm9wdHMuc3RhcnQgKSApIHtcblx0XHRhbmltYXRpb24ub3B0cy5zdGFydC5jYWxsKCBlbGVtLCBhbmltYXRpb24gKTtcblx0fVxuXG5cdC8vIEF0dGFjaCBjYWxsYmFja3MgZnJvbSBvcHRpb25zXG5cdGFuaW1hdGlvblxuXHRcdC5wcm9ncmVzcyggYW5pbWF0aW9uLm9wdHMucHJvZ3Jlc3MgKVxuXHRcdC5kb25lKCBhbmltYXRpb24ub3B0cy5kb25lLCBhbmltYXRpb24ub3B0cy5jb21wbGV0ZSApXG5cdFx0LmZhaWwoIGFuaW1hdGlvbi5vcHRzLmZhaWwgKVxuXHRcdC5hbHdheXMoIGFuaW1hdGlvbi5vcHRzLmFsd2F5cyApO1xuXG5cdGpRdWVyeS5meC50aW1lcihcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aWNrLCB7XG5cdFx0XHRlbGVtOiBlbGVtLFxuXHRcdFx0YW5pbTogYW5pbWF0aW9uLFxuXHRcdFx0cXVldWU6IGFuaW1hdGlvbi5vcHRzLnF1ZXVlXG5cdFx0fSApXG5cdCk7XG5cblx0cmV0dXJuIGFuaW1hdGlvbjtcbn1cblxualF1ZXJ5LkFuaW1hdGlvbiA9IGpRdWVyeS5leHRlbmQoIEFuaW1hdGlvbiwge1xuXG5cdHR3ZWVuZXJzOiB7XG5cdFx0XCIqXCI6IFsgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkge1xuXHRcdFx0dmFyIHR3ZWVuID0gdGhpcy5jcmVhdGVUd2VlbiggcHJvcCwgdmFsdWUgKTtcblx0XHRcdGFkanVzdENTUyggdHdlZW4uZWxlbSwgcHJvcCwgcmNzc051bS5leGVjKCB2YWx1ZSApLCB0d2VlbiApO1xuXHRcdFx0cmV0dXJuIHR3ZWVuO1xuXHRcdH0gXVxuXHR9LFxuXG5cdHR3ZWVuZXI6IGZ1bmN0aW9uKCBwcm9wcywgY2FsbGJhY2sgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBwcm9wcyApICkge1xuXHRcdFx0Y2FsbGJhY2sgPSBwcm9wcztcblx0XHRcdHByb3BzID0gWyBcIipcIiBdO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRwcm9wcyA9IHByb3BzLm1hdGNoKCBybm90aHRtbHdoaXRlICk7XG5cdFx0fVxuXG5cdFx0dmFyIHByb3AsXG5cdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRsZW5ndGggPSBwcm9wcy5sZW5ndGg7XG5cblx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0cHJvcCA9IHByb3BzWyBpbmRleCBdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gPSBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXTtcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9LFxuXG5cdHByZWZpbHRlcnM6IFsgZGVmYXVsdFByZWZpbHRlciBdLFxuXG5cdHByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkge1xuXHRcdGlmICggcHJlcGVuZCApIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnVuc2hpZnQoIGNhbGxiYWNrICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdEFuaW1hdGlvbi5wcmVmaWx0ZXJzLnB1c2goIGNhbGxiYWNrICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHtcblx0dmFyIG9wdCA9IHNwZWVkICYmIHR5cGVvZiBzcGVlZCA9PT0gXCJvYmplY3RcIiA/IGpRdWVyeS5leHRlbmQoIHt9LCBzcGVlZCApIDoge1xuXHRcdGNvbXBsZXRlOiBmbiB8fCAhZm4gJiYgZWFzaW5nIHx8XG5cdFx0XHRpc0Z1bmN0aW9uKCBzcGVlZCApICYmIHNwZWVkLFxuXHRcdGR1cmF0aW9uOiBzcGVlZCxcblx0XHRlYXNpbmc6IGZuICYmIGVhc2luZyB8fCBlYXNpbmcgJiYgIWlzRnVuY3Rpb24oIGVhc2luZyApICYmIGVhc2luZ1xuXHR9O1xuXG5cdC8vIEdvIHRvIHRoZSBlbmQgc3RhdGUgaWYgZnggYXJlIG9mZlxuXHRpZiAoIGpRdWVyeS5meC5vZmYgKSB7XG5cdFx0b3B0LmR1cmF0aW9uID0gMDtcblxuXHR9IGVsc2Uge1xuXHRcdGlmICggdHlwZW9mIG9wdC5kdXJhdGlvbiAhPT0gXCJudW1iZXJcIiApIHtcblx0XHRcdGlmICggb3B0LmR1cmF0aW9uIGluIGpRdWVyeS5meC5zcGVlZHMgKSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHNbIG9wdC5kdXJhdGlvbiBdO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRvcHQuZHVyYXRpb24gPSBqUXVlcnkuZnguc3BlZWRzLl9kZWZhdWx0O1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIE5vcm1hbGl6ZSBvcHQucXVldWUgLSB0cnVlL3VuZGVmaW5lZC9udWxsIC0+IFwiZnhcIlxuXHRpZiAoIG9wdC5xdWV1ZSA9PSBudWxsIHx8IG9wdC5xdWV1ZSA9PT0gdHJ1ZSApIHtcblx0XHRvcHQucXVldWUgPSBcImZ4XCI7XG5cdH1cblxuXHQvLyBRdWV1ZWluZ1xuXHRvcHQub2xkID0gb3B0LmNvbXBsZXRlO1xuXG5cdG9wdC5jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggaXNGdW5jdGlvbiggb3B0Lm9sZCApICkge1xuXHRcdFx0b3B0Lm9sZC5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHQucXVldWUgKSB7XG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgb3B0LnF1ZXVlICk7XG5cdFx0fVxuXHR9O1xuXG5cdHJldHVybiBvcHQ7XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGZhZGVUbzogZnVuY3Rpb24oIHNwZWVkLCB0bywgZWFzaW5nLCBjYWxsYmFjayApIHtcblxuXHRcdC8vIFNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMFxuXHRcdHJldHVybiB0aGlzLmZpbHRlciggaXNIaWRkZW5XaXRoaW5UcmVlICkuY3NzKCBcIm9wYWNpdHlcIiwgMCApLnNob3coKVxuXG5cdFx0XHQvLyBBbmltYXRlIHRvIHRoZSB2YWx1ZSBzcGVjaWZpZWRcblx0XHRcdC5lbmQoKS5hbmltYXRlKCB7IG9wYWNpdHk6IHRvIH0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH0sXG5cdGFuaW1hdGU6IGZ1bmN0aW9uKCBwcm9wLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHR2YXIgZW1wdHkgPSBqUXVlcnkuaXNFbXB0eU9iamVjdCggcHJvcCApLFxuXHRcdFx0b3B0YWxsID0galF1ZXJ5LnNwZWVkKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApLFxuXHRcdFx0ZG9BbmltYXRpb24gPSBmdW5jdGlvbigpIHtcblxuXHRcdFx0XHQvLyBPcGVyYXRlIG9uIGEgY29weSBvZiBwcm9wIHNvIHBlci1wcm9wZXJ0eSBlYXNpbmcgd29uJ3QgYmUgbG9zdFxuXHRcdFx0XHR2YXIgYW5pbSA9IEFuaW1hdGlvbiggdGhpcywgalF1ZXJ5LmV4dGVuZCgge30sIHByb3AgKSwgb3B0YWxsICk7XG5cblx0XHRcdFx0Ly8gRW1wdHkgYW5pbWF0aW9ucywgb3IgZmluaXNoaW5nIHJlc29sdmVzIGltbWVkaWF0ZWx5XG5cdFx0XHRcdGlmICggZW1wdHkgfHwgZGF0YVByaXYuZ2V0KCB0aGlzLCBcImZpbmlzaFwiICkgKSB7XG5cdFx0XHRcdFx0YW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0XHRkb0FuaW1hdGlvbi5maW5pc2ggPSBkb0FuaW1hdGlvbjtcblxuXHRcdHJldHVybiBlbXB0eSB8fCBvcHRhbGwucXVldWUgPT09IGZhbHNlID9cblx0XHRcdHRoaXMuZWFjaCggZG9BbmltYXRpb24gKSA6XG5cdFx0XHR0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7XG5cdH0sXG5cdHN0b3A6IGZ1bmN0aW9uKCB0eXBlLCBjbGVhclF1ZXVlLCBnb3RvRW5kICkge1xuXHRcdHZhciBzdG9wUXVldWUgPSBmdW5jdGlvbiggaG9va3MgKSB7XG5cdFx0XHR2YXIgc3RvcCA9IGhvb2tzLnN0b3A7XG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcblx0XHRcdHN0b3AoIGdvdG9FbmQgKTtcblx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGdvdG9FbmQgPSBjbGVhclF1ZXVlO1xuXHRcdFx0Y2xlYXJRdWV1ZSA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHRpZiAoIGNsZWFyUXVldWUgJiYgdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBkZXF1ZXVlID0gdHJ1ZSxcblx0XHRcdFx0aW5kZXggPSB0eXBlICE9IG51bGwgJiYgdHlwZSArIFwicXVldWVIb29rc1wiLFxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxuXHRcdFx0XHRkYXRhID0gZGF0YVByaXYuZ2V0KCB0aGlzICk7XG5cblx0XHRcdGlmICggaW5kZXggKSB7XG5cdFx0XHRcdGlmICggZGF0YVsgaW5kZXggXSAmJiBkYXRhWyBpbmRleCBdLnN0b3AgKSB7XG5cdFx0XHRcdFx0c3RvcFF1ZXVlKCBkYXRhWyBpbmRleCBdICk7XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZvciAoIGluZGV4IGluIGRhdGEgKSB7XG5cdFx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRlc3QoIGluZGV4ICkgKSB7XG5cdFx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJlxuXHRcdFx0XHRcdCggdHlwZSA9PSBudWxsIHx8IHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApICkge1xuXG5cdFx0XHRcdFx0dGltZXJzWyBpbmRleCBdLmFuaW0uc3RvcCggZ290b0VuZCApO1xuXHRcdFx0XHRcdGRlcXVldWUgPSBmYWxzZTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN0YXJ0IHRoZSBuZXh0IGluIHRoZSBxdWV1ZSBpZiB0aGUgbGFzdCBzdGVwIHdhc24ndCBmb3JjZWQuXG5cdFx0XHQvLyBUaW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNoXG5cdFx0XHQvLyB3aWxsIGRlcXVldWUgYnV0IG9ubHkgaWYgdGhleSB3ZXJlIGdvdG9FbmQuXG5cdFx0XHRpZiAoIGRlcXVldWUgfHwgIWdvdG9FbmQgKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXHRmaW5pc2g6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdGlmICggdHlwZSAhPT0gZmFsc2UgKSB7XG5cdFx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGluZGV4LFxuXHRcdFx0XHRkYXRhID0gZGF0YVByaXYuZ2V0KCB0aGlzICksXG5cdFx0XHRcdHF1ZXVlID0gZGF0YVsgdHlwZSArIFwicXVldWVcIiBdLFxuXHRcdFx0XHRob29rcyA9IGRhdGFbIHR5cGUgKyBcInF1ZXVlSG9va3NcIiBdLFxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxuXHRcdFx0XHRsZW5ndGggPSBxdWV1ZSA/IHF1ZXVlLmxlbmd0aCA6IDA7XG5cblx0XHRcdC8vIEVuYWJsZSBmaW5pc2hpbmcgZmxhZyBvbiBwcml2YXRlIGRhdGFcblx0XHRcdGRhdGEuZmluaXNoID0gdHJ1ZTtcblxuXHRcdFx0Ly8gRW1wdHkgdGhlIHF1ZXVlIGZpcnN0XG5cdFx0XHRqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIFtdICk7XG5cblx0XHRcdGlmICggaG9va3MgJiYgaG9va3Muc3RvcCApIHtcblx0XHRcdFx0aG9va3Muc3RvcC5jYWxsKCB0aGlzLCB0cnVlICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhY3RpdmUgYW5pbWF0aW9ucywgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmIHRpbWVyc1sgaW5kZXggXS5xdWV1ZSA9PT0gdHlwZSApIHtcblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCB0cnVlICk7XG5cdFx0XHRcdFx0dGltZXJzLnNwbGljZSggaW5kZXgsIDEgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBMb29rIGZvciBhbnkgYW5pbWF0aW9ucyBpbiB0aGUgb2xkIHF1ZXVlIGFuZCBmaW5pc2ggdGhlbVxuXHRcdFx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0aWYgKCBxdWV1ZVsgaW5kZXggXSAmJiBxdWV1ZVsgaW5kZXggXS5maW5pc2ggKSB7XG5cdFx0XHRcdFx0cXVldWVbIGluZGV4IF0uZmluaXNoLmNhbGwoIHRoaXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUdXJuIG9mZiBmaW5pc2hpbmcgZmxhZ1xuXHRcdFx0ZGVsZXRlIGRhdGEuZmluaXNoO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZWFjaCggWyBcInRvZ2dsZVwiLCBcInNob3dcIiwgXCJoaWRlXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBjc3NGbiA9IGpRdWVyeS5mblsgbmFtZSBdO1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cblx0XHRcdGNzc0ZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA6XG5cdFx0XHR0aGlzLmFuaW1hdGUoIGdlbkZ4KCBuYW1lLCB0cnVlICksIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcbmpRdWVyeS5lYWNoKCB7XG5cdHNsaWRlRG93bjogZ2VuRngoIFwic2hvd1wiICksXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxuXHRzbGlkZVRvZ2dsZTogZ2VuRngoIFwidG9nZ2xlXCIgKSxcblx0ZmFkZUluOiB7IG9wYWNpdHk6IFwic2hvd1wiIH0sXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcblx0ZmFkZVRvZ2dsZTogeyBvcGFjaXR5OiBcInRvZ2dsZVwiIH1cbn0sIGZ1bmN0aW9uKCBuYW1lLCBwcm9wcyApIHtcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYW5pbWF0ZSggcHJvcHMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS50aW1lcnMgPSBbXTtcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XG5cdHZhciB0aW1lcixcblx0XHRpID0gMCxcblx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzO1xuXG5cdGZ4Tm93ID0gRGF0ZS5ub3coKTtcblxuXHRmb3IgKCA7IGkgPCB0aW1lcnMubGVuZ3RoOyBpKysgKSB7XG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcblxuXHRcdC8vIFJ1biB0aGUgdGltZXIgYW5kIHNhZmVseSByZW1vdmUgaXQgd2hlbiBkb25lIChhbGxvd2luZyBmb3IgZXh0ZXJuYWwgcmVtb3ZhbClcblx0XHRpZiAoICF0aW1lcigpICYmIHRpbWVyc1sgaSBdID09PSB0aW1lciApIHtcblx0XHRcdHRpbWVycy5zcGxpY2UoIGktLSwgMSApO1xuXHRcdH1cblx0fVxuXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5LmZ4LnN0b3AoKTtcblx0fVxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcbn07XG5cbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcblx0alF1ZXJ5LnRpbWVycy5wdXNoKCB0aW1lciApO1xuXHRqUXVlcnkuZnguc3RhcnQoKTtcbn07XG5cbmpRdWVyeS5meC5pbnRlcnZhbCA9IDEzO1xualF1ZXJ5LmZ4LnN0YXJ0ID0gZnVuY3Rpb24oKSB7XG5cdGlmICggaW5Qcm9ncmVzcyApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRpblByb2dyZXNzID0gdHJ1ZTtcblx0c2NoZWR1bGUoKTtcbn07XG5cbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XG5cdGluUHJvZ3Jlc3MgPSBudWxsO1xufTtcblxualF1ZXJ5LmZ4LnNwZWVkcyA9IHtcblx0c2xvdzogNjAwLFxuXHRmYXN0OiAyMDAsXG5cblx0Ly8gRGVmYXVsdCBzcGVlZFxuXHRfZGVmYXVsdDogNDAwXG59O1xuXG5cbi8vIEJhc2VkIG9mZiBvZiB0aGUgcGx1Z2luIGJ5IENsaW50IEhlbGZlcnMsIHdpdGggcGVybWlzc2lvbi5cbi8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDEwMDMyNDAxNDc0Ny9odHRwOi8vYmxpbmRzaWduYWxzLmNvbS9pbmRleC5waHAvMjAwOS8wNy9qcXVlcnktZGVsYXkvXG5qUXVlcnkuZm4uZGVsYXkgPSBmdW5jdGlvbiggdGltZSwgdHlwZSApIHtcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcblx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XG5cdFx0dmFyIHRpbWVvdXQgPSB3aW5kb3cuc2V0VGltZW91dCggbmV4dCwgdGltZSApO1xuXHRcdGhvb2tzLnN0b3AgPSBmdW5jdGlvbigpIHtcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcblx0XHR9O1xuXHR9ICk7XG59O1xuXG5cbiggZnVuY3Rpb24oKSB7XG5cdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxuXHRcdHNlbGVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwic2VsZWN0XCIgKSxcblx0XHRvcHQgPSBzZWxlY3QuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwib3B0aW9uXCIgKSApO1xuXG5cdGlucHV0LnR5cGUgPSBcImNoZWNrYm94XCI7XG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMyBvbmx5XG5cdC8vIERlZmF1bHQgdmFsdWUgZm9yIGEgY2hlY2tib3ggc2hvdWxkIGJlIFwib25cIlxuXHRzdXBwb3J0LmNoZWNrT24gPSBpbnB1dC52YWx1ZSAhPT0gXCJcIjtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gTXVzdCBhY2Nlc3Mgc2VsZWN0ZWRJbmRleCB0byBtYWtlIGRlZmF1bHQgb3B0aW9ucyBzZWxlY3Rcblx0c3VwcG9ydC5vcHRTZWxlY3RlZCA9IG9wdC5zZWxlY3RlZDtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0Ly8gQW4gaW5wdXQgbG9zZXMgaXRzIHZhbHVlIGFmdGVyIGJlY29taW5nIGEgcmFkaW9cblx0aW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImlucHV0XCIgKTtcblx0aW5wdXQudmFsdWUgPSBcInRcIjtcblx0aW5wdXQudHlwZSA9IFwicmFkaW9cIjtcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xufSApKCk7XG5cblxudmFyIGJvb2xIb29rLFxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgalF1ZXJ5LmF0dHIsIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9LFxuXG5cdHJlbW92ZUF0dHI6IGZ1bmN0aW9uKCBuYW1lICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIHRoaXMsIG5hbWUgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRhdHRyOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IGF0dHJpYnV0ZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBGYWxsYmFjayB0byBwcm9wIHdoZW4gYXR0cmlidXRlcyBhcmUgbm90IHN1cHBvcnRlZFxuXHRcdGlmICggdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlID09PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdC8vIEF0dHJpYnV0ZSBob29rcyBhcmUgZGV0ZXJtaW5lZCBieSB0aGUgbG93ZXJjYXNlIHZlcnNpb25cblx0XHQvLyBHcmFiIG5lY2Vzc2FyeSBob29rIGlmIG9uZSBpcyBkZWZpbmVkXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IHVuZGVmaW5lZCApO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdmFsdWUgPT09IG51bGwgKSB7XG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCBob29rcyAmJiBcInNldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdH1cblxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xuXHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIG5hbWUgKTtcblxuXHRcdC8vIE5vbi1leGlzdGVudCBhdHRyaWJ1dGVzIHJldHVybiBudWxsLCB3ZSBub3JtYWxpemUgdG8gdW5kZWZpbmVkXG5cdFx0cmV0dXJuIHJldCA9PSBudWxsID8gdW5kZWZpbmVkIDogcmV0O1xuXHR9LFxuXG5cdGF0dHJIb29rczoge1xuXHRcdHR5cGU6IHtcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnJhZGlvVmFsdWUgJiYgdmFsdWUgPT09IFwicmFkaW9cIiAmJlxuXHRcdFx0XHRcdG5vZGVOYW1lKCBlbGVtLCBcImlucHV0XCIgKSApIHtcblx0XHRcdFx0XHR2YXIgdmFsID0gZWxlbS52YWx1ZTtcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XG5cdFx0XHRcdFx0aWYgKCB2YWwgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnZhbHVlID0gdmFsO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdHZhciBuYW1lLFxuXHRcdFx0aSA9IDAsXG5cblx0XHRcdC8vIEF0dHJpYnV0ZSBuYW1lcyBjYW4gY29udGFpbiBub24tSFRNTCB3aGl0ZXNwYWNlIGNoYXJhY3RlcnNcblx0XHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3N5bnRheC5odG1sI2F0dHJpYnV0ZXMtMlxuXHRcdFx0YXR0ck5hbWVzID0gdmFsdWUgJiYgdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblxuXHRcdGlmICggYXR0ck5hbWVzICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0XHR3aGlsZSAoICggbmFtZSA9IGF0dHJOYW1lc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIG5hbWUgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gSG9va3MgZm9yIGJvb2xlYW4gYXR0cmlidXRlc1xuYm9vbEhvb2sgPSB7XG5cdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBuYW1lICkge1xuXHRcdGlmICggdmFsdWUgPT09IGZhbHNlICkge1xuXG5cdFx0XHQvLyBSZW1vdmUgYm9vbGVhbiBhdHRyaWJ1dGVzIHdoZW4gc2V0IHRvIGZhbHNlXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggZWxlbSwgbmFtZSApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgbmFtZSApO1xuXHRcdH1cblx0XHRyZXR1cm4gbmFtZTtcblx0fVxufTtcblxualF1ZXJ5LmVhY2goIGpRdWVyeS5leHByLm1hdGNoLmJvb2wuc291cmNlLm1hdGNoKCAvXFx3Ky9nICksIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXHR2YXIgZ2V0dGVyID0gYXR0ckhhbmRsZVsgbmFtZSBdIHx8IGpRdWVyeS5maW5kLmF0dHI7XG5cblx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciByZXQsIGhhbmRsZSxcblx0XHRcdGxvd2VyY2FzZU5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG5cblx0XHRpZiAoICFpc1hNTCApIHtcblxuXHRcdFx0Ly8gQXZvaWQgYW4gaW5maW5pdGUgbG9vcCBieSB0ZW1wb3JhcmlseSByZW1vdmluZyB0aGlzIGZ1bmN0aW9uIGZyb20gdGhlIGdldHRlclxuXHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gcmV0O1xuXHRcdFx0cmV0ID0gZ2V0dGVyKCBlbGVtLCBuYW1lLCBpc1hNTCApICE9IG51bGwgP1xuXHRcdFx0XHRsb3dlcmNhc2VOYW1lIDpcblx0XHRcdFx0bnVsbDtcblx0XHRcdGF0dHJIYW5kbGVbIGxvd2VyY2FzZU5hbWUgXSA9IGhhbmRsZTtcblx0XHR9XG5cdFx0cmV0dXJuIHJldDtcblx0fTtcbn0gKTtcblxuXG5cblxudmFyIHJmb2N1c2FibGUgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYXxidXR0b24pJC9pLFxuXHRyY2xpY2thYmxlID0gL14oPzphfGFyZWEpJC9pO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHByb3A6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRkZWxldGUgdGhpc1sgalF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lIF07XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlICkge1xuXHRcdHZhciByZXQsIGhvb2tzLFxuXHRcdFx0blR5cGUgPSBlbGVtLm5vZGVUeXBlO1xuXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xuXHRcdGlmICggblR5cGUgPT09IDMgfHwgblR5cGUgPT09IDggfHwgblR5cGUgPT09IDIgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCBuVHlwZSAhPT0gMSB8fCAhalF1ZXJ5LmlzWE1MRG9jKCBlbGVtICkgKSB7XG5cblx0XHRcdC8vIEZpeCBuYW1lIGFuZCBhdHRhY2ggaG9va3Ncblx0XHRcdG5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcblx0XHR9XG5cblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XG5cdFx0XHRyZXR1cm4gcmV0O1xuXHRcdH1cblxuXHRcdHJldHVybiBlbGVtWyBuYW1lIF07XG5cdH0sXG5cblx0cHJvcEhvb2tzOiB7XG5cdFx0dGFiSW5kZXg6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEgb25seVxuXHRcdFx0XHQvLyBlbGVtLnRhYkluZGV4IGRvZXNuJ3QgYWx3YXlzIHJldHVybiB0aGVcblx0XHRcdFx0Ly8gY29ycmVjdCB2YWx1ZSB3aGVuIGl0IGhhc24ndCBiZWVuIGV4cGxpY2l0bHkgc2V0XG5cdFx0XHRcdC8vIGh0dHBzOi8vd2ViLmFyY2hpdmUub3JnL3dlYi8yMDE0MTExNjIzMzM0Ny9odHRwOi8vZmx1aWRwcm9qZWN0Lm9yZy9ibG9nLzIwMDgvMDEvMDkvZ2V0dGluZy1zZXR0aW5nLWFuZC1yZW1vdmluZy10YWJpbmRleC12YWx1ZXMtd2l0aC1qYXZhc2NyaXB0L1xuXHRcdFx0XHQvLyBVc2UgcHJvcGVyIGF0dHJpYnV0ZSByZXRyaWV2YWwoIzEyMDcyKVxuXHRcdFx0XHR2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInRhYmluZGV4XCIgKTtcblxuXHRcdFx0XHRpZiAoIHRhYmluZGV4ICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXJzZUludCggdGFiaW5kZXgsIDEwICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoXG5cdFx0XHRcdFx0cmZvY3VzYWJsZS50ZXN0KCBlbGVtLm5vZGVOYW1lICkgfHxcblx0XHRcdFx0XHRyY2xpY2thYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJlxuXHRcdFx0XHRcdGVsZW0uaHJlZlxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiAtMTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0cHJvcEZpeDoge1xuXHRcdFwiZm9yXCI6IFwiaHRtbEZvclwiLFxuXHRcdFwiY2xhc3NcIjogXCJjbGFzc05hbWVcIlxuXHR9XG59ICk7XG5cbi8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuLy8gQWNjZXNzaW5nIHRoZSBzZWxlY3RlZEluZGV4IHByb3BlcnR5XG4vLyBmb3JjZXMgdGhlIGJyb3dzZXIgdG8gcmVzcGVjdCBzZXR0aW5nIHNlbGVjdGVkXG4vLyBvbiB0aGUgb3B0aW9uXG4vLyBUaGUgZ2V0dGVyIGVuc3VyZXMgYSBkZWZhdWx0IG9wdGlvbiBpcyBzZWxlY3RlZFxuLy8gd2hlbiBpbiBhbiBvcHRncm91cFxuLy8gZXNsaW50IHJ1bGUgXCJuby11bnVzZWQtZXhwcmVzc2lvbnNcIiBpcyBkaXNhYmxlZCBmb3IgdGhpcyBjb2RlXG4vLyBzaW5jZSBpdCBjb25zaWRlcnMgc3VjaCBhY2Nlc3Npb25zIG5vb3BcbmlmICggIXN1cHBvcnQub3B0U2VsZWN0ZWQgKSB7XG5cdGpRdWVyeS5wcm9wSG9va3Muc2VsZWN0ZWQgPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgJiYgcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbnVsbDtcblx0XHR9LFxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cblx0XHRcdC8qIGVzbGludCBuby11bnVzZWQtZXhwcmVzc2lvbnM6IFwib2ZmXCIgKi9cblxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRcdGlmICggcGFyZW50ICkge1xuXHRcdFx0XHRwYXJlbnQuc2VsZWN0ZWRJbmRleDtcblxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xuXHRcdFx0XHRcdHBhcmVudC5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH07XG59XG5cbmpRdWVyeS5lYWNoKCBbXG5cdFwidGFiSW5kZXhcIixcblx0XCJyZWFkT25seVwiLFxuXHRcIm1heExlbmd0aFwiLFxuXHRcImNlbGxTcGFjaW5nXCIsXG5cdFwiY2VsbFBhZGRpbmdcIixcblx0XCJyb3dTcGFuXCIsXG5cdFwiY29sU3BhblwiLFxuXHRcInVzZU1hcFwiLFxuXHRcImZyYW1lQm9yZGVyXCIsXG5cdFwiY29udGVudEVkaXRhYmxlXCJcbl0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xufSApO1xuXG5cblxuXG5cdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlIGFjY29yZGluZyB0byBIVE1MIHNwZWNcblx0Ly8gaHR0cHM6Ly9pbmZyYS5zcGVjLndoYXR3Zy5vcmcvI3N0cmlwLWFuZC1jb2xsYXBzZS1hc2NpaS13aGl0ZXNwYWNlXG5cdGZ1bmN0aW9uIHN0cmlwQW5kQ29sbGFwc2UoIHZhbHVlICkge1xuXHRcdHZhciB0b2tlbnMgPSB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHRcdHJldHVybiB0b2tlbnMuam9pbiggXCIgXCIgKTtcblx0fVxuXG5cbmZ1bmN0aW9uIGdldENsYXNzKCBlbGVtICkge1xuXHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiApIHx8IFwiXCI7XG59XG5cbmZ1bmN0aW9uIGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApIHtcblx0aWYgKCBBcnJheS5pc0FycmF5KCB2YWx1ZSApICkge1xuXHRcdHJldHVybiB2YWx1ZTtcblx0fVxuXHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gdmFsdWUubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblx0fVxuXHRyZXR1cm4gW107XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0YWRkQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5hZGRDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0Y2xhc3NlcyA9IGNsYXNzZXNUb0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCBjbGFzc2VzLmxlbmd0aCApIHtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdGhpc1sgaSsrIF0gKSApIHtcblx0XHRcdFx0Y3VyVmFsdWUgPSBnZXRDbGFzcyggZWxlbSApO1xuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXHRcdFx0XHRcdFx0aWYgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPCAwICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgKz0gY2xhenogKyBcIiBcIjtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGNsYXNzZXMsIGVsZW0sIGN1ciwgY3VyVmFsdWUsIGNsYXp6LCBqLCBmaW5hbFZhbHVlLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaiApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkucmVtb3ZlQ2xhc3MoIHZhbHVlLmNhbGwoIHRoaXMsIGosIGdldENsYXNzKCB0aGlzICkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5hdHRyKCBcImNsYXNzXCIsIFwiXCIgKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcblx0XHRcdFx0Y3VyID0gZWxlbS5ub2RlVHlwZSA9PT0gMSAmJiAoIFwiIFwiICsgc3RyaXBBbmRDb2xsYXBzZSggY3VyVmFsdWUgKSArIFwiIFwiICk7XG5cblx0XHRcdFx0aWYgKCBjdXIgKSB7XG5cdFx0XHRcdFx0aiA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGNsYXp6ID0gY2xhc3Nlc1sgaisrIF0gKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlICphbGwqIGluc3RhbmNlc1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBjdXIuaW5kZXhPZiggXCIgXCIgKyBjbGF6eiArIFwiIFwiICkgPiAtMSApIHtcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBPbmx5IGFzc2lnbiBpZiBkaWZmZXJlbnQgdG8gYXZvaWQgdW5uZWVkZWQgcmVuZGVyaW5nLlxuXHRcdFx0XHRcdGZpbmFsVmFsdWUgPSBzdHJpcEFuZENvbGxhcHNlKCBjdXIgKTtcblx0XHRcdFx0XHRpZiAoIGN1clZhbHVlICE9PSBmaW5hbFZhbHVlICkge1xuXHRcdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHRvZ2dsZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUsIHN0YXRlVmFsICkge1xuXHRcdHZhciB0eXBlID0gdHlwZW9mIHZhbHVlLFxuXHRcdFx0aXNWYWxpZFZhbHVlID0gdHlwZSA9PT0gXCJzdHJpbmdcIiB8fCBBcnJheS5pc0FycmF5KCB2YWx1ZSApO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09IFwiYm9vbGVhblwiICYmIGlzVmFsaWRWYWx1ZSApIHtcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xuXHRcdH1cblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS50b2dnbGVDbGFzcyhcblx0XHRcdFx0XHR2YWx1ZS5jYWxsKCB0aGlzLCBpLCBnZXRDbGFzcyggdGhpcyApLCBzdGF0ZVZhbCApLFxuXHRcdFx0XHRcdHN0YXRlVmFsXG5cdFx0XHRcdCk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xuXG5cdFx0XHRpZiAoIGlzVmFsaWRWYWx1ZSApIHtcblxuXHRcdFx0XHQvLyBUb2dnbGUgaW5kaXZpZHVhbCBjbGFzcyBuYW1lc1xuXHRcdFx0XHRpID0gMDtcblx0XHRcdFx0c2VsZiA9IGpRdWVyeSggdGhpcyApO1xuXHRcdFx0XHRjbGFzc05hbWVzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRcdFx0d2hpbGUgKCAoIGNsYXNzTmFtZSA9IGNsYXNzTmFtZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0XHQvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3Rcblx0XHRcdFx0XHRpZiAoIHNlbGYuaGFzQ2xhc3MoIGNsYXNzTmFtZSApICkge1xuXHRcdFx0XHRcdFx0c2VsZi5yZW1vdmVDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHNlbGYuYWRkQ2xhc3MoIGNsYXNzTmFtZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHQvLyBUb2dnbGUgd2hvbGUgY2xhc3MgbmFtZVxuXHRcdFx0fSBlbHNlIGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRcdFx0Y2xhc3NOYW1lID0gZ2V0Q2xhc3MoIHRoaXMgKTtcblx0XHRcdFx0aWYgKCBjbGFzc05hbWUgKSB7XG5cblx0XHRcdFx0XHQvLyBTdG9yZSBjbGFzc05hbWUgaWYgc2V0XG5cdFx0XHRcdFx0ZGF0YVByaXYuc2V0KCB0aGlzLCBcIl9fY2xhc3NOYW1lX19cIiwgY2xhc3NOYW1lICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBJZiB0aGUgZWxlbWVudCBoYXMgYSBjbGFzcyBuYW1lIG9yIGlmIHdlJ3JlIHBhc3NlZCBgZmFsc2VgLFxuXHRcdFx0XHQvLyB0aGVuIHJlbW92ZSB0aGUgd2hvbGUgY2xhc3NuYW1lIChpZiB0aGVyZSB3YXMgb25lLCB0aGUgYWJvdmUgc2F2ZWQgaXQpLlxuXHRcdFx0XHQvLyBPdGhlcndpc2UgYnJpbmcgYmFjayB3aGF0ZXZlciB3YXMgcHJldmlvdXNseSBzYXZlZCAoaWYgYW55dGhpbmcpLFxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXG5cdFx0XHRcdGlmICggdGhpcy5zZXRBdHRyaWJ1dGUgKSB7XG5cdFx0XHRcdFx0dGhpcy5zZXRBdHRyaWJ1dGUoIFwiY2xhc3NcIixcblx0XHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0XHRcdFx0XCJcIiA6XG5cdFx0XHRcdFx0XHRkYXRhUHJpdi5nZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIlxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0aGFzQ2xhc3M6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR2YXIgY2xhc3NOYW1lLCBlbGVtLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRjbGFzc05hbWUgPSBcIiBcIiArIHNlbGVjdG9yICsgXCIgXCI7XG5cdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRcdCggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBnZXRDbGFzcyggZWxlbSApICkgKyBcIiBcIiApLmluZGV4T2YoIGNsYXNzTmFtZSApID4gLTEgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBycmV0dXJuID0gL1xcci9nO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdHZhbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBob29rcywgcmV0LCB2YWx1ZUlzRnVuY3Rpb24sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdGlmICggZWxlbSApIHtcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XG5cdFx0XHRcdFx0alF1ZXJ5LnZhbEhvb2tzWyBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0XHRpZiAoIGhvb2tzICYmXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHRcdCggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBcInZhbHVlXCIgKSApICE9PSB1bmRlZmluZWRcblx0XHRcdFx0KSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XG5cblx0XHRcdFx0Ly8gSGFuZGxlIG1vc3QgY29tbW9uIHN0cmluZyBjYXNlc1xuXHRcdFx0XHRpZiAoIHR5cGVvZiByZXQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHJldC5yZXBsYWNlKCBycmV0dXJuLCBcIlwiICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBIYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcblx0XHRcdFx0cmV0dXJuIHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhbHVlSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIHZhbHVlICk7XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdHZhciB2YWw7XG5cblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbHVlSXNGdW5jdGlvbiApIHtcblx0XHRcdFx0dmFsID0gdmFsdWUuY2FsbCggdGhpcywgaSwgalF1ZXJ5KCB0aGlzICkudmFsKCkgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXG5cdFx0XHRpZiAoIHZhbCA9PSBudWxsICkge1xuXHRcdFx0XHR2YWwgPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCB0eXBlb2YgdmFsID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWwgKz0gXCJcIjtcblxuXHRcdFx0fSBlbHNlIGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJldHVybiB2YWx1ZSA9PSBudWxsID8gXCJcIiA6IHZhbHVlICsgXCJcIjtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgdGhpcy50eXBlIF0gfHwgalF1ZXJ5LnZhbEhvb2tzWyB0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgXTtcblxuXHRcdFx0Ly8gSWYgc2V0IHJldHVybnMgdW5kZWZpbmVkLCBmYWxsIGJhY2sgdG8gbm9ybWFsIHNldHRpbmdcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fCBob29rcy5zZXQoIHRoaXMsIHZhbCwgXCJ2YWx1ZVwiICkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHR2YWxIb29rczoge1xuXHRcdG9wdGlvbjoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XG5cdFx0XHRcdHJldHVybiB2YWwgIT0gbnVsbCA/XG5cdFx0XHRcdFx0dmFsIDpcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9MTAgLSAxMSBvbmx5XG5cdFx0XHRcdFx0Ly8gb3B0aW9uLnRleHQgdGhyb3dzIGV4Y2VwdGlvbnMgKCMxNDY4NiwgIzE0ODU4KVxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLXdoaXRlc3BhY2Vcblx0XHRcdFx0XHRzdHJpcEFuZENvbGxhcHNlKCBqUXVlcnkudGV4dCggZWxlbSApICk7XG5cdFx0XHR9XG5cdFx0fSxcblx0XHRzZWxlY3Q6IHtcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciB2YWx1ZSwgb3B0aW9uLCBpLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXG5cdFx0XHRcdFx0b25lID0gZWxlbS50eXBlID09PSBcInNlbGVjdC1vbmVcIixcblx0XHRcdFx0XHR2YWx1ZXMgPSBvbmUgPyBudWxsIDogW10sXG5cdFx0XHRcdFx0bWF4ID0gb25lID8gaW5kZXggKyAxIDogb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0aWYgKCBpbmRleCA8IDAgKSB7XG5cdFx0XHRcdFx0aSA9IG1heDtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGkgPSBvbmUgPyBpbmRleCA6IDA7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBMb29wIHRocm91Z2ggYWxsIHRoZSBzZWxlY3RlZCBvcHRpb25zXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0Ly8gSUU4LTkgZG9lc24ndCB1cGRhdGUgc2VsZWN0ZWQgYWZ0ZXIgZm9ybSByZXNldCAoIzI1NTEpXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXG5cblx0XHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcmV0dXJuIG9wdGlvbnMgdGhhdCBhcmUgZGlzYWJsZWQgb3IgaW4gYSBkaXNhYmxlZCBvcHRncm91cFxuXHRcdFx0XHRcdFx0XHQhb3B0aW9uLmRpc2FibGVkICYmXG5cdFx0XHRcdFx0XHRcdCggIW9wdGlvbi5wYXJlbnROb2RlLmRpc2FibGVkIHx8XG5cdFx0XHRcdFx0XHRcdFx0IW5vZGVOYW1lKCBvcHRpb24ucGFyZW50Tm9kZSwgXCJvcHRncm91cFwiICkgKSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxuXHRcdFx0XHRcdFx0dmFsdWUgPSBqUXVlcnkoIG9wdGlvbiApLnZhbCgpO1xuXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xuXHRcdFx0XHRcdFx0aWYgKCBvbmUgKSB7XG5cdFx0XHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0Ly8gTXVsdGktU2VsZWN0cyByZXR1cm4gYW4gYXJyYXlcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdFx0dmFyIG9wdGlvblNldCwgb3B0aW9uLFxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXG5cdFx0XHRcdFx0dmFsdWVzID0galF1ZXJ5Lm1ha2VBcnJheSggdmFsdWUgKSxcblx0XHRcdFx0XHRpID0gb3B0aW9ucy5sZW5ndGg7XG5cblx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0LyogZXNsaW50LWRpc2FibGUgbm8tY29uZC1hc3NpZ24gKi9cblxuXHRcdFx0XHRcdGlmICggb3B0aW9uLnNlbGVjdGVkID1cblx0XHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTFcblx0XHRcdFx0XHQpIHtcblx0XHRcdFx0XHRcdG9wdGlvblNldCA9IHRydWU7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gRm9yY2UgYnJvd3NlcnMgdG8gYmVoYXZlIGNvbnNpc3RlbnRseSB3aGVuIG5vbi1tYXRjaGluZyB2YWx1ZSBpcyBzZXRcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xuXHRcdFx0XHRcdGVsZW0uc2VsZWN0ZWRJbmRleCA9IC0xO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB2YWx1ZXM7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIFJhZGlvcyBhbmQgY2hlY2tib3hlcyBnZXR0ZXIvc2V0dGVyXG5qUXVlcnkuZWFjaCggWyBcInJhZGlvXCIsIFwiY2hlY2tib3hcIiBdLCBmdW5jdGlvbigpIHtcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0uY2hlY2tlZCA9IGpRdWVyeS5pbkFycmF5KCBqUXVlcnkoIGVsZW0gKS52YWwoKSwgdmFsdWUgKSA+IC0xICk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XG5cdFx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0uZ2V0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBudWxsID8gXCJvblwiIDogZWxlbS52YWx1ZTtcblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cblxuXG5zdXBwb3J0LmZvY3VzaW4gPSBcIm9uZm9jdXNpblwiIGluIHdpbmRvdztcblxuXG52YXIgcmZvY3VzTW9ycGggPSAvXig/OmZvY3VzaW5mb2N1c3xmb2N1c291dGJsdXIpJC8sXG5cdHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrID0gZnVuY3Rpb24oIGUgKSB7XG5cdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0fTtcblxualF1ZXJ5LmV4dGVuZCggalF1ZXJ5LmV2ZW50LCB7XG5cblx0dHJpZ2dlcjogZnVuY3Rpb24oIGV2ZW50LCBkYXRhLCBlbGVtLCBvbmx5SGFuZGxlcnMgKSB7XG5cblx0XHR2YXIgaSwgY3VyLCB0bXAsIGJ1YmJsZVR5cGUsIG9udHlwZSwgaGFuZGxlLCBzcGVjaWFsLCBsYXN0RWxlbWVudCxcblx0XHRcdGV2ZW50UGF0aCA9IFsgZWxlbSB8fCBkb2N1bWVudCBdLFxuXHRcdFx0dHlwZSA9IGhhc093bi5jYWxsKCBldmVudCwgXCJ0eXBlXCIgKSA/IGV2ZW50LnR5cGUgOiBldmVudCxcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xuXG5cdFx0Y3VyID0gbGFzdEVsZW1lbnQgPSB0bXAgPSBlbGVtID0gZWxlbSB8fCBkb2N1bWVudDtcblxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gZm9jdXMvYmx1ciBtb3JwaHMgdG8gZm9jdXNpbi9vdXQ7IGVuc3VyZSB3ZSdyZSBub3QgZmlyaW5nIHRoZW0gcmlnaHQgbm93XG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGlmICggdHlwZS5pbmRleE9mKCBcIi5cIiApID4gLTEgKSB7XG5cblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcblx0XHRcdG5hbWVzcGFjZXMgPSB0eXBlLnNwbGl0KCBcIi5cIiApO1xuXHRcdFx0dHlwZSA9IG5hbWVzcGFjZXMuc2hpZnQoKTtcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xuXHRcdH1cblx0XHRvbnR5cGUgPSB0eXBlLmluZGV4T2YoIFwiOlwiICkgPCAwICYmIFwib25cIiArIHR5cGU7XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYSBqUXVlcnkuRXZlbnQgb2JqZWN0LCBPYmplY3QsIG9yIGp1c3QgYW4gZXZlbnQgdHlwZSBzdHJpbmdcblx0XHRldmVudCA9IGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdID9cblx0XHRcdGV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIHR5cGUsIHR5cGVvZiBldmVudCA9PT0gXCJvYmplY3RcIiAmJiBldmVudCApO1xuXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxuXHRcdGV2ZW50LmlzVHJpZ2dlciA9IG9ubHlIYW5kbGVycyA/IDIgOiAzO1xuXHRcdGV2ZW50Lm5hbWVzcGFjZSA9IG5hbWVzcGFjZXMuam9pbiggXCIuXCIgKTtcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cblx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApIDpcblx0XHRcdG51bGw7XG5cblx0XHQvLyBDbGVhbiB1cCB0aGUgZXZlbnQgaW4gY2FzZSBpdCBpcyBiZWluZyByZXVzZWRcblx0XHRldmVudC5yZXN1bHQgPSB1bmRlZmluZWQ7XG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xuXHRcdFx0ZXZlbnQudGFyZ2V0ID0gZWxlbTtcblx0XHR9XG5cblx0XHQvLyBDbG9uZSBhbnkgaW5jb21pbmcgZGF0YSBhbmQgcHJlcGVuZCB0aGUgZXZlbnQsIGNyZWF0aW5nIHRoZSBoYW5kbGVyIGFyZyBsaXN0XG5cdFx0ZGF0YSA9IGRhdGEgPT0gbnVsbCA/XG5cdFx0XHRbIGV2ZW50IF0gOlxuXHRcdFx0alF1ZXJ5Lm1ha2VBcnJheSggZGF0YSwgWyBldmVudCBdICk7XG5cblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXG5cdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmIHNwZWNpYWwudHJpZ2dlciAmJiBzcGVjaWFsLnRyaWdnZXIuYXBwbHkoIGVsZW0sIGRhdGEgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXG5cdFx0Ly8gQnViYmxlIHVwIHRvIGRvY3VtZW50LCB0aGVuIHRvIHdpbmRvdzsgd2F0Y2ggZm9yIGEgZ2xvYmFsIG93bmVyRG9jdW1lbnQgdmFyICgjOTcyNClcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIXNwZWNpYWwubm9CdWJibGUgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xuXHRcdFx0aWYgKCAhcmZvY3VzTW9ycGgudGVzdCggYnViYmxlVHlwZSArIHR5cGUgKSApIHtcblx0XHRcdFx0Y3VyID0gY3VyLnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRmb3IgKCA7IGN1cjsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCBjdXIgKTtcblx0XHRcdFx0dG1wID0gY3VyO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcblx0XHRcdGlmICggdG1wID09PSAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCApICkge1xuXHRcdFx0XHRldmVudFBhdGgucHVzaCggdG1wLmRlZmF1bHRWaWV3IHx8IHRtcC5wYXJlbnRXaW5kb3cgfHwgd2luZG93ICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxuXHRcdGkgPSAwO1xuXHRcdHdoaWxlICggKCBjdXIgPSBldmVudFBhdGhbIGkrKyBdICkgJiYgIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRsYXN0RWxlbWVudCA9IGN1cjtcblx0XHRcdGV2ZW50LnR5cGUgPSBpID4gMSA/XG5cdFx0XHRcdGJ1YmJsZVR5cGUgOlxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XG5cblx0XHRcdC8vIGpRdWVyeSBoYW5kbGVyXG5cdFx0XHRoYW5kbGUgPSAoIGRhdGFQcml2LmdldCggY3VyLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdICYmXG5cdFx0XHRcdGRhdGFQcml2LmdldCggY3VyLCBcImhhbmRsZVwiICk7XG5cdFx0XHRpZiAoIGhhbmRsZSApIHtcblx0XHRcdFx0aGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTmF0aXZlIGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xuXHRcdFx0aWYgKCBoYW5kbGUgJiYgaGFuZGxlLmFwcGx5ICYmIGFjY2VwdERhdGEoIGN1ciApICkge1xuXHRcdFx0XHRldmVudC5yZXN1bHQgPSBoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRldmVudC50eXBlID0gdHlwZTtcblxuXHRcdC8vIElmIG5vYm9keSBwcmV2ZW50ZWQgdGhlIGRlZmF1bHQgYWN0aW9uLCBkbyBpdCBub3dcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgIWV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpICkge1xuXG5cdFx0XHRpZiAoICggIXNwZWNpYWwuX2RlZmF1bHQgfHxcblx0XHRcdFx0c3BlY2lhbC5fZGVmYXVsdC5hcHBseSggZXZlbnRQYXRoLnBvcCgpLCBkYXRhICkgPT09IGZhbHNlICkgJiZcblx0XHRcdFx0YWNjZXB0RGF0YSggZWxlbSApICkge1xuXG5cdFx0XHRcdC8vIENhbGwgYSBuYXRpdmUgRE9NIG1ldGhvZCBvbiB0aGUgdGFyZ2V0IHdpdGggdGhlIHNhbWUgbmFtZSBhcyB0aGUgZXZlbnQuXG5cdFx0XHRcdC8vIERvbid0IGRvIGRlZmF1bHQgYWN0aW9ucyBvbiB3aW5kb3csIHRoYXQncyB3aGVyZSBnbG9iYWwgdmFyaWFibGVzIGJlICgjNjE3MClcblx0XHRcdFx0aWYgKCBvbnR5cGUgJiYgaXNGdW5jdGlvbiggZWxlbVsgdHlwZSBdICkgJiYgIWlzV2luZG93KCBlbGVtICkgKSB7XG5cblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXG5cdFx0XHRcdFx0dG1wID0gZWxlbVsgb250eXBlIF07XG5cblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcblx0XHRcdFx0XHRcdGVsZW1bIG9udHlwZSBdID0gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmV2ZW50IHJlLXRyaWdnZXJpbmcgb2YgdGhlIHNhbWUgZXZlbnQsIHNpbmNlIHdlIGFscmVhZHkgYnViYmxlZCBpdCBhYm92ZVxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgPSB0eXBlO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRlbGVtWyB0eXBlIF0oKTtcblxuXHRcdFx0XHRcdGlmICggZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdFx0XHRcdGxhc3RFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIHN0b3BQcm9wYWdhdGlvbkNhbGxiYWNrICk7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHVuZGVmaW5lZDtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSB0bXA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHQvLyBQaWdneWJhY2sgb24gYSBkb25vciBldmVudCB0byBzaW11bGF0ZSBhIGRpZmZlcmVudCBvbmVcblx0Ly8gVXNlZCBvbmx5IGZvciBgZm9jdXMoaW4gfCBvdXQpYCBldmVudHNcblx0c2ltdWxhdGU6IGZ1bmN0aW9uKCB0eXBlLCBlbGVtLCBldmVudCApIHtcblx0XHR2YXIgZSA9IGpRdWVyeS5leHRlbmQoXG5cdFx0XHRuZXcgalF1ZXJ5LkV2ZW50KCksXG5cdFx0XHRldmVudCxcblx0XHRcdHtcblx0XHRcdFx0dHlwZTogdHlwZSxcblx0XHRcdFx0aXNTaW11bGF0ZWQ6IHRydWVcblx0XHRcdH1cblx0XHQpO1xuXG5cdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTtcblx0fVxuXG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCB0aGlzICk7XG5cdFx0fSApO1xuXHR9LFxuXHR0cmlnZ2VySGFuZGxlcjogZnVuY3Rpb24oIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF07XG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5ldmVudC50cmlnZ2VyKCB0eXBlLCBkYXRhLCBlbGVtLCB0cnVlICk7XG5cdFx0fVxuXHR9XG59ICk7XG5cblxuLy8gU3VwcG9ydDogRmlyZWZveCA8PTQ0XG4vLyBGaXJlZm94IGRvZXNuJ3QgaGF2ZSBmb2N1cyhpbiB8IG91dCkgZXZlbnRzXG4vLyBSZWxhdGVkIHRpY2tldCAtIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTY4Nzc4N1xuLy9cbi8vIFN1cHBvcnQ6IENocm9tZSA8PTQ4IC0gNDksIFNhZmFyaSA8PTkuMCAtIDkuMVxuLy8gZm9jdXMoaW4gfCBvdXQpIGV2ZW50cyBmaXJlIGFmdGVyIGZvY3VzICYgYmx1ciBldmVudHMsXG4vLyB3aGljaCBpcyBzcGVjIHZpb2xhdGlvbiAtIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnRzLWZvY3VzZXZlbnQtZXZlbnQtb3JkZXJcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDQ5ODU3XG5pZiAoICFzdXBwb3J0LmZvY3VzaW4gKSB7XG5cdGpRdWVyeS5lYWNoKCB7IGZvY3VzOiBcImZvY3VzaW5cIiwgYmx1cjogXCJmb2N1c291dFwiIH0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cblx0XHQvLyBBdHRhY2ggYSBzaW5nbGUgY2FwdHVyaW5nIGhhbmRsZXIgb24gdGhlIGRvY3VtZW50IHdoaWxlIHNvbWVvbmUgd2FudHMgZm9jdXNpbi9mb2N1c291dFxuXHRcdHZhciBoYW5kbGVyID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBmaXgsIGV2ZW50LnRhcmdldCwgalF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKSApO1xuXHRcdH07XG5cblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XG5cdFx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXggKTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsICggYXR0YWNoZXMgfHwgMCApICsgMSApO1xuXHRcdFx0fSxcblx0XHRcdHRlYXJkb3duOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApIC0gMTtcblxuXHRcdFx0XHRpZiAoICFhdHRhY2hlcyApIHtcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xuXHRcdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZG9jLCBmaXggKTtcblxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRhdGFQcml2LmFjY2VzcyggZG9jLCBmaXgsIGF0dGFjaGVzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9ICk7XG59XG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XG5cbnZhciBub25jZSA9IERhdGUubm93KCk7XG5cbnZhciBycXVlcnkgPSAoIC9cXD8vICk7XG5cblxuXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXG5qUXVlcnkucGFyc2VYTUwgPSBmdW5jdGlvbiggZGF0YSApIHtcblx0dmFyIHhtbDtcblx0aWYgKCAhZGF0YSB8fCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDkgLSAxMSBvbmx5XG5cdC8vIElFIHRocm93cyBvbiBwYXJzZUZyb21TdHJpbmcgd2l0aCBpbnZhbGlkIGlucHV0LlxuXHR0cnkge1xuXHRcdHhtbCA9ICggbmV3IHdpbmRvdy5ET01QYXJzZXIoKSApLnBhcnNlRnJvbVN0cmluZyggZGF0YSwgXCJ0ZXh0L3htbFwiICk7XG5cdH0gY2F0Y2ggKCBlICkge1xuXHRcdHhtbCA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdGlmICggIXhtbCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBYTUw6IFwiICsgZGF0YSApO1xuXHR9XG5cdHJldHVybiB4bWw7XG59O1xuXG5cbnZhclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcblx0ckNSTEYgPSAvXFxyP1xcbi9nLFxuXHRyc3VibWl0dGVyVHlwZXMgPSAvXig/OnN1Ym1pdHxidXR0b258aW1hZ2V8cmVzZXR8ZmlsZSkkL2ksXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcblxuZnVuY3Rpb24gYnVpbGRQYXJhbXMoIHByZWZpeCwgb2JqLCB0cmFkaXRpb25hbCwgYWRkICkge1xuXHR2YXIgbmFtZTtcblxuXHRpZiAoIEFycmF5LmlzQXJyYXkoIG9iaiApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXG5cdFx0alF1ZXJ5LmVhY2goIG9iaiwgZnVuY3Rpb24oIGksIHYgKSB7XG5cdFx0XHRpZiAoIHRyYWRpdGlvbmFsIHx8IHJicmFja2V0LnRlc3QoIHByZWZpeCApICkge1xuXG5cdFx0XHRcdC8vIFRyZWF0IGVhY2ggYXJyYXkgaXRlbSBhcyBhIHNjYWxhci5cblx0XHRcdFx0YWRkKCBwcmVmaXgsIHYgKTtcblxuXHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHQvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC5cblx0XHRcdFx0YnVpbGRQYXJhbXMoXG5cdFx0XHRcdFx0cHJlZml4ICsgXCJbXCIgKyAoIHR5cGVvZiB2ID09PSBcIm9iamVjdFwiICYmIHYgIT0gbnVsbCA/IGkgOiBcIlwiICkgKyBcIl1cIixcblx0XHRcdFx0XHR2LFxuXHRcdFx0XHRcdHRyYWRpdGlvbmFsLFxuXHRcdFx0XHRcdGFkZFxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblxuXHR9IGVsc2UgaWYgKCAhdHJhZGl0aW9uYWwgJiYgdG9UeXBlKCBvYmogKSA9PT0gXCJvYmplY3RcIiApIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBvYmplY3QgaXRlbS5cblx0XHRmb3IgKCBuYW1lIGluIG9iaiApIHtcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcblx0XHR9XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIFNlcmlhbGl6ZSBzY2FsYXIgaXRlbS5cblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XG5cdH1cbn1cblxuLy8gU2VyaWFsaXplIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMgb3IgYSBzZXQgb2Zcbi8vIGtleS92YWx1ZXMgaW50byBhIHF1ZXJ5IHN0cmluZ1xualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xuXHR2YXIgcHJlZml4LFxuXHRcdHMgPSBbXSxcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZU9yRnVuY3Rpb24gKSB7XG5cblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgdXNlIGl0cyByZXR1cm4gdmFsdWVcblx0XHRcdHZhciB2YWx1ZSA9IGlzRnVuY3Rpb24oIHZhbHVlT3JGdW5jdGlvbiApID9cblx0XHRcdFx0dmFsdWVPckZ1bmN0aW9uKCkgOlxuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb247XG5cblx0XHRcdHNbIHMubGVuZ3RoIF0gPSBlbmNvZGVVUklDb21wb25lbnQoIGtleSApICsgXCI9XCIgK1xuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKTtcblx0XHR9O1xuXG5cdGlmICggYSA9PSBudWxsICkge1xuXHRcdHJldHVybiBcIlwiO1xuXHR9XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblx0b3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxuXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8IHt9LFxuXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblxuXHRcdFx0Ly8gRmFrZSB4aHJcblx0XHRcdGpxWEhSID0ge1xuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxuXG5cdFx0XHRcdC8vIEJ1aWxkcyBoZWFkZXJzIGhhc2h0YWJsZSBpZiBuZWVkZWRcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSArIFwiIFwiIF0gPVxuXHRcdFx0XHRcdFx0XHRcdFx0KCByZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSArIFwiIFwiIF0gfHwgW10gKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuY29uY2F0KCBtYXRjaFsgMiBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdG1hdGNoID0gcmVzcG9uc2VIZWFkZXJzWyBrZXkudG9Mb3dlckNhc2UoKSArIFwiIFwiIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoLmpvaW4oIFwiLCBcIiApO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJhdyBzdHJpbmdcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gY29tcGxldGVkID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYWNoZXMgdGhlIGhlYWRlclxuXHRcdFx0XHRzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSA9XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8IG5hbWU7XG5cdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyXG5cdFx0XHRcdG92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRzLm1pbWVUeXBlID0gdHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdFx0c3RhdHVzQ29kZTogZnVuY3Rpb24oIG1hcCApIHtcblx0XHRcdFx0XHR2YXIgY29kZTtcblx0XHRcdFx0XHRpZiAoIG1hcCApIHtcblx0XHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0XHRqcVhIUi5hbHdheXMoIG1hcFsganFYSFIuc3RhdHVzIF0gKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFja3MgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0Zm9yICggY29kZSBpbiBtYXAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzQ29kZVsgY29kZSBdID0gWyBzdGF0dXNDb2RlWyBjb2RlIF0sIG1hcFsgY29kZSBdIF07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSByZXF1ZXN0XG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcblx0XHRcdFx0XHRpZiAoIHRyYW5zcG9ydCApIHtcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvbmUoIDAsIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xuXHRcdGRlZmVycmVkLnByb21pc2UoIGpxWEhSICk7XG5cblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkIChwcmVmaWx0ZXJzIG1pZ2h0IGV4cGVjdCBpdClcblx0XHQvLyBIYW5kbGUgZmFsc3kgdXJsIGluIHRoZSBzZXR0aW5ncyBvYmplY3QgKCMxMDA5MzogY29uc2lzdGVuY3kgd2l0aCBvbGQgc2lnbmF0dXJlKVxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxuXHRcdHMudXJsID0gKCAoIHVybCB8fCBzLnVybCB8fCBsb2NhdGlvbi5ocmVmICkgKyBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8IFwiKlwiICkudG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXG5cdFx0Ly8gQSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlciB3aGVuIHRoZSBvcmlnaW4gZG9lc24ndCBtYXRjaCB0aGUgY3VycmVudCBvcmlnaW4uXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XG5cdFx0XHR1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0XHQvLyBJRSB0aHJvd3MgZXhjZXB0aW9uIG9uIGFjY2Vzc2luZyB0aGUgaHJlZiBwcm9wZXJ0eSBpZiB1cmwgaXMgbWFsZm9ybWVkLFxuXHRcdFx0Ly8gZS5nLiBodHRwOi8vZXhhbXBsZS5jb206ODB4L1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSBzLnVybDtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSBvbmx5XG5cdFx0XHRcdC8vIEFuY2hvcidzIGhvc3QgcHJvcGVydHkgaXNuJ3QgY29ycmVjdGx5IHNldCB3aGVuIHMudXJsIGlzIHJlbGF0aXZlXG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gdXJsQW5jaG9yLmhyZWY7XG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSBvcmlnaW5BbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyBvcmlnaW5BbmNob3IuaG9zdCAhPT1cblx0XHRcdFx0XHR1cmxBbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxBbmNob3IuaG9zdDtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHBhcnNpbmcgdGhlIFVSTCwgYXNzdW1lIGl0IGlzIGNyb3NzRG9tYWluLFxuXHRcdFx0XHQvLyBpdCBjYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIHRyYW5zcG9ydCBpZiBpdCBpcyBpbnZhbGlkXG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZ1xuXHRcdGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcHJlZmlsdGVyc1xuXHRcdGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xuXG5cdFx0Ly8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmVcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdHJldHVybiBqcVhIUjtcblx0XHR9XG5cblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xuXHRcdC8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5ldmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICgjMTUxMTgpXG5cdFx0ZmlyZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7XG5cblx0XHQvLyBXYXRjaCBmb3IgYSBuZXcgc2V0IG9mIHJlcXVlc3RzXG5cdFx0aWYgKCBmaXJlR2xvYmFscyAmJiBqUXVlcnkuYWN0aXZlKysgPT09IDAgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RhcnRcIiApO1xuXHRcdH1cblxuXHRcdC8vIFVwcGVyY2FzZSB0aGUgdHlwZVxuXHRcdHMudHlwZSA9IHMudHlwZS50b1VwcGVyQ2FzZSgpO1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnRcblx0XHRzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTtcblxuXHRcdC8vIFNhdmUgdGhlIFVSTCBpbiBjYXNlIHdlJ3JlIHRveWluZyB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZVxuXHRcdC8vIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciBsYXRlciBvblxuXHRcdC8vIFJlbW92ZSBoYXNoIHRvIHNpbXBsaWZ5IHVybCBtYW5pcHVsYXRpb25cblx0XHRjYWNoZVVSTCA9IHMudXJsLnJlcGxhY2UoIHJoYXNoLCBcIlwiICk7XG5cblx0XHQvLyBNb3JlIG9wdGlvbnMgaGFuZGxpbmcgZm9yIHJlcXVlc3RzIHdpdGggbm8gY29udGVudFxuXHRcdGlmICggIXMuaGFzQ29udGVudCApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIGhhc2ggc28gd2UgY2FuIHB1dCBpdCBiYWNrXG5cdFx0XHR1bmNhY2hlZCA9IHMudXJsLnNsaWNlKCBjYWNoZVVSTC5sZW5ndGggKTtcblxuXHRcdFx0Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUgYW5kIHNob3VsZCBiZSBwcm9jZXNzZWQsIGFwcGVuZCBkYXRhIHRvIHVybFxuXHRcdFx0aWYgKCBzLmRhdGEgJiYgKCBzLnByb2Nlc3NEYXRhIHx8IHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgKSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuZGF0YTtcblxuXHRcdFx0XHQvLyAjOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5vdCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5XG5cdFx0XHRcdGRlbGV0ZSBzLmRhdGE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvciB1cGRhdGUgYW50aS1jYWNoZSBwYXJhbSBpZiBuZWVkZWRcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdGNhY2hlVVJMID0gY2FjaGVVUkwucmVwbGFjZSggcmFudGlDYWNoZSwgXCIkMVwiICk7XG5cdFx0XHRcdHVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArICggbm9uY2UrKyApICsgdW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsLCBvcHRpb25zICkge1xuXHRyZXR1cm4galF1ZXJ5LmFqYXgoIHtcblx0XHR1cmw6IHVybCxcblxuXHRcdC8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAoIzExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cblx0XHQvLyBPbmx5IGV2YWx1YXRlIHRoZSByZXNwb25zZSBpZiBpdCBpcyBzdWNjZXNzZnVsIChnaC00MTI2KVxuXHRcdC8vIGRhdGFGaWx0ZXIgaXMgbm90IGludm9rZWQgZm9yIGZhaWx1cmUgcmVzcG9uc2VzLCBzbyB1c2luZyBpdCBpbnN0ZWFkXG5cdFx0Ly8gb2YgdGhlIGRlZmF1bHQgY29udmVydGVyIGlzIGtsdWRneSBidXQgaXQgd29ya3MuXG5cdFx0Y29udmVydGVyczoge1xuXHRcdFx0XCJ0ZXh0IHNjcmlwdFwiOiBmdW5jdGlvbigpIHt9XG5cdFx0fSxcblx0XHRkYXRhRmlsdGVyOiBmdW5jdGlvbiggcmVzcG9uc2UgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggcmVzcG9uc2UsIG9wdGlvbnMgKTtcblx0XHR9XG5cdH0gKTtcbn07XG5cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHR3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHR2YXIgd3JhcDtcblxuXHRcdGlmICggdGhpc1sgMCBdICkge1xuXHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRcdGh0bWwgPSBodG1sLmNhbGwoIHRoaXNbIDAgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBUaGUgZWxlbWVudHMgdG8gd3JhcCB0aGUgdGFyZ2V0IGFyb3VuZFxuXHRcdFx0d3JhcCA9IGpRdWVyeSggaHRtbCwgdGhpc1sgMCBdLm93bmVyRG9jdW1lbnQgKS5lcSggMCApLmNsb25lKCB0cnVlICk7XG5cblx0XHRcdGlmICggdGhpc1sgMCBdLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdHdyYXAuaW5zZXJ0QmVmb3JlKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0d3JhcC5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IHRoaXM7XG5cblx0XHRcdFx0d2hpbGUgKCBlbGVtLmZpcnN0RWxlbWVudENoaWxkICkge1xuXHRcdFx0XHRcdGVsZW0gPSBlbGVtLmZpcnN0RWxlbWVudENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIGVsZW07XG5cdFx0XHR9ICkuYXBwZW5kKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0d3JhcElubmVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGh0bWwgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwSW5uZXIoIGh0bWwuY2FsbCggdGhpcywgaSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgc2VsZiA9IGpRdWVyeSggdGhpcyApLFxuXHRcdFx0XHRjb250ZW50cyA9IHNlbGYuY29udGVudHMoKTtcblxuXHRcdFx0aWYgKCBjb250ZW50cy5sZW5ndGggKSB7XG5cdFx0XHRcdGNvbnRlbnRzLndyYXBBbGwoIGh0bWwgKTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0c2VsZi5hcHBlbmQoIGh0bWwgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0d3JhcDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIGh0bWxJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggaHRtbCApO1xuXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS53cmFwQWxsKCBodG1sSXNGdW5jdGlvbiA/IGh0bWwuY2FsbCggdGhpcywgaSApIDogaHRtbCApO1xuXHRcdH0gKTtcblx0fSxcblxuXHR1bndyYXA6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHR0aGlzLnBhcmVudCggc2VsZWN0b3IgKS5ub3QoIFwiYm9keVwiICkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7XG5cdFx0fSApO1xuXHRcdHJldHVybiB0aGlzO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4cHIucHNldWRvcy5oaWRkZW4gPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICFqUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUoIGVsZW0gKTtcbn07XG5qUXVlcnkuZXhwci5wc2V1ZG9zLnZpc2libGUgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuICEhKCBlbGVtLm9mZnNldFdpZHRoIHx8IGVsZW0ub2Zmc2V0SGVpZ2h0IHx8IGVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKTtcbn07XG5cblxuXG5cbmpRdWVyeS5hamF4U2V0dGluZ3MueGhyID0gZnVuY3Rpb24oKSB7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKTtcblx0fSBjYXRjaCAoIGUgKSB7fVxufTtcblxudmFyIHhoclN1Y2Nlc3NTdGF0dXMgPSB7XG5cblx0XHQvLyBGaWxlIHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIGNvZGUgMCwgYXNzdW1lIDIwMFxuXHRcdDA6IDIwMCxcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0Ly8gIzE0NTA6IHNvbWV0aW1lcyBJRSByZXR1cm5zIDEyMjMgd2hlbiBpdCBzaG91bGQgYmUgMjA0XG5cdFx0MTIyMzogMjA0XG5cdH0sXG5cdHhoclN1cHBvcnRlZCA9IGpRdWVyeS5hamF4U2V0dGluZ3MueGhyKCk7XG5cbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcbnN1cHBvcnQuYWpheCA9IHhoclN1cHBvcnRlZCA9ICEheGhyU3VwcG9ydGVkO1xuXG5qUXVlcnkuYWpheFRyYW5zcG9ydCggZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cdHZhciBjYWxsYmFjaywgZXJyb3JDYWxsYmFjaztcblxuXHQvLyBDcm9zcyBkb21haW4gb25seSBhbGxvd2VkIGlmIHN1cHBvcnRlZCB0aHJvdWdoIFhNTEh0dHBSZXF1ZXN0XG5cdGlmICggc3VwcG9ydC5jb3JzIHx8IHhoclN1cHBvcnRlZCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHtcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIGhlYWRlcnMsIGNvbXBsZXRlICkge1xuXHRcdFx0XHR2YXIgaSxcblx0XHRcdFx0XHR4aHIgPSBvcHRpb25zLnhocigpO1xuXG5cdFx0XHRcdHhoci5vcGVuKFxuXHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcblx0XHRcdFx0XHRvcHRpb25zLnVybCxcblx0XHRcdFx0XHRvcHRpb25zLmFzeW5jLFxuXHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXG5cdFx0XHRcdFx0b3B0aW9ucy5wYXNzd29yZFxuXHRcdFx0XHQpO1xuXG5cdFx0XHRcdC8vIEFwcGx5IGN1c3RvbSBmaWVsZHMgaWYgcHJvdmlkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRmb3IgKCBpIGluIG9wdGlvbnMueGhyRmllbGRzICkge1xuXHRcdFx0XHRcdFx0eGhyWyBpIF0gPSBvcHRpb25zLnhockZpZWxkc1sgaSBdO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlIG1pbWUgdHlwZSBpZiBuZWVkZWRcblx0XHRcdFx0aWYgKCBvcHRpb25zLm1pbWVUeXBlICYmIHhoci5vdmVycmlkZU1pbWVUeXBlICkge1xuXHRcdFx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBYLVJlcXVlc3RlZC1XaXRoIGhlYWRlclxuXHRcdFx0XHQvLyBGb3IgY3Jvc3MtZG9tYWluIHJlcXVlc3RzLCBzZWVpbmcgYXMgY29uZGl0aW9ucyBmb3IgYSBwcmVmbGlnaHQgYXJlXG5cdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXG5cdFx0XHRcdC8vIChpdCBjYW4gYWx3YXlzIGJlIHNldCBvbiBhIHBlci1yZXF1ZXN0IGJhc2lzIG9yIGV2ZW4gdXNpbmcgYWpheFNldHVwKVxuXHRcdFx0XHQvLyBGb3Igc2FtZS1kb21haW4gcmVxdWVzdHMsIHdvbid0IGNoYW5nZSBoZWFkZXIgaWYgYWxyZWFkeSBwcm92aWRlZC5cblx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcblx0XHRcdFx0XHRoZWFkZXJzWyBcIlgtUmVxdWVzdGVkLVdpdGhcIiBdID0gXCJYTUxIdHRwUmVxdWVzdFwiO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU2V0IGhlYWRlcnNcblx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xuXHRcdFx0XHRcdHhoci5zZXRSZXF1ZXN0SGVhZGVyKCBpLCBoZWFkZXJzWyBpIF0gKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENhbGxiYWNrXG5cdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBlcnJvckNhbGxiYWNrID0geGhyLm9ubG9hZCA9XG5cdFx0XHRcdFx0XHRcdFx0eGhyLm9uZXJyb3IgPSB4aHIub25hYm9ydCA9IHhoci5vbnRpbWVvdXQgPVxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IG51bGw7XG5cblx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlID09PSBcImFib3J0XCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIHR5cGUgPT09IFwiZXJyb3JcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gT24gYSBtYW51YWwgbmF0aXZlIGFib3J0LCBJRTkgdGhyb3dzXG5cdFx0XHRcdFx0XHRcdFx0Ly8gZXJyb3JzIG9uIGFueSBwcm9wZXJ0eSBhY2Nlc3MgdGhhdCBpcyBub3QgcmVhZHlTdGF0ZVxuXHRcdFx0XHRcdFx0XHRcdGlmICggdHlwZW9mIHhoci5zdGF0dXMgIT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggMCwgXCJlcnJvclwiICk7XG5cdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNvbXBsZXRlKFxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIEZpbGU6IHByb3RvY29sIGFsd2F5cyB5aWVsZHMgc3RhdHVzIDA7IHNlZSAjODYwNSwgIzE0MjA3XG5cdFx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblx0XHRcdFx0XHRcdFx0XHRcdHhoclN1Y2Nlc3NTdGF0dXNbIHhoci5zdGF0dXMgXSB8fCB4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLnN0YXR1c1RleHQsXG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJRTkgaGFzIG5vIFhIUjIgYnV0IHRocm93cyBvbiBiaW5hcnkgKHRyYWMtMTE0MjYpXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBGb3IgWEhSMiBub24tdGV4dCwgbGV0IHRoZSBjYWxsZXIgaGFuZGxlIGl0IChnaC0yNDk4KVxuXHRcdFx0XHRcdFx0XHRcdFx0KCB4aHIucmVzcG9uc2VUeXBlIHx8IFwidGV4dFwiICkgIT09IFwidGV4dFwiICB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0dHlwZW9mIHhoci5yZXNwb25zZVRleHQgIT09IFwic3RyaW5nXCIgP1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IGJpbmFyeTogeGhyLnJlc3BvbnNlIH0gOlxuXHRcdFx0XHRcdFx0XHRcdFx0XHR7IHRleHQ6IHhoci5yZXNwb25zZVRleHQgfSxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKVxuXHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdC8vIExpc3RlbiB0byBldmVudHNcblx0XHRcdFx0eGhyLm9ubG9hZCA9IGNhbGxiYWNrKCk7XG5cdFx0XHRcdGVycm9yQ2FsbGJhY2sgPSB4aHIub25lcnJvciA9IHhoci5vbnRpbWVvdXQgPSBjYWxsYmFjayggXCJlcnJvclwiICk7XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0XHRcdC8vIFVzZSBvbnJlYWR5c3RhdGVjaGFuZ2UgdG8gcmVwbGFjZSBvbmFib3J0XG5cdFx0XHRcdC8vIHRvIGhhbmRsZSB1bmNhdWdodCBhYm9ydHNcblx0XHRcdFx0aWYgKCB4aHIub25hYm9ydCAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHhoci5vbmFib3J0ID0gZXJyb3JDYWxsYmFjaztcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHR4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24oKSB7XG5cblx0XHRcdFx0XHRcdC8vIENoZWNrIHJlYWR5U3RhdGUgYmVmb3JlIHRpbWVvdXQgYXMgaXQgY2hhbmdlc1xuXHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSA9PT0gNCApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBBbGxvdyBvbmVycm9yIHRvIGJlIGNhbGxlZCBmaXJzdCxcblx0XHRcdFx0XHRcdFx0Ly8gYnV0IHRoYXQgd2lsbCBub3QgaGFuZGxlIGEgbmF0aXZlIGFib3J0XG5cdFx0XHRcdFx0XHRcdC8vIEFsc28sIHNhdmUgZXJyb3JDYWxsYmFjayB0byBhIHZhcmlhYmxlXG5cdFx0XHRcdFx0XHRcdC8vIGFzIHhoci5vbmVycm9yIGNhbm5vdCBiZSBhY2Nlc3NlZFxuXHRcdFx0XHRcdFx0XHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGVycm9yQ2FsbGJhY2soKTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQ3JlYXRlIHRoZSBhYm9ydCBjYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGNhbGxiYWNrKCBcImFib3J0XCIgKTtcblxuXHRcdFx0XHR0cnkge1xuXG5cdFx0XHRcdFx0Ly8gRG8gc2VuZCB0aGUgcmVxdWVzdCAodGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uKVxuXHRcdFx0XHRcdHhoci5zZW5kKCBvcHRpb25zLmhhc0NvbnRlbnQgJiYgb3B0aW9ucy5kYXRhIHx8IG51bGwgKTtcblx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHQvLyAjMTQ2ODM6IE9ubHkgcmV0aHJvdyBpZiB0aGlzIGhhc24ndCBiZWVuIG5vdGlmaWVkIGFzIGFuIGVycm9yIHlldFxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHR0aHJvdyBlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbi8vIFByZXZlbnQgYXV0by1leGVjdXRpb24gb2Ygc2NyaXB0cyB3aGVuIG5vIGV4cGxpY2l0IGRhdGFUeXBlIHdhcyBwcm92aWRlZCAoU2VlIGdoLTI0MzIpXG5qUXVlcnkuYWpheFByZWZpbHRlciggZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLmNvbnRlbnRzLnNjcmlwdCA9IGZhbHNlO1xuXHR9XG59ICk7XG5cbi8vIEluc3RhbGwgc2NyaXB0IGRhdGFUeXBlXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGFjY2VwdHM6IHtcblx0XHRzY3JpcHQ6IFwidGV4dC9qYXZhc2NyaXB0LCBhcHBsaWNhdGlvbi9qYXZhc2NyaXB0LCBcIiArXG5cdFx0XHRcImFwcGxpY2F0aW9uL2VjbWFzY3JpcHQsIGFwcGxpY2F0aW9uL3gtZWNtYXNjcmlwdFwiXG5cdH0sXG5cdGNvbnRlbnRzOiB7XG5cdFx0c2NyaXB0OiAvXFxiKD86amF2YXxlY21hKXNjcmlwdFxcYi9cblx0fSxcblx0Y29udmVydGVyczoge1xuXHRcdFwidGV4dCBzY3JpcHRcIjogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xuXHRcdFx0cmV0dXJuIHRleHQ7XG5cdFx0fVxuXHR9XG59ICk7XG5cbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgY3Jvc3NEb21haW5cbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblx0aWYgKCBzLmNhY2hlID09PSB1bmRlZmluZWQgKSB7XG5cdFx0cy5jYWNoZSA9IGZhbHNlO1xuXHR9XG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHRzLnR5cGUgPSBcIkdFVFwiO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgc2NyaXB0IHRhZyBoYWNrIHRyYW5zcG9ydFxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xuXG5cdC8vIFRoaXMgdHJhbnNwb3J0IG9ubHkgZGVhbHMgd2l0aCBjcm9zcyBkb21haW4gb3IgZm9yY2VkLWJ5LWF0dHJzIHJlcXVlc3RzXG5cdGlmICggcy5jcm9zc0RvbWFpbiB8fCBzLnNjcmlwdEF0dHJzICkge1xuXHRcdHZhciBzY3JpcHQsIGNhbGxiYWNrO1xuXHRcdHJldHVybiB7XG5cdFx0XHRzZW5kOiBmdW5jdGlvbiggXywgY29tcGxldGUgKSB7XG5cdFx0XHRcdHNjcmlwdCA9IGpRdWVyeSggXCI8c2NyaXB0PlwiIClcblx0XHRcdFx0XHQuYXR0ciggcy5zY3JpcHRBdHRycyB8fCB7fSApXG5cdFx0XHRcdFx0LnByb3AoIHsgY2hhcnNldDogcy5zY3JpcHRDaGFyc2V0LCBzcmM6IHMudXJsIH0gKVxuXHRcdFx0XHRcdC5vbiggXCJsb2FkIGVycm9yXCIsIGNhbGxiYWNrID0gZnVuY3Rpb24oIGV2dCApIHtcblx0XHRcdFx0XHRcdHNjcmlwdC5yZW1vdmUoKTtcblx0XHRcdFx0XHRcdGNhbGxiYWNrID0gbnVsbDtcblx0XHRcdFx0XHRcdGlmICggZXZ0ICkge1xuXHRcdFx0XHRcdFx0XHRjb21wbGV0ZSggZXZ0LnR5cGUgPT09IFwiZXJyb3JcIiA/IDQwNCA6IDIwMCwgZXZ0LnR5cGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9ICk7XG5cblx0XHRcdFx0Ly8gVXNlIG5hdGl2ZSBET00gbWFuaXB1bGF0aW9uIHRvIGF2b2lkIG91ciBkb21NYW5pcCBBSkFYIHRyaWNrZXJ5XG5cdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoIHNjcmlwdFsgMCBdICk7XG5cdFx0XHR9LFxuXHRcdFx0YWJvcnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdGNhbGxiYWNrKCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9O1xuXHR9XG59ICk7XG5cblxuXG5cbnZhciBvbGRDYWxsYmFja3MgPSBbXSxcblx0cmpzb25wID0gLyg9KVxcPyg/PSZ8JCl8XFw/XFw/LztcblxuLy8gRGVmYXVsdCBqc29ucCBzZXR0aW5nc1xualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRqc29ucDogXCJjYWxsYmFja1wiLFxuXHRqc29ucENhbGxiYWNrOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgY2FsbGJhY2sgPSBvbGRDYWxsYmFja3MucG9wKCkgfHwgKCBqUXVlcnkuZXhwYW5kbyArIFwiX1wiICsgKCBub25jZSsrICkgKTtcblx0XHR0aGlzWyBjYWxsYmFjayBdID0gdHJ1ZTtcblx0XHRyZXR1cm4gY2FsbGJhY2s7XG5cdH1cbn0gKTtcblxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJqc29uIGpzb25wXCIsIGZ1bmN0aW9uKCBzLCBvcmlnaW5hbFNldHRpbmdzLCBqcVhIUiApIHtcblxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXG5cdFx0anNvblByb3AgPSBzLmpzb25wICE9PSBmYWxzZSAmJiAoIHJqc29ucC50ZXN0KCBzLnVybCApID9cblx0XHRcdFwidXJsXCIgOlxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApXG5cdFx0XHRcdFx0LmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCAmJlxuXHRcdFx0XHRyanNvbnAudGVzdCggcy5kYXRhICkgJiYgXCJkYXRhXCJcblx0XHQpO1xuXG5cdC8vIEhhbmRsZSBpZmYgdGhlIGV4cGVjdGVkIGRhdGEgdHlwZSBpcyBcImpzb25wXCIgb3Igd2UgaGF2ZSBhIHBhcmFtZXRlciB0byBzZXRcblx0aWYgKCBqc29uUHJvcCB8fCBzLmRhdGFUeXBlc1sgMCBdID09PSBcImpzb25wXCIgKSB7XG5cblx0XHQvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0XG5cdFx0Y2FsbGJhY2tOYW1lID0gcy5qc29ucENhbGxiYWNrID0gaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xuXHRcdFx0cy5qc29ucENhbGxiYWNrKCkgOlxuXHRcdFx0cy5qc29ucENhbGxiYWNrO1xuXG5cdFx0Ly8gSW5zZXJ0IGNhbGxiYWNrIGludG8gdXJsIG9yIGZvcm0gZGF0YVxuXHRcdGlmICgganNvblByb3AgKSB7XG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xuXHRcdH0gZWxzZSBpZiAoIHMuanNvbnAgIT09IGZhbHNlICkge1xuXHRcdFx0cy51cmwgKz0gKCBycXVlcnkudGVzdCggcy51cmwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuanNvbnAgKyBcIj1cIiArIGNhbGxiYWNrTmFtZTtcblx0XHR9XG5cblx0XHQvLyBVc2UgZGF0YSBjb252ZXJ0ZXIgdG8gcmV0cmlldmUganNvbiBhZnRlciBzY3JpcHQgZXhlY3V0aW9uXG5cdFx0cy5jb252ZXJ0ZXJzWyBcInNjcmlwdCBqc29uXCIgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCAhcmVzcG9uc2VDb250YWluZXIgKSB7XG5cdFx0XHRcdGpRdWVyeS5lcnJvciggY2FsbGJhY2tOYW1lICsgXCIgd2FzIG5vdCBjYWxsZWRcIiApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3BvbnNlQ29udGFpbmVyWyAwIF07XG5cdFx0fTtcblxuXHRcdC8vIEZvcmNlIGpzb24gZGF0YVR5cGVcblx0XHRzLmRhdGFUeXBlc1sgMCBdID0gXCJqc29uXCI7XG5cblx0XHQvLyBJbnN0YWxsIGNhbGxiYWNrXG5cdFx0b3ZlcndyaXR0ZW4gPSB3aW5kb3dbIGNhbGxiYWNrTmFtZSBdO1xuXHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHtcblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gYXJndW1lbnRzO1xuXHRcdH07XG5cblx0XHQvLyBDbGVhbi11cCBmdW5jdGlvbiAoZmlyZXMgYWZ0ZXIgY29udmVydGVycylcblx0XHRqcVhIUi5hbHdheXMoIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBJZiBwcmV2aW91cyB2YWx1ZSBkaWRuJ3QgZXhpc3QgLSByZW1vdmUgaXRcblx0XHRcdGlmICggb3ZlcndyaXR0ZW4gPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0alF1ZXJ5KCB3aW5kb3cgKS5yZW1vdmVQcm9wKCBjYWxsYmFja05hbWUgKTtcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlIHJlc3RvcmUgcHJlZXhpc3RpbmcgdmFsdWVcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBvdmVyd3JpdHRlbjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2F2ZSBiYWNrIGFzIGZyZWVcblx0XHRcdGlmICggc1sgY2FsbGJhY2tOYW1lIF0gKSB7XG5cblx0XHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgcmUtdXNpbmcgdGhlIG9wdGlvbnMgZG9lc24ndCBzY3JldyB0aGluZ3MgYXJvdW5kXG5cdFx0XHRcdHMuanNvbnBDYWxsYmFjayA9IG9yaWdpbmFsU2V0dGluZ3MuanNvbnBDYWxsYmFjaztcblxuXHRcdFx0XHQvLyBTYXZlIHRoZSBjYWxsYmFjayBuYW1lIGZvciBmdXR1cmUgdXNlXG5cdFx0XHRcdG9sZENhbGxiYWNrcy5wdXNoKCBjYWxsYmFja05hbWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2FsbCBpZiBpdCB3YXMgYSBmdW5jdGlvbiBhbmQgd2UgaGF2ZSBhIHJlc3BvbnNlXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGlzRnVuY3Rpb24oIG92ZXJ3cml0dGVuICkgKSB7XG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XG5cdFx0fSApO1xuXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XG5cdFx0cmV0dXJuIFwic2NyaXB0XCI7XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gU3VwcG9ydDogU2FmYXJpIDggb25seVxuLy8gSW4gU2FmYXJpIDggZG9jdW1lbnRzIGNyZWF0ZWQgdmlhIGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudFxuLy8gY29sbGFwc2Ugc2libGluZyBmb3JtczogdGhlIHNlY29uZCBvbmUgYmVjb21lcyBhIGNoaWxkIG9mIHRoZSBmaXJzdCBvbmUuXG4vLyBCZWNhdXNlIG9mIHRoYXQsIHRoaXMgc2VjdXJpdHkgbWVhc3VyZSBoYXMgdG8gYmUgZGlzYWJsZWQgaW4gU2FmYXJpIDguXG4vLyBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MTM3MzM3XG5zdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCA9ICggZnVuY3Rpb24oKSB7XG5cdHZhciBib2R5ID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50KCBcIlwiICkuYm9keTtcblx0Ym9keS5pbm5lckhUTUwgPSBcIjxmb3JtPjwvZm9ybT48Zm9ybT48L2Zvcm0+XCI7XG5cdHJldHVybiBib2R5LmNoaWxkTm9kZXMubGVuZ3RoID09PSAyO1xufSApKCk7XG5cblxuLy8gQXJndW1lbnQgXCJkYXRhXCIgc2hvdWxkIGJlIHN0cmluZyBvZiBodG1sXG4vLyBjb250ZXh0IChvcHRpb25hbCk6IElmIHNwZWNpZmllZCwgdGhlIGZyYWdtZW50IHdpbGwgYmUgY3JlYXRlZCBpbiB0aGlzIGNvbnRleHQsXG4vLyBkZWZhdWx0cyB0byBkb2N1bWVudFxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xualF1ZXJ5LnBhcnNlSFRNTCA9IGZ1bmN0aW9uKCBkYXRhLCBjb250ZXh0LCBrZWVwU2NyaXB0cyApIHtcblx0aWYgKCB0eXBlb2YgZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRyZXR1cm4gW107XG5cdH1cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0a2VlcFNjcmlwdHMgPSBjb250ZXh0O1xuXHRcdGNvbnRleHQgPSBmYWxzZTtcblx0fVxuXG5cdHZhciBiYXNlLCBwYXJzZWQsIHNjcmlwdHM7XG5cblx0aWYgKCAhY29udGV4dCApIHtcblxuXHRcdC8vIFN0b3Agc2NyaXB0cyBvciBpbmxpbmUgZXZlbnQgaGFuZGxlcnMgZnJvbSBiZWluZyBleGVjdXRlZCBpbW1lZGlhdGVseVxuXHRcdC8vIGJ5IHVzaW5nIGRvY3VtZW50LmltcGxlbWVudGF0aW9uXG5cdFx0aWYgKCBzdXBwb3J0LmNyZWF0ZUhUTUxEb2N1bWVudCApIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKTtcblxuXHRcdFx0Ly8gU2V0IHRoZSBiYXNlIGhyZWYgZm9yIHRoZSBjcmVhdGVkIGRvY3VtZW50XG5cdFx0XHQvLyBzbyBhbnkgcGFyc2VkIGVsZW1lbnRzIHdpdGggVVJMc1xuXHRcdFx0Ly8gYXJlIGJhc2VkIG9uIHRoZSBkb2N1bWVudCdzIFVSTCAoZ2gtMjk2NSlcblx0XHRcdGJhc2UgPSBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIFwiYmFzZVwiICk7XG5cdFx0XHRiYXNlLmhyZWYgPSBkb2N1bWVudC5sb2NhdGlvbi5ocmVmO1xuXHRcdFx0Y29udGV4dC5oZWFkLmFwcGVuZENoaWxkKCBiYXNlICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGNvbnRleHQgPSBkb2N1bWVudDtcblx0XHR9XG5cdH1cblxuXHRwYXJzZWQgPSByc2luZ2xlVGFnLmV4ZWMoIGRhdGEgKTtcblx0c2NyaXB0cyA9ICFrZWVwU2NyaXB0cyAmJiBbXTtcblxuXHQvLyBTaW5nbGUgdGFnXG5cdGlmICggcGFyc2VkICkge1xuXHRcdHJldHVybiBbIGNvbnRleHQuY3JlYXRlRWxlbWVudCggcGFyc2VkWyAxIF0gKSBdO1xuXHR9XG5cblx0cGFyc2VkID0gYnVpbGRGcmFnbWVudCggWyBkYXRhIF0sIGNvbnRleHQsIHNjcmlwdHMgKTtcblxuXHRpZiAoIHNjcmlwdHMgJiYgc2NyaXB0cy5sZW5ndGggKSB7XG5cdFx0alF1ZXJ5KCBzY3JpcHRzICkucmVtb3ZlKCk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5Lm1lcmdlKCBbXSwgcGFyc2VkLmNoaWxkTm9kZXMgKTtcbn07XG5cblxuLyoqXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXG4gKi9cbmpRdWVyeS5mbi5sb2FkID0gZnVuY3Rpb24oIHVybCwgcGFyYW1zLCBjYWxsYmFjayApIHtcblx0dmFyIHNlbGVjdG9yLCB0eXBlLCByZXNwb25zZSxcblx0XHRzZWxmID0gdGhpcyxcblx0XHRvZmYgPSB1cmwuaW5kZXhPZiggXCIgXCIgKTtcblxuXHRpZiAoIG9mZiA+IC0xICkge1xuXHRcdHNlbGVjdG9yID0gc3RyaXBBbmRDb2xsYXBzZSggdXJsLnNsaWNlKCBvZmYgKSApO1xuXHRcdHVybCA9IHVybC5zbGljZSggMCwgb2ZmICk7XG5cdH1cblxuXHQvLyBJZiBpdCdzIGEgZnVuY3Rpb25cblx0aWYgKCBpc0Z1bmN0aW9uKCBwYXJhbXMgKSApIHtcblxuXHRcdC8vIFdlIGFzc3VtZSB0aGF0IGl0J3MgdGhlIGNhbGxiYWNrXG5cdFx0Y2FsbGJhY2sgPSBwYXJhbXM7XG5cdFx0cGFyYW1zID0gdW5kZWZpbmVkO1xuXG5cdC8vIE90aGVyd2lzZSwgYnVpbGQgYSBwYXJhbSBzdHJpbmdcblx0fSBlbHNlIGlmICggcGFyYW1zICYmIHR5cGVvZiBwYXJhbXMgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0dHlwZSA9IFwiUE9TVFwiO1xuXHR9XG5cblx0Ly8gSWYgd2UgaGF2ZSBlbGVtZW50cyB0byBtb2RpZnksIG1ha2UgdGhlIHJlcXVlc3Rcblx0aWYgKCBzZWxmLmxlbmd0aCA+IDAgKSB7XG5cdFx0alF1ZXJ5LmFqYXgoIHtcblx0XHRcdHVybDogdXJsLFxuXG5cdFx0XHQvLyBJZiBcInR5cGVcIiB2YXJpYWJsZSBpcyB1bmRlZmluZWQsIHRoZW4gXCJHRVRcIiBtZXRob2Qgd2lsbCBiZSB1c2VkLlxuXHRcdFx0Ly8gTWFrZSB2YWx1ZSBvZiB0aGlzIGZpZWxkIGV4cGxpY2l0IHNpbmNlXG5cdFx0XHQvLyB1c2VyIGNhbiBvdmVycmlkZSBpdCB0aHJvdWdoIGFqYXhTZXR1cCBtZXRob2Rcblx0XHRcdHR5cGU6IHR5cGUgfHwgXCJHRVRcIixcblx0XHRcdGRhdGFUeXBlOiBcImh0bWxcIixcblx0XHRcdGRhdGE6IHBhcmFtc1xuXHRcdH0gKS5kb25lKCBmdW5jdGlvbiggcmVzcG9uc2VUZXh0ICkge1xuXG5cdFx0XHQvLyBTYXZlIHJlc3BvbnNlIGZvciB1c2UgaW4gY29tcGxldGUgY2FsbGJhY2tcblx0XHRcdHJlc3BvbnNlID0gYXJndW1lbnRzO1xuXG5cdFx0XHRzZWxmLmh0bWwoIHNlbGVjdG9yID9cblxuXHRcdFx0XHQvLyBJZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4gYSBkdW1teSBkaXZcblx0XHRcdFx0Ly8gRXhjbHVkZSBzY3JpcHRzIHRvIGF2b2lkIElFICdQZXJtaXNzaW9uIERlbmllZCcgZXJyb3JzXG5cdFx0XHRcdGpRdWVyeSggXCI8ZGl2PlwiICkuYXBwZW5kKCBqUXVlcnkucGFyc2VIVE1MKCByZXNwb25zZVRleHQgKSApLmZpbmQoIHNlbGVjdG9yICkgOlxuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSB1c2UgdGhlIGZ1bGwgcmVzdWx0XG5cdFx0XHRcdHJlc3BvbnNlVGV4dCApO1xuXG5cdFx0Ly8gSWYgdGhlIHJlcXVlc3Qgc3VjY2VlZHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImRhdGFcIiwgXCJzdGF0dXNcIiwgXCJqcVhIUlwiXG5cdFx0Ly8gYnV0IHRoZXkgYXJlIGlnbm9yZWQgYmVjYXVzZSByZXNwb25zZSB3YXMgc2V0IGFib3ZlLlxuXHRcdC8vIElmIGl0IGZhaWxzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJqcVhIUlwiLCBcInN0YXR1c1wiLCBcImVycm9yXCJcblx0XHR9ICkuYWx3YXlzKCBjYWxsYmFjayAmJiBmdW5jdGlvbigganFYSFIsIHN0YXR1cyApIHtcblx0XHRcdHNlbGYuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGNhbGxiYWNrLmFwcGx5KCB0aGlzLCByZXNwb25zZSB8fCBbIGpxWEhSLnJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBdICk7XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5cblxuXG4vLyBBdHRhY2ggYSBidW5jaCBvZiBmdW5jdGlvbnMgZm9yIGhhbmRsaW5nIGNvbW1vbiBBSkFYIGV2ZW50c1xualF1ZXJ5LmVhY2goIFtcblx0XCJhamF4U3RhcnRcIixcblx0XCJhamF4U3RvcFwiLFxuXHRcImFqYXhDb21wbGV0ZVwiLFxuXHRcImFqYXhFcnJvclwiLFxuXHRcImFqYXhTdWNjZXNzXCIsXG5cdFwiYWpheFNlbmRcIlxuXSwgZnVuY3Rpb24oIGksIHR5cGUgKSB7XG5cdGpRdWVyeS5mblsgdHlwZSBdID0gZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlLCBmbiApO1xuXHR9O1xufSApO1xuXG5cblxuXG5qUXVlcnkuZXhwci5wc2V1ZG9zLmFuaW1hdGVkID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiBqUXVlcnkuZ3JlcCggalF1ZXJ5LnRpbWVycywgZnVuY3Rpb24oIGZuICkge1xuXHRcdHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xuXHR9ICkubGVuZ3RoO1xufTtcblxuXG5cblxualF1ZXJ5Lm9mZnNldCA9IHtcblx0c2V0T2Zmc2V0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgaSApIHtcblx0XHR2YXIgY3VyUG9zaXRpb24sIGN1ckxlZnQsIGN1ckNTU1RvcCwgY3VyVG9wLCBjdXJPZmZzZXQsIGN1ckNTU0xlZnQsIGNhbGN1bGF0ZVBvc2l0aW9uLFxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcblx0XHRcdGN1ckVsZW0gPSBqUXVlcnkoIGVsZW0gKSxcblx0XHRcdHByb3BzID0ge307XG5cblx0XHQvLyBTZXQgcG9zaXRpb24gZmlyc3QsIGluLWNhc2UgdG9wL2xlZnQgYXJlIHNldCBldmVuIG9uIHN0YXRpYyBlbGVtXG5cdFx0aWYgKCBwb3NpdGlvbiA9PT0gXCJzdGF0aWNcIiApIHtcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XG5cdFx0fVxuXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcblx0XHRjdXJDU1NUb3AgPSBqUXVlcnkuY3NzKCBlbGVtLCBcInRvcFwiICk7XG5cdFx0Y3VyQ1NTTGVmdCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwibGVmdFwiICk7XG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXG5cdFx0XHQoIGN1ckNTU1RvcCArIGN1ckNTU0xlZnQgKS5pbmRleE9mKCBcImF1dG9cIiApID4gLTE7XG5cblx0XHQvLyBOZWVkIHRvIGJlIGFibGUgdG8gY2FsY3VsYXRlIHBvc2l0aW9uIGlmIGVpdGhlclxuXHRcdC8vIHRvcCBvciBsZWZ0IGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhlciBhYnNvbHV0ZSBvciBmaXhlZFxuXHRcdGlmICggY2FsY3VsYXRlUG9zaXRpb24gKSB7XG5cdFx0XHRjdXJQb3NpdGlvbiA9IGN1ckVsZW0ucG9zaXRpb24oKTtcblx0XHRcdGN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDtcblx0XHRcdGN1ckxlZnQgPSBjdXJQb3NpdGlvbi5sZWZ0O1xuXG5cdFx0fSBlbHNlIHtcblx0XHRcdGN1clRvcCA9IHBhcnNlRmxvYXQoIGN1ckNTU1RvcCApIHx8IDA7XG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHRpb25zICkgKSB7XG5cblx0XHRcdC8vIFVzZSBqUXVlcnkuZXh0ZW5kIGhlcmUgdG8gYWxsb3cgbW9kaWZpY2F0aW9uIG9mIGNvb3JkaW5hdGVzIGFyZ3VtZW50IChnaC0xODQ4KVxuXHRcdFx0b3B0aW9ucyA9IG9wdGlvbnMuY2FsbCggZWxlbSwgaSwgalF1ZXJ5LmV4dGVuZCgge30sIGN1ck9mZnNldCApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBvcHRpb25zLnRvcCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcblx0XHR9XG5cdFx0aWYgKCBvcHRpb25zLmxlZnQgIT0gbnVsbCApIHtcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xuXHRcdH1cblxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRvcHRpb25zLnVzaW5nLmNhbGwoIGVsZW0sIHByb3BzICk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyRWxlbS5jc3MoIHByb3BzICk7XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0Ly8gb2Zmc2V0KCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgYm9yZGVyIGJveCB0byB0aGUgZG9jdW1lbnQgb3JpZ2luXG5cdG9mZnNldDogZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0XHQvLyBQcmVzZXJ2ZSBjaGFpbmluZyBmb3Igc2V0dGVyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0cmV0dXJuIG9wdGlvbnMgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdHRoaXMgOlxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRcdGpRdWVyeS5vZmZzZXQuc2V0T2Zmc2V0KCB0aGlzLCBvcHRpb25zLCBpICk7XG5cdFx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHR2YXIgcmVjdCwgd2luLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcblxuXHRcdGlmICggIWVsZW0gKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHplcm9zIGZvciBkaXNjb25uZWN0ZWQgYW5kIGhpZGRlbiAoZGlzcGxheTogbm9uZSkgZWxlbWVudHMgKGdoLTIzMTApXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG5cdFx0Ly8gUnVubmluZyBnZXRCb3VuZGluZ0NsaWVudFJlY3Qgb24gYVxuXHRcdC8vIGRpc2Nvbm5lY3RlZCBub2RlIGluIElFIHRocm93cyBhbiBlcnJvclxuXHRcdGlmICggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTtcblx0XHR9XG5cblx0XHQvLyBHZXQgZG9jdW1lbnQtcmVsYXRpdmUgcG9zaXRpb24gYnkgYWRkaW5nIHZpZXdwb3J0IHNjcm9sbCB0byB2aWV3cG9ydC1yZWxhdGl2ZSBnQkNSXG5cdFx0cmVjdCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cdFx0d2luID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IHJlY3QudG9wICsgd2luLnBhZ2VZT2Zmc2V0LFxuXHRcdFx0bGVmdDogcmVjdC5sZWZ0ICsgd2luLnBhZ2VYT2Zmc2V0XG5cdFx0fTtcblx0fSxcblxuXHQvLyBwb3NpdGlvbigpIHJlbGF0ZXMgYW4gZWxlbWVudCdzIG1hcmdpbiBib3ggdG8gaXRzIG9mZnNldCBwYXJlbnQncyBwYWRkaW5nIGJveFxuXHQvLyBUaGlzIGNvcnJlc3BvbmRzIHRvIHRoZSBiZWhhdmlvciBvZiBDU1MgYWJzb2x1dGUgcG9zaXRpb25pbmdcblx0cG9zaXRpb246IGZ1bmN0aW9uKCkge1xuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHR2YXIgb2Zmc2V0UGFyZW50LCBvZmZzZXQsIGRvYyxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRwYXJlbnRPZmZzZXQgPSB7IHRvcDogMCwgbGVmdDogMCB9O1xuXG5cdFx0Ly8gcG9zaXRpb246Zml4ZWQgZWxlbWVudHMgYXJlIG9mZnNldCBmcm9tIHRoZSB2aWV3cG9ydCwgd2hpY2ggaXRzZWxmIGFsd2F5cyBoYXMgemVybyBvZmZzZXRcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XG5cblx0XHRcdC8vIEFzc3VtZSBwb3NpdGlvbjpmaXhlZCBpbXBsaWVzIGF2YWlsYWJpbGl0eSBvZiBnZXRCb3VuZGluZ0NsaWVudFJlY3Rcblx0XHRcdG9mZnNldCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0b2Zmc2V0ID0gdGhpcy5vZmZzZXQoKTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdGhlICpyZWFsKiBvZmZzZXQgcGFyZW50LCB3aGljaCBjYW4gYmUgdGhlIGRvY3VtZW50IG9yIGl0cyByb290IGVsZW1lbnRcblx0XHRcdC8vIHdoZW4gYSBzdGF0aWNhbGx5IHBvc2l0aW9uZWQgZWxlbWVudCBpcyBpZGVudGlmaWVkXG5cdFx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQ7XG5cdFx0XHRvZmZzZXRQYXJlbnQgPSBlbGVtLm9mZnNldFBhcmVudCB8fCBkb2MuZG9jdW1lbnRFbGVtZW50O1xuXHRcdFx0d2hpbGUgKCBvZmZzZXRQYXJlbnQgJiZcblx0XHRcdFx0KCBvZmZzZXRQYXJlbnQgPT09IGRvYy5ib2R5IHx8IG9mZnNldFBhcmVudCA9PT0gZG9jLmRvY3VtZW50RWxlbWVudCApICYmXG5cdFx0XHRcdGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cblx0XHRcdFx0b2Zmc2V0UGFyZW50ID0gb2Zmc2V0UGFyZW50LnBhcmVudE5vZGU7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIG9mZnNldFBhcmVudCAmJiBvZmZzZXRQYXJlbnQgIT09IGVsZW0gJiYgb2Zmc2V0UGFyZW50Lm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIEluY29ycG9yYXRlIGJvcmRlcnMgaW50byBpdHMgb2Zmc2V0LCBzaW5jZSB0aGV5IGFyZSBvdXRzaWRlIGl0cyBjb250ZW50IG9yaWdpblxuXHRcdFx0XHRwYXJlbnRPZmZzZXQgPSBqUXVlcnkoIG9mZnNldFBhcmVudCApLm9mZnNldCgpO1xuXHRcdFx0XHRwYXJlbnRPZmZzZXQudG9wICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJUb3BXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC5sZWZ0ICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJib3JkZXJMZWZ0V2lkdGhcIiwgdHJ1ZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFN1YnRyYWN0IHBhcmVudCBvZmZzZXRzIGFuZCBlbGVtZW50IG1hcmdpbnNcblx0XHRyZXR1cm4ge1xuXHRcdFx0dG9wOiBvZmZzZXQudG9wIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcblx0XHRcdGxlZnQ6IG9mZnNldC5sZWZ0IC0gcGFyZW50T2Zmc2V0LmxlZnQgLSBqUXVlcnkuY3NzKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiwgdHJ1ZSApXG5cdFx0fTtcblx0fSxcblxuXHQvLyBUaGlzIG1ldGhvZCB3aWxsIHJldHVybiBkb2N1bWVudEVsZW1lbnQgaW4gdGhlIGZvbGxvd2luZyBjYXNlczpcblx0Ly8gMSkgRm9yIHRoZSBlbGVtZW50IGluc2lkZSB0aGUgaWZyYW1lIHdpdGhvdXQgb2Zmc2V0UGFyZW50LCB0aGlzIG1ldGhvZCB3aWxsIHJldHVyblxuXHQvLyAgICBkb2N1bWVudEVsZW1lbnQgb2YgdGhlIHBhcmVudCB3aW5kb3dcblx0Ly8gMikgRm9yIHRoZSBoaWRkZW4gb3IgZGV0YWNoZWQgZWxlbWVudFxuXHQvLyAzKSBGb3IgYm9keSBvciBodG1sIGVsZW1lbnQsIGkuZS4gaW4gY2FzZSBvZiB0aGUgaHRtbCBub2RlIC0gaXQgd2lsbCByZXR1cm4gaXRzZWxmXG5cdC8vXG5cdC8vIGJ1dCB0aG9zZSBleGNlcHRpb25zIHdlcmUgbmV2ZXIgcHJlc2VudGVkIGFzIGEgcmVhbCBsaWZlIHVzZS1jYXNlc1xuXHQvLyBhbmQgbWlnaHQgYmUgY29uc2lkZXJlZCBhcyBtb3JlIHByZWZlcmFibGUgcmVzdWx0cy5cblx0Ly9cblx0Ly8gVGhpcyBsb2dpYywgaG93ZXZlciwgaXMgbm90IGd1YXJhbnRlZWQgYW5kIGNhbiBjaGFuZ2UgYXQgYW55IHBvaW50IGluIHRoZSBmdXR1cmVcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIG9mZnNldFBhcmVudCA9IHRoaXMub2Zmc2V0UGFyZW50O1xuXG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJiBqUXVlcnkuY3NzKCBvZmZzZXRQYXJlbnQsIFwicG9zaXRpb25cIiApID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQub2Zmc2V0UGFyZW50O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gb2Zmc2V0UGFyZW50IHx8IGRvY3VtZW50RWxlbWVudDtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuLy8gQ3JlYXRlIHNjcm9sbExlZnQgYW5kIHNjcm9sbFRvcCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBzY3JvbGxMZWZ0OiBcInBhZ2VYT2Zmc2V0XCIsIHNjcm9sbFRvcDogXCJwYWdlWU9mZnNldFwiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIHByb3AgKSB7XG5cdHZhciB0b3AgPSBcInBhZ2VZT2Zmc2V0XCIgPT09IHByb3A7XG5cblx0alF1ZXJ5LmZuWyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIG1ldGhvZCwgdmFsICkge1xuXG5cdFx0XHQvLyBDb2FsZXNjZSBkb2N1bWVudHMgYW5kIHdpbmRvd3Ncblx0XHRcdHZhciB3aW47XG5cdFx0XHRpZiAoIGlzV2luZG93KCBlbGVtICkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW07XG5cdFx0XHR9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR3aW4gPSBlbGVtLmRlZmF1bHRWaWV3O1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gd2luID8gd2luWyBwcm9wIF0gOiBlbGVtWyBtZXRob2QgXTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKCB3aW4gKSB7XG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcblx0XHRcdFx0XHQhdG9wID8gdmFsIDogd2luLnBhZ2VYT2Zmc2V0LFxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IHdpbi5wYWdlWU9mZnNldFxuXHRcdFx0XHQpO1xuXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcblx0XHRcdH1cblx0XHR9LCBtZXRob2QsIHZhbCwgYXJndW1lbnRzLmxlbmd0aCApO1xuXHR9O1xufSApO1xuXG4vLyBTdXBwb3J0OiBTYWZhcmkgPD03IC0gOS4xLCBDaHJvbWUgPD0zNyAtIDQ5XG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxuLy8gV2Via2l0IGJ1ZzogaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTI5MDg0XG4vLyBCbGluayBidWc6IGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTU4OTM0N1xuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodDtcbi8vIHJhdGhlciB0aGFuIG1ha2UgdGhlIGNzcyBtb2R1bGUgZGVwZW5kIG9uIHRoZSBvZmZzZXQgbW9kdWxlLCBqdXN0IGNoZWNrIGZvciBpdCBoZXJlXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggaSwgcHJvcCApIHtcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcm9wIF0gPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucGl4ZWxQb3NpdGlvbixcblx0XHRmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQgKSB7XG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0XHRjb21wdXRlZCA9IGN1ckNTUyggZWxlbSwgcHJvcCApO1xuXG5cdFx0XHRcdC8vIElmIGN1ckNTUyByZXR1cm5zIHBlcmNlbnRhZ2UsIGZhbGxiYWNrIHRvIG9mZnNldFxuXHRcdFx0XHRyZXR1cm4gcm51bW5vbnB4LnRlc3QoIGNvbXB1dGVkICkgP1xuXHRcdFx0XHRcdGpRdWVyeSggZWxlbSApLnBvc2l0aW9uKClbIHByb3AgXSArIFwicHhcIiA6XG5cdFx0XHRcdFx0Y29tcHV0ZWQ7XG5cdFx0XHR9XG5cdFx0fVxuXHQpO1xufSApO1xuXG5cbi8vIENyZWF0ZSBpbm5lckhlaWdodCwgaW5uZXJXaWR0aCwgaGVpZ2h0LCB3aWR0aCwgb3V0ZXJIZWlnaHQgYW5kIG91dGVyV2lkdGggbWV0aG9kc1xualF1ZXJ5LmVhY2goIHsgSGVpZ2h0OiBcImhlaWdodFwiLCBXaWR0aDogXCJ3aWR0aFwiIH0sIGZ1bmN0aW9uKCBuYW1lLCB0eXBlICkge1xuXHRqUXVlcnkuZWFjaCggeyBwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLCBjb250ZW50OiB0eXBlLCBcIlwiOiBcIm91dGVyXCIgKyBuYW1lIH0sXG5cdFx0ZnVuY3Rpb24oIGRlZmF1bHRFeHRyYSwgZnVuY05hbWUgKSB7XG5cblx0XHQvLyBNYXJnaW4gaXMgb25seSBmb3Igb3V0ZXJIZWlnaHQsIG91dGVyV2lkdGhcblx0XHRqUXVlcnkuZm5bIGZ1bmNOYW1lIF0gPSBmdW5jdGlvbiggbWFyZ2luLCB2YWx1ZSApIHtcblx0XHRcdHZhciBjaGFpbmFibGUgPSBhcmd1bWVudHMubGVuZ3RoICYmICggZGVmYXVsdEV4dHJhIHx8IHR5cGVvZiBtYXJnaW4gIT09IFwiYm9vbGVhblwiICksXG5cdFx0XHRcdGV4dHJhID0gZGVmYXVsdEV4dHJhIHx8ICggbWFyZ2luID09PSB0cnVlIHx8IHZhbHVlID09PSB0cnVlID8gXCJtYXJnaW5cIiA6IFwiYm9yZGVyXCIgKTtcblxuXHRcdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIGVsZW0sIHR5cGUsIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgZG9jO1xuXG5cdFx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0XHRcdC8vICQoIHdpbmRvdyApLm91dGVyV2lkdGgvSGVpZ2h0IHJldHVybiB3L2ggaW5jbHVkaW5nIHNjcm9sbGJhcnMgKGdoLTE3MjkpXG5cdFx0XHRcdFx0cmV0dXJuIGZ1bmNOYW1lLmluZGV4T2YoIFwib3V0ZXJcIiApID09PSAwID9cblx0XHRcdFx0XHRcdGVsZW1bIFwiaW5uZXJcIiArIG5hbWUgXSA6XG5cdFx0XHRcdFx0XHRlbGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgXCJjbGllbnRcIiArIG5hbWUgXTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEdldCBkb2N1bWVudCB3aWR0aCBvciBoZWlnaHRcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHRcdGRvYyA9IGVsZW0uZG9jdW1lbnRFbGVtZW50O1xuXG5cdFx0XHRcdFx0Ly8gRWl0aGVyIHNjcm9sbFtXaWR0aC9IZWlnaHRdIG9yIG9mZnNldFtXaWR0aC9IZWlnaHRdIG9yIGNsaWVudFtXaWR0aC9IZWlnaHRdLFxuXHRcdFx0XHRcdC8vIHdoaWNoZXZlciBpcyBncmVhdGVzdFxuXHRcdFx0XHRcdHJldHVybiBNYXRoLm1heChcblx0XHRcdFx0XHRcdGVsZW0uYm9keVsgXCJzY3JvbGxcIiArIG5hbWUgXSwgZG9jWyBcInNjcm9sbFwiICsgbmFtZSBdLFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcIm9mZnNldFwiICsgbmFtZSBdLCBkb2NbIFwib2Zmc2V0XCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRkb2NbIFwiY2xpZW50XCIgKyBuYW1lIF1cblx0XHRcdFx0XHQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgP1xuXG5cdFx0XHRcdFx0Ly8gR2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudCwgcmVxdWVzdGluZyBidXQgbm90IGZvcmNpbmcgcGFyc2VGbG9hdFxuXHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIHR5cGUsIGV4dHJhICkgOlxuXG5cdFx0XHRcdFx0Ly8gU2V0IHdpZHRoIG9yIGhlaWdodCBvbiB0aGUgZWxlbWVudFxuXHRcdFx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgdHlwZSwgdmFsdWUsIGV4dHJhICk7XG5cdFx0XHR9LCB0eXBlLCBjaGFpbmFibGUgPyBtYXJnaW4gOiB1bmRlZmluZWQsIGNoYWluYWJsZSApO1xuXHRcdH07XG5cdH0gKTtcbn0gKTtcblxuXG5qUXVlcnkuZWFjaCggKCBcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCByZXNpemUgc2Nyb2xsIGNsaWNrIGRibGNsaWNrIFwiICtcblx0XCJtb3VzZWRvd24gbW91c2V1cCBtb3VzZW1vdmUgbW91c2VvdmVyIG1vdXNlb3V0IG1vdXNlZW50ZXIgbW91c2VsZWF2ZSBcIiArXG5cdFwiY2hhbmdlIHNlbGVjdCBzdWJtaXQga2V5ZG93biBrZXlwcmVzcyBrZXl1cCBjb250ZXh0bWVudVwiICkuc3BsaXQoIFwiIFwiICksXG5cdGZ1bmN0aW9uKCBpLCBuYW1lICkge1xuXG5cdC8vIEhhbmRsZSBldmVudCBiaW5kaW5nXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMCA/XG5cdFx0XHR0aGlzLm9uKCBuYW1lLCBudWxsLCBkYXRhLCBmbiApIDpcblx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhvdmVyOiBmdW5jdGlvbiggZm5PdmVyLCBmbk91dCApIHtcblx0XHRyZXR1cm4gdGhpcy5tb3VzZWVudGVyKCBmbk92ZXIgKS5tb3VzZWxlYXZlKCBmbk91dCB8fCBmbk92ZXIgKTtcblx0fVxufSApO1xuXG5cblxuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0YmluZDogZnVuY3Rpb24oIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuYmluZDogZnVuY3Rpb24oIHR5cGVzLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApO1xuXHR9LFxuXG5cdGRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHtcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHR1bmRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBmbiApIHtcblxuXHRcdC8vICggbmFtZXNwYWNlICkgb3IgKCBzZWxlY3RvciwgdHlwZXMgWywgZm5dIClcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XG5cdFx0XHR0aGlzLm9mZiggc2VsZWN0b3IsIFwiKipcIiApIDpcblx0XHRcdHRoaXMub2ZmKCB0eXBlcywgc2VsZWN0b3IgfHwgXCIqKlwiLCBmbiApO1xuXHR9XG59ICk7XG5cbi8vIEJpbmQgYSBmdW5jdGlvbiB0byBhIGNvbnRleHQsIG9wdGlvbmFsbHkgcGFydGlhbGx5IGFwcGx5aW5nIGFueVxuLy8gYXJndW1lbnRzLlxuLy8galF1ZXJ5LnByb3h5IGlzIGRlcHJlY2F0ZWQgdG8gcHJvbW90ZSBzdGFuZGFyZHMgKHNwZWNpZmljYWxseSBGdW5jdGlvbiNiaW5kKVxuLy8gSG93ZXZlciwgaXQgaXMgbm90IHNsYXRlZCBmb3IgcmVtb3ZhbCBhbnkgdGltZSBzb29uXG5qUXVlcnkucHJveHkgPSBmdW5jdGlvbiggZm4sIGNvbnRleHQgKSB7XG5cdHZhciB0bXAsIGFyZ3MsIHByb3h5O1xuXG5cdGlmICggdHlwZW9mIGNvbnRleHQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0dG1wID0gZm5bIGNvbnRleHQgXTtcblx0XHRjb250ZXh0ID0gZm47XG5cdFx0Zm4gPSB0bXA7XG5cdH1cblxuXHQvLyBRdWljayBjaGVjayB0byBkZXRlcm1pbmUgaWYgdGFyZ2V0IGlzIGNhbGxhYmxlLCBpbiB0aGUgc3BlY1xuXHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxuXHRpZiAoICFpc0Z1bmN0aW9uKCBmbiApICkge1xuXHRcdHJldHVybiB1bmRlZmluZWQ7XG5cdH1cblxuXHQvLyBTaW11bGF0ZWQgYmluZFxuXHRhcmdzID0gc2xpY2UuY2FsbCggYXJndW1lbnRzLCAyICk7XG5cdHByb3h5ID0gZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGZuLmFwcGx5KCBjb250ZXh0IHx8IHRoaXMsIGFyZ3MuY29uY2F0KCBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSApICk7XG5cdH07XG5cblx0Ly8gU2V0IHRoZSBndWlkIG9mIHVuaXF1ZSBoYW5kbGVyIHRvIHRoZSBzYW1lIG9mIG9yaWdpbmFsIGhhbmRsZXIsIHNvIGl0IGNhbiBiZSByZW1vdmVkXG5cdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xuXG5cdHJldHVybiBwcm94eTtcbn07XG5cbmpRdWVyeS5ob2xkUmVhZHkgPSBmdW5jdGlvbiggaG9sZCApIHtcblx0aWYgKCBob2xkICkge1xuXHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcblx0fSBlbHNlIHtcblx0XHRqUXVlcnkucmVhZHkoIHRydWUgKTtcblx0fVxufTtcbmpRdWVyeS5pc0FycmF5ID0gQXJyYXkuaXNBcnJheTtcbmpRdWVyeS5wYXJzZUpTT04gPSBKU09OLnBhcnNlO1xualF1ZXJ5Lm5vZGVOYW1lID0gbm9kZU5hbWU7XG5qUXVlcnkuaXNGdW5jdGlvbiA9IGlzRnVuY3Rpb247XG5qUXVlcnkuaXNXaW5kb3cgPSBpc1dpbmRvdztcbmpRdWVyeS5jYW1lbENhc2UgPSBjYW1lbENhc2U7XG5qUXVlcnkudHlwZSA9IHRvVHlwZTtcblxualF1ZXJ5Lm5vdyA9IERhdGUubm93O1xuXG5qUXVlcnkuaXNOdW1lcmljID0gZnVuY3Rpb24oIG9iaiApIHtcblxuXHQvLyBBcyBvZiBqUXVlcnkgMy4wLCBpc051bWVyaWMgaXMgbGltaXRlZCB0b1xuXHQvLyBzdHJpbmdzIGFuZCBudW1iZXJzIChwcmltaXRpdmVzIG9yIG9iamVjdHMpXG5cdC8vIHRoYXQgY2FuIGJlIGNvZXJjZWQgdG8gZmluaXRlIG51bWJlcnMgKGdoLTI2NjIpXG5cdHZhciB0eXBlID0galF1ZXJ5LnR5cGUoIG9iaiApO1xuXHRyZXR1cm4gKCB0eXBlID09PSBcIm51bWJlclwiIHx8IHR5cGUgPT09IFwic3RyaW5nXCIgKSAmJlxuXG5cdFx0Ly8gcGFyc2VGbG9hdCBOYU5zIG51bWVyaWMtY2FzdCBmYWxzZSBwb3NpdGl2ZXMgKFwiXCIpXG5cdFx0Ly8gLi4uYnV0IG1pc2ludGVycHJldHMgbGVhZGluZy1udW1iZXIgc3RyaW5ncywgcGFydGljdWxhcmx5IGhleCBsaXRlcmFscyAoXCIweC4uLlwiKVxuXHRcdC8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTlxuXHRcdCFpc05hTiggb2JqIC0gcGFyc2VGbG9hdCggb2JqICkgKTtcbn07XG5cblxuXG5cbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxuLy8gZmlsZXMgdGhhdCBtYXkgdXNlIGRlZmluZSwgYnV0IG5vdCB2aWEgYSBwcm9wZXIgY29uY2F0ZW5hdGlvbiBzY3JpcHQgdGhhdFxuLy8gdW5kZXJzdGFuZHMgYW5vbnltb3VzIEFNRCBtb2R1bGVzLiBBIG5hbWVkIEFNRCBpcyBzYWZlc3QgYW5kIG1vc3Qgcm9idXN0XG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXG4vLyBkZXJpdmVkIGZyb20gZmlsZSBuYW1lcywgYW5kIGpRdWVyeSBpcyBub3JtYWxseSBkZWxpdmVyZWQgaW4gYSBsb3dlcmNhc2Vcbi8vIGZpbGUgbmFtZS4gRG8gdGhpcyBhZnRlciBjcmVhdGluZyB0aGUgZ2xvYmFsIHNvIHRoYXQgaWYgYW4gQU1EIG1vZHVsZSB3YW50c1xuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxuXG4vLyBOb3RlIHRoYXQgZm9yIG1heGltdW0gcG9ydGFiaWxpdHksIGxpYnJhcmllcyB0aGF0IGFyZSBub3QgalF1ZXJ5IHNob3VsZFxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxuLy8gQU1EIGxvYWRlciBpcyBwcmVzZW50LiBqUXVlcnkgaXMgYSBzcGVjaWFsIGNhc2UuIEZvciBtb3JlIGluZm9ybWF0aW9uLCBzZWVcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9qcmJ1cmtlL3JlcXVpcmVqcy93aWtpL1VwZGF0aW5nLWV4aXN0aW5nLWxpYnJhcmllcyN3aWtpLWFub25cblxuaWYgKCB0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIgJiYgZGVmaW5lLmFtZCApIHtcblx0ZGVmaW5lKCBcImpxdWVyeVwiLCBbXSwgZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIGpRdWVyeTtcblx0fSApO1xufVxuXG5cblxuXG52YXJcblxuXHQvLyBNYXAgb3ZlciBqUXVlcnkgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0X2pRdWVyeSA9IHdpbmRvdy5qUXVlcnksXG5cblx0Ly8gTWFwIG92ZXIgdGhlICQgaW4gY2FzZSBvZiBvdmVyd3JpdGVcblx0XyQgPSB3aW5kb3cuJDtcblxualF1ZXJ5Lm5vQ29uZmxpY3QgPSBmdW5jdGlvbiggZGVlcCApIHtcblx0aWYgKCB3aW5kb3cuJCA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy4kID0gXyQ7XG5cdH1cblxuXHRpZiAoIGRlZXAgJiYgd2luZG93LmpRdWVyeSA9PT0galF1ZXJ5ICkge1xuXHRcdHdpbmRvdy5qUXVlcnkgPSBfalF1ZXJ5O1xuXHR9XG5cblx0cmV0dXJuIGpRdWVyeTtcbn07XG5cbi8vIEV4cG9zZSBqUXVlcnkgYW5kICQgaWRlbnRpZmllcnMsIGV2ZW4gaW4gQU1EXG4vLyAoIzcxMDIjY29tbWVudDoxMCwgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvcHVsbC81NTcpXG4vLyBhbmQgQ29tbW9uSlMgZm9yIGJyb3dzZXIgZW11bGF0b3JzICgjMTM1NjYpXG5pZiAoICFub0dsb2JhbCApIHtcblx0d2luZG93LmpRdWVyeSA9IHdpbmRvdy4kID0galF1ZXJ5O1xufVxuXG5cblxuXG5yZXR1cm4galF1ZXJ5O1xufSApO1xuIiwiY29uc3QgQ0xBU1NFUyA9IHtcbiAgICBDQUxFTkRBUjogJ2pzLWNhbGVuZGFyJyxcbiAgICBCVE5fUFJFVl9NT05USDogJ2pzLWNhbGVuZGFyX19idG4tcHJldi1tb250aCcsXG4gICAgQlROX05FWFRfTU9OVEg6ICdqcy1jYWxlbmRhcl9fYnRuLW5leHQtbW9udGgnLFxuICAgIERSQVdOX0RBVEU6ICdqcy1jYWxlbmRhcl9fZHJhd24tZGF0ZScsXG4gICAgREFZU19DT05UQUlORVI6ICdqcy1jYWxlbmRhcl9fZGF5cy1jb250YWluZXInLFxuICAgIERBWV9XRUVLOiAnanMtY2FsZW5kYXJfX2RheS13ZWVrJyxcbiAgICBEQVlfV0VFS19BTk9USEVSX01PTlRIOiAnanMtY2FsZW5kYXJfX2RheS13ZWVrX3RoZW1lX2Fub3RoZXItbW9udGgnLFxuICAgIFJBTkdFX0RBWTogJ2NhbGVuZGFyX19kYXktd2Vla190aGVtZV9yYW5nZS1kYXknLFxuICAgIFJBTkdFX0RBWV9TVEFSVDogJ2NhbGVuZGFyX19kYXktd2Vla19yYW5nZS1kYXktc3RhcnQnLFxuICAgIFJBTkdFX0RBWV9FTkQ6ICdjYWxlbmRhcl9fZGF5LXdlZWtfcmFuZ2UtZGF5LWVuZCcsXG4gICAgUkFOR0VfREFZX01JRERMRTogJ2NhbGVuZGFyX19kYXktd2Vla190aGVtZV9yYW5nZS1kYXktbWlkZGxlJyxcbiAgICBCVE5fQVBQTFk6ICdqcy1jYWxlbmRhcl9fYnRuLWFwcGx5JyxcbiAgICBCVE5fQ0xFQVI6ICdqcy1jYWxlbmRhcl9fYnRuLWNsZWFyJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENMQVNTRVM7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBDTEFTU0VTIGZyb20gJy4uL2NsYXNzZXMnO1xuaW1wb3J0IHtcbiAgICBkYXRlVG9TdHJpbmcsXG4gICAgaXNDb3JyZWN0RGF0ZVN0cixcbiAgICBwYXJzZURhdGVTdHJpbmcsXG4gICAgZ2V0U3RhcnRBbmRFbmRSYW5nZSxcbiAgICB4b3IsXG59IGZyb20gJy4uL2xpYic7XG5cbmNvbnN0IE1PTlRIX05BTUVTID0gW1xuICAgICfQr9C90LLQsNGA0YwnLFxuICAgICfQpNC10LLRgNCw0LvRjCcsXG4gICAgJ9Cc0LDRgNGCJyxcbiAgICAn0JDQv9GA0LXQu9GMJyxcbiAgICAn0JzQsNC5JyxcbiAgICAn0JjRjtC90YwnLFxuICAgICfQmNGO0LvRjCcsXG4gICAgJ9CQ0LLQs9GD0YHRgicsXG4gICAgJ9Ch0LXQvdGC0Y/QsdGA0YwnLFxuICAgICfQntC60YLRj9Cx0YDRjCcsXG4gICAgJ9Cd0L7Rj9Cx0YDRjCcsXG4gICAgJ9CU0LXQutCw0LHRgNGMJyxcbl07XG5cbmNvbnN0IGdldFJlbmRlcmVkRGF0ZSA9IGZ1bmN0aW9uIGdldFJlbmRlcmVkRGF0ZUZyb21DYWxlbmRhcigkY2FsZW5kYXI6IEpRdWVyeSk6IERhdGUge1xuICAgIGNvbnN0IGRhdGVTdHIgPSAkY2FsZW5kYXIuYXR0cignZGF0YS1kYXRlJyk7XG5cbiAgICBpZiAoaXNDb3JyZWN0RGF0ZVN0cihkYXRlU3RyKSkge1xuICAgICAgICByZXR1cm4gcGFyc2VEYXRlU3RyaW5nKGRhdGVTdHIpO1xuICAgIH1cblxuICAgIHJldHVybiBuZXcgRGF0ZSgpO1xufTtcblxuY29uc3QgdXBkYXRlQ2FsZW5kYXJIZWFkID0gZnVuY3Rpb24gdXBkYXRlQ2FsZW5kYXJIZWFkKCRjYWxlbmRhcjogSlF1ZXJ5LCBkYXRlOiBEYXRlKTogdm9pZCB7XG4gICAgY29uc3QgY2FsZW5kYXJIZWFkID0gYCR7TU9OVEhfTkFNRVNbZGF0ZS5nZXRNb250aCgpXX0gJHtkYXRlLmdldEZ1bGxZZWFyKCl9YDtcblxuICAgICRjYWxlbmRhci5maW5kKGAuJHtDTEFTU0VTLkRSQVdOX0RBVEV9YCkudGV4dChjYWxlbmRhckhlYWQpO1xufTtcblxuY29uc3QgZ2V0RGF5c0luTW9udGggPSBmdW5jdGlvbiBnZXREYXlzSW5Nb250aChtb250aDogbnVtYmVyLCB5ZWFyOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCArIDEsIDApLmdldERhdGUoKTtcbn07XG5cbmNvbnN0IGNyZWF0ZUNhbGVuZGFyRGF5ID0gZnVuY3Rpb24gY3JlYXRlQ2FsZW5kYXJEYXkoXG4gICAgZGF5TnVtYmVyOiBudW1iZXIsXG4gICAgaXNDdXJyZW50TW9udGggPSB0cnVlXG4pOiBIVE1MRWxlbWVudCB7XG4gICAgY29uc3QgZGF5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgZGF5LmlubmVySFRNTCA9IFN0cmluZyhkYXlOdW1iZXIpO1xuXG4gICAgY29uc3QgY2xhc3Nlczogc3RyaW5nW10gPSBbXG4gICAgICAgICdjYWxlbmRhcl9fZGF5LXdlZWsnLFxuICAgICAgICAnanMtY2FsZW5kYXJfX2RheS13ZWVrJyxcbiAgICBdO1xuXG4gICAgaWYgKCFpc0N1cnJlbnRNb250aCkge1xuICAgICAgICBjbGFzc2VzLnB1c2goLi4uW1xuICAgICAgICAgICAgJ2NhbGVuZGFyX19kYXktd2Vla190aGVtZV9hbm90aGVyLW1vbnRoJyxcbiAgICAgICAgICAgICdqcy1jYWxlbmRhcl9fZGF5LXdlZWtfdGhlbWVfYW5vdGhlci1tb250aCcsXG4gICAgICAgIF0pO1xuICAgIH1cblxuICAgIGRheS5jbGFzc0xpc3QuYWRkKC4uLmNsYXNzZXMpO1xuXG4gICAgcmV0dXJuIGRheTtcbn07XG5cbmNvbnN0IGNyZWF0ZUNhbGVuZGFyRGF5cyA9IGZ1bmN0aW9uIGNyZWF0ZUNhbGVuZGFyRGF5cyhyZW5kZXJEYXRlOiBEYXRlKTogRG9jdW1lbnRGcmFnbWVudCB7XG4gICAgY29uc3QgY2FsZW5kYXJEYXlzID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xuXG4gICAgY29uc3QgZGF5c0luTW9udGggPSBnZXREYXlzSW5Nb250aChyZW5kZXJEYXRlLmdldE1vbnRoKCksIHJlbmRlckRhdGUuZ2V0RnVsbFllYXIoKSk7XG4gICAgY29uc3QgZGF5c0luUHJldk1vbnRoID0gZ2V0RGF5c0luTW9udGgocmVuZGVyRGF0ZS5nZXRNb250aCgpIC0gMSwgcmVuZGVyRGF0ZS5nZXRGdWxsWWVhcigpKTtcblxuICAgIGNvbnN0IHRtcERhdGUgPSBuZXcgRGF0ZShyZW5kZXJEYXRlLmdldEZ1bGxZZWFyKCksIHJlbmRlckRhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgY29uc3QgZGF5V2Vla0ZpcnN0RGF5ID0gKHRtcERhdGUuZ2V0RGF5KCkgfHwgNykgLSAxOyAvLyBNb25kYXkgLSAwLCBTdW5kYXkgLSA2XG5cbiAgICB0bXBEYXRlLnNldERhdGUoZGF5c0luTW9udGgpO1xuICAgIGNvbnN0IGRheVdlZWtMYXN0RGF5ID0gKHRtcERhdGUuZ2V0RGF5KCkgfHwgNykgLSAxO1xuXG4gICAgZm9yIChsZXQgaSA9IGRheXNJblByZXZNb250aCAtIGRheVdlZWtGaXJzdERheSArIDE7IGkgPD0gZGF5c0luUHJldk1vbnRoOyBpICs9IDEpIHtcbiAgICAgICAgY2FsZW5kYXJEYXlzLmFwcGVuZENoaWxkKGNyZWF0ZUNhbGVuZGFyRGF5KGksIGZhbHNlKSk7XG4gICAgfVxuXG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gZGF5c0luTW9udGg7IGkgKz0gMSkge1xuICAgICAgICBjYWxlbmRhckRheXMuYXBwZW5kQ2hpbGQoY3JlYXRlQ2FsZW5kYXJEYXkoaSkpO1xuICAgIH1cblxuICAgIGlmIChkYXlXZWVrTGFzdERheSA8IDYpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IGRheVdlZWtMYXN0RGF5ICsgMSwgaiA9IDE7IGkgPD0gNjsgaSArPSAxLCBqICs9IDEpIHtcbiAgICAgICAgICAgIGNhbGVuZGFyRGF5cy5hcHBlbmRDaGlsZChjcmVhdGVDYWxlbmRhckRheShqLCBmYWxzZSkpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGNhbGVuZGFyRGF5cztcbn07XG5cbmNvbnN0IG1hcmtDdXJyZW50RGF5ID0gZnVuY3Rpb24gbWFya0N1cnJlbnREYXkoZGF5czogRG9jdW1lbnRGcmFnbWVudCwgcmVuZGVyRGF0ZTogRGF0ZSk6IHZvaWQge1xuICAgIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoKTtcblxuICAgIGlmIChcbiAgICAgICAgY3VycmVudERhdGUuZ2V0TW9udGgoKSA9PT0gcmVuZGVyRGF0ZS5nZXRNb250aCgpICYmXG4gICAgICAgIGN1cnJlbnREYXRlLmdldEZ1bGxZZWFyKCkgPT09IHJlbmRlckRhdGUuZ2V0RnVsbFllYXIoKVxuICAgICkge1xuICAgICAgICBjb25zdCBpbmRleCA9IGN1cnJlbnREYXRlLmdldERhdGUoKSAtIDE7XG4gICAgICAgIGNvbnN0IHNlbGVjdG9yID0gJy5jYWxlbmRhcl9fZGF5LXdlZWs6bm90KC5jYWxlbmRhcl9fZGF5LXdlZWtfdGhlbWVfYW5vdGhlci1tb250aCknO1xuICAgICAgICBjb25zdCBkYXkgPSBkYXlzLnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpW2luZGV4XTtcbiAgICAgICAgZGF5LmNsYXNzTGlzdC5hZGQoJ2NhbGVuZGFyX19kYXktd2Vla190aGVtZV90b2RheScpO1xuICAgIH1cbn07XG5cbmNvbnN0IHVwZGF0ZUNhbGVuZGFyID0gZnVuY3Rpb24gdXBkYXRlQ2FsZW5kYXIoJGNhbGVuZGFyOiBKUXVlcnksIHJlbmRlckRhdGU6IERhdGUpOiB2b2lkIHtcbiAgICAkY2FsZW5kYXIuYXR0cignZGF0YS1kYXRlJywgZGF0ZVRvU3RyaW5nKHJlbmRlckRhdGUpKTtcblxuICAgIHVwZGF0ZUNhbGVuZGFySGVhZCgkY2FsZW5kYXIsIHJlbmRlckRhdGUpO1xuXG4gICAgY29uc3QgY2FsZW5kYXJEYXlzID0gY3JlYXRlQ2FsZW5kYXJEYXlzKHJlbmRlckRhdGUpO1xuICAgIG1hcmtDdXJyZW50RGF5KGNhbGVuZGFyRGF5cywgcmVuZGVyRGF0ZSk7XG5cbiAgICAkY2FsZW5kYXJcbiAgICAgICAgLmZpbmQoYC4ke0NMQVNTRVMuREFZU19DT05UQUlORVJ9YClcbiAgICAgICAgLmh0bWwoJycpXG4gICAgICAgIC5hcHBlbmQoY2FsZW5kYXJEYXlzKTtcbn07XG5cbmNvbnN0IGVyYXNlUmFuZ2UgPSBmdW5jdGlvbiBlcmFzZVJhbmdlKCRjYWxlbmRhcjogSlF1ZXJ5KTogdm9pZCB7XG4gICAgJGNhbGVuZGFyLmZpbmQoYC4ke0NMQVNTRVMuREFZX1dFRUt9YCkucmVtb3ZlQ2xhc3MoW1xuICAgICAgICBDTEFTU0VTLlJBTkdFX0RBWSxcbiAgICAgICAgQ0xBU1NFUy5SQU5HRV9EQVlfTUlERExFLFxuICAgICAgICBDTEFTU0VTLlJBTkdFX0RBWV9TVEFSVCxcbiAgICAgICAgQ0xBU1NFUy5SQU5HRV9EQVlfRU5ELFxuICAgIF0pO1xufTtcblxuY29uc3QgZHJhd1JhbmdlID0gZnVuY3Rpb24gZHJhd1JhbmdlKCRjYWxlbmRhcjogSlF1ZXJ5KTogYm9vbGVhbiB7XG4gICAgY29uc3QgcmVuZGVyRGF0ZSA9IGdldFJlbmRlcmVkRGF0ZSgkY2FsZW5kYXIpO1xuICAgIGNvbnN0IHtcbiAgICAgICAgc3RhcnQ6IHJhbmdlU3RhcnQgPSBudWxsLFxuICAgICAgICBlbmQ6IHJhbmdlRW5kID0gbnVsbCxcbiAgICB9ID0gZ2V0U3RhcnRBbmRFbmRSYW5nZSgkY2FsZW5kYXIpO1xuXG4gICAgY29uc3QgcmFuZ2VTdGFydElzTnVsbCA9IHJhbmdlU3RhcnQgPT09IG51bGw7XG4gICAgY29uc3QgcmFuZ2VFbmRJc051bGwgPSByYW5nZUVuZCA9PT0gbnVsbDtcblxuICAgIGlmIChyYW5nZUVuZElzTnVsbCAmJiByYW5nZVN0YXJ0SXNOdWxsKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmICh4b3IocmFuZ2VFbmRJc051bGwsIHJhbmdlU3RhcnRJc051bGwpKSB7XG4gICAgICAgIGxldCB0bXBEYXRlID0gcmFuZ2VTdGFydDtcblxuICAgICAgICBpZiAocmFuZ2VTdGFydElzTnVsbCkge1xuICAgICAgICAgICAgdG1wRGF0ZSA9IHJhbmdlRW5kO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgdG1wRGF0ZS5nZXRNb250aCgpID09PSByZW5kZXJEYXRlLmdldE1vbnRoKCkgJiZcbiAgICAgICAgICAgIHRtcERhdGUuZ2V0RnVsbFllYXIoKSA9PT0gcmVuZGVyRGF0ZS5nZXRGdWxsWWVhcigpXG4gICAgICAgICkge1xuICAgICAgICAgICAgJGNhbGVuZGFyXG4gICAgICAgICAgICAgICAgLmZpbmQoYC4ke0NMQVNTRVMuREFZX1dFRUt9Om5vdCguJHtDTEFTU0VTLkRBWV9XRUVLX0FOT1RIRVJfTU9OVEh9KWApXG4gICAgICAgICAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0ICRkYXkgPSAkKHRoaXMpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBkYXlOdW1iZXIgPSBwYXJzZUludCgkZGF5LnRleHQoKSwgMTApO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChkYXlOdW1iZXIgPT09IHRtcERhdGUuZ2V0RGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAkZGF5LmFkZENsYXNzKENMQVNTRVMuUkFOR0VfREFZKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgY29uc3QgaXNSZW5kZXJSYW5nZVN0YXJ0ID0gcmFuZ2VTdGFydC5nZXRNb250aCgpID09PSByZW5kZXJEYXRlLmdldE1vbnRoKCkgJiZcbiAgICAgICAgcmFuZ2VTdGFydC5nZXRGdWxsWWVhcigpID09PSByZW5kZXJEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgaXNSZW5kZXJSYW5nZUVuZCA9IHJhbmdlRW5kLmdldE1vbnRoKCkgPT09IHJlbmRlckRhdGUuZ2V0TW9udGgoKSAmJlxuICAgICAgICByYW5nZUVuZC5nZXRGdWxsWWVhcigpID09PSByZW5kZXJEYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgY29uc3QgaXNSZW5kZXJSYW5nZU1pZGRsZSA9IHJhbmdlU3RhcnQuZ2V0RnVsbFllYXIoKSA8PSByZW5kZXJEYXRlLmdldEZ1bGxZZWFyKCkgJiZcbiAgICAgICAgcmFuZ2VTdGFydC5nZXRNb250aCgpIDw9IHJlbmRlckRhdGUuZ2V0TW9udGgoKSAmJlxuICAgICAgICByYW5nZUVuZC5nZXRGdWxsWWVhcigpID49IHJlbmRlckRhdGUuZ2V0RnVsbFllYXIoKSAmJlxuICAgICAgICByYW5nZUVuZC5nZXRNb250aCgpID49IHJlbmRlckRhdGUuZ2V0TW9udGgoKTtcblxuICAgIGlmICghaXNSZW5kZXJSYW5nZVN0YXJ0ICYmICFpc1JlbmRlclJhbmdlTWlkZGxlICYmICFpc1JlbmRlclJhbmdlRW5kKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgICRjYWxlbmRhclxuICAgICAgICAuZmluZChgLiR7Q0xBU1NFUy5EQVlfV0VFS306bm90KC4ke0NMQVNTRVMuREFZX1dFRUtfQU5PVEhFUl9NT05USH0pYClcbiAgICAgICAgLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBjb25zdCAkZGF5ID0gJCh0aGlzKTtcbiAgICAgICAgICAgIGNvbnN0IGRheU51bWJlciA9IHBhcnNlSW50KCRkYXkudGV4dCgpLCAxMCk7XG5cbiAgICAgICAgICAgIGlmIChpc1JlbmRlclJhbmdlU3RhcnQgJiYgZGF5TnVtYmVyID09PSByYW5nZVN0YXJ0LmdldERhdGUoKSkge1xuICAgICAgICAgICAgICAgICRkYXkuYWRkQ2xhc3MoW1xuICAgICAgICAgICAgICAgICAgICBDTEFTU0VTLlJBTkdFX0RBWSxcbiAgICAgICAgICAgICAgICAgICAgQ0xBU1NFUy5SQU5HRV9EQVlfU1RBUlQsXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChpc1JlbmRlclJhbmdlRW5kICYmIGRheU51bWJlciA9PT0gcmFuZ2VFbmQuZ2V0RGF0ZSgpKSB7XG4gICAgICAgICAgICAgICAgJGRheS5hZGRDbGFzcyhbXG4gICAgICAgICAgICAgICAgICAgIENMQVNTRVMuUkFOR0VfREFZLFxuICAgICAgICAgICAgICAgICAgICBDTEFTU0VTLlJBTkdFX0RBWV9FTkQsXG4gICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChpc1JlbmRlclJhbmdlTWlkZGxlKSB7XG4gICAgICAgICAgICAgICAgaWYgKFxuICAgICAgICAgICAgICAgICAgICAoIWlzUmVuZGVyUmFuZ2VTdGFydCB8fCBkYXlOdW1iZXIgPiByYW5nZVN0YXJ0LmdldERhdGUoKSkgJiZcbiAgICAgICAgICAgICAgICAgICAgKCFpc1JlbmRlclJhbmdlRW5kIHx8IGRheU51bWJlciA8IHJhbmdlRW5kLmdldERhdGUoKSlcbiAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgJGRheS5hZGRDbGFzcyhDTEFTU0VTLlJBTkdFX0RBWV9NSURETEUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cbmNvbnN0IHJlZHJhd1JhbmdlID0gZnVuY3Rpb24gcmVkcmF3UmFuZ2UoJGNhbGVuZGFyOiBKUXVlcnkpOiB2b2lkIHtcbiAgICBlcmFzZVJhbmdlKCRjYWxlbmRhcik7XG4gICAgZHJhd1JhbmdlKCRjYWxlbmRhcik7XG59O1xuXG5leHBvcnQge1xuICAgIGdldFJlbmRlcmVkRGF0ZSxcbiAgICB1cGRhdGVDYWxlbmRhcixcbiAgICByZWRyYXdSYW5nZSxcbn07XG4iLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAodXJsLCBvcHRpb25zKSB7XG4gIGlmICghb3B0aW9ucykge1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgIG9wdGlvbnMgPSB7fTtcbiAgfSAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZXJzY29yZS1kYW5nbGUsIG5vLXBhcmFtLXJlYXNzaWduXG5cblxuICB1cmwgPSB1cmwgJiYgdXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybDtcblxuICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG5cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuXG4gIGlmIChvcHRpb25zLmhhc2gpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcGFyYW0tcmVhc3NpZ25cbiAgICB1cmwgKz0gb3B0aW9ucy5oYXNoO1xuICB9IC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcblxuXG4gIGlmICgvW1wiJygpIFxcdFxcbl0vLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csICdcXFxcbicpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJjb25zdCBpc0NvcnJlY3REYXRlU3RyID0gZnVuY3Rpb24gaXNDb3JyZWN0RGF0ZVN0cihkYXRlU3RyOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICByZXR1cm4gL1xcZHsxLDJ9XFwuXFxkezEsMn1cXC5cXGR7NH0vaS50ZXN0KGRhdGVTdHIpO1xufTtcblxuY29uc3QgZGF0ZVRvU3RyaW5nID0gZnVuY3Rpb24gZGF0ZVRvU3RyaW5nKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICAgIHJldHVybiBgJHtkYXRlLmdldERhdGUoKX0uJHtkYXRlLmdldE1vbnRoKCkgKyAxfS4ke2RhdGUuZ2V0RnVsbFllYXIoKX1gO1xufTtcblxuY29uc3QgcGFyc2VEYXRlU3RyaW5nID0gZnVuY3Rpb24gZGF0ZVN0clRvRGF0ZShkYXRlU3RyOiBzdHJpbmcpOiBEYXRlIHtcbiAgICBjb25zdCBbXG4gICAgICAgIGRheSxcbiAgICAgICAgbW9udGgsXG4gICAgICAgIHllYXIsXG4gICAgXSA9IGRhdGVTdHIuc3BsaXQoJy4nKS5tYXA8bnVtYmVyPigoaXRlbSkgPT4ge1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQoaXRlbSwgMTApO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoIC0gMSwgZGF5KTtcbn07XG5cbmNvbnN0IGdldFN0YXJ0QW5kRW5kUmFuZ2UgPSBmdW5jdGlvbiBnZXRTdGFydEFuZEVuZFJhbmdlKCRjYWxlbmRhcjogSlF1ZXJ5KToge1xuICAgIHN0YXJ0OiBEYXRlO1xuICAgIGVuZDogRGF0ZTtcbn0ge1xuICAgIGNvbnN0IHN0YXJ0U3RyID0gJGNhbGVuZGFyLmF0dHIoJ2RhdGEtcmFuZ2Utc3RhcnQnKTtcbiAgICBjb25zdCBlbmRTdHIgPSAkY2FsZW5kYXIuYXR0cignZGF0YS1yYW5nZS1lbmQnKTtcblxuICAgIGxldCBzdGFydDogRGF0ZSA9IG51bGw7XG4gICAgbGV0IGVuZDogRGF0ZSA9IG51bGw7XG5cbiAgICBpZiAoaXNDb3JyZWN0RGF0ZVN0cihzdGFydFN0cikpIHtcbiAgICAgICAgc3RhcnQgPSBwYXJzZURhdGVTdHJpbmcoc3RhcnRTdHIpO1xuICAgIH1cblxuICAgIGlmIChpc0NvcnJlY3REYXRlU3RyKGVuZFN0cikpIHtcbiAgICAgICAgZW5kID0gcGFyc2VEYXRlU3RyaW5nKGVuZFN0cik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3RhcnQsXG4gICAgICAgIGVuZCxcbiAgICB9O1xufTtcblxuY29uc3QgeG9yID0gZnVuY3Rpb24geG9yKC4uLmFyZ3M6IGJvb2xlYW5bXSk6IGJvb2xlYW4ge1xuICAgIGlmIChhcmdzLmxlbmd0aCA8IDIpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYXQgbGVhc3QgMiBwYXJhbWV0ZXJzJyk7XG4gICAgfVxuXG4gICAgbGV0IGZsYWcgPSBmYWxzZTtcblxuICAgIGFyZ3MucmVkdWNlKChwcmV2aW91czogYm9vbGVhbiwgY3VycmVudDogYm9vbGVhbik6IGJvb2xlYW4gPT4ge1xuICAgICAgICBpZiAocHJldmlvdXMgIT09IGN1cnJlbnQpIHtcbiAgICAgICAgICAgIGZsYWcgPSB0cnVlO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGZsYWc7XG59O1xuXG5leHBvcnQge1xuICAgIGlzQ29ycmVjdERhdGVTdHIsXG4gICAgZGF0ZVRvU3RyaW5nLFxuICAgIHBhcnNlRGF0ZVN0cmluZyxcbiAgICBnZXRTdGFydEFuZEVuZFJhbmdlLFxuICAgIHhvcixcbn07XG4iLCJjb25zdCBDTEFTU0VTID0ge1xuICAgIEJUTl9JTlRFUjogJ2pzLWRyb3Bkb3duLWd1ZXN0X19idG4tYXBwbHknLFxuICAgIEJUTl9DTEVBUjogJ2pzLWRyb3Bkb3duLWd1ZXN0X19idG4tY2xlYXInLFxuICAgIEJUTl9QTFVTOiAnanMtZHJvcGRvd24tY291bnRlcl9fYnRuLXBsdXMnLFxuICAgIEJUTl9NSU5VUzogJ2pzLWRyb3Bkb3duLWNvdW50ZXJfX2J0bi1taW51cycsXG4gICAgSEVBRDogJ2pzLWRyb3Bkb3duLWhlYWQnLFxuICAgIENPVU5URVI6ICdqcy1kcm9wZG93bi1jb3VudGVyJyxcbiAgICBEUk9QRE9XTjogJ2pzLWRyb3Bkb3duLWd1ZXN0Jyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENMQVNTRVM7XG4iLCJjb25zdCBDTEFTU0VTID0ge1xuICAgIERBVEVfUkFOR0U6ICdqcy1kYXRlLXJhbmdlJyxcbiAgICBEUk9QRE9XTl9IRUFEOiAnanMtZGF0ZS1yYW5nZV9fZHJvcGRvd24taGVhZCcsXG4gICAgRFJPUERPV05fSEVBRF9MRUZUOiAnanMtZGF0ZS1yYW5nZV9fZHJvcGRvd24taGVhZC1sZWZ0JyxcbiAgICBEUk9QRE9XTl9IRUFEX1JJR0hUOiAnanMtZGF0ZS1yYW5nZV9fZHJvcGRvd24taGVhZC1yaWdodCcsXG4gICAgUkFOR0VfU0VMRUNUOiAnZGF0ZS1yYW5nZV9yYW5nZS1zZWxlY3QnLFxuICAgIENBTEVOREFSOiAnanMtY2FsZW5kYXInLFxufTtcblxuZXhwb3J0IGRlZmF1bHQgQ0xBU1NFUztcbiIsImNvbnN0IGdldENvdW50ZXJWYWx1ZXMgPSBmdW5jdGlvbiBnZXREcm9wZG93bkNvdW50ZXJWYWx1ZXMoJGRyb3Bkb3duOiBKUXVlcnkpOiBDb3VudGVyVmFsdWVbXSB7XG4gICAgcmV0dXJuICRkcm9wZG93bi5kcm9wZG93bignY291bnRlcnMnKSBhcyBDb3VudGVyVmFsdWVbXTtcbn07XG5cbmV4cG9ydCB7IGdldENvdW50ZXJWYWx1ZXMgfTtcbiIsImNvbnN0IGdldEluZGV4R3JhZHVhdGlvbiA9IGZ1bmN0aW9uIGNhbGNJbmRleEdyYWR1YXRpb24oaW5kZXg6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3Qgb3N0MTAgPSBpbmRleCAlIDEwO1xuICAgIGNvbnN0IG9zdDEwMCA9IGluZGV4ICUgMTAwO1xuICAgIGxldCBncmFkID0gMDtcblxuICAgIGlmIChvc3QxMCA9PT0gMSAmJiAob3N0MTAwID4gMjAgfHwgaW5kZXggPT09IDEpKSB7XG4gICAgICAgIGdyYWQgPSAwO1xuICAgIH1cblxuICAgIGlmIChvc3QxMCA+PSAyICYmIG9zdDEwIDw9IDQpIHtcbiAgICAgICAgZ3JhZCA9IDE7XG4gICAgfVxuXG4gICAgaWYgKG9zdDEwID49IDUgJiYgb3N0MTAgPD0gOSB8fCBvc3QxMCA9PT0gMCB8fCAob3N0MTAwID49IDExICYmIG9zdDEwMCA8PSAyMCkpIHtcbiAgICAgICAgZ3JhZCA9IDI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdyYWQ7XG59O1xuXG5jb25zdCBjcmVhdGVHdWVzdFRleHQgPSBmdW5jdGlvbiBjcmVhdGVHdWVzdFRleHRFbnRyeShcbiAgICBhZHVsdHM6IG51bWJlciwgYmFiaWVzOiBudW1iZXJcbik6IHN0cmluZyB7XG4gICAgY29uc3QgZ3Vlc3RUZXh0OiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgaWYgKGFkdWx0cyA+IDApIHtcbiAgICAgICAgY29uc3Qgd29yZEVuZGluZyA9IFsn0YwnLCAn0Y8nLCAn0LXQuSddO1xuICAgICAgICBjb25zdCBpbmRleCA9IGdldEluZGV4R3JhZHVhdGlvbihhZHVsdHMpO1xuICAgICAgICBndWVzdFRleHQucHVzaChgJHthZHVsdHN9INCz0L7RgdGCJHt3b3JkRW5kaW5nW2luZGV4XX1gKTtcbiAgICB9XG5cbiAgICBpZiAoYmFiaWVzID4gMCkge1xuICAgICAgICBjb25zdCB3b3JkRW5kaW5nID0gWyfQtdGGJywgJ9GG0LAnLCAn0YbQtdCyJ107XG4gICAgICAgIGNvbnN0IGluZGV4ID0gZ2V0SW5kZXhHcmFkdWF0aW9uKGJhYmllcyk7XG4gICAgICAgIGd1ZXN0VGV4dC5wdXNoKGAke2JhYmllc30g0LzQu9Cw0LTQtdC9JHt3b3JkRW5kaW5nW2luZGV4XX1gKTtcbiAgICB9XG5cbiAgICByZXR1cm4gZ3Vlc3RUZXh0LmpvaW4oJywgJyk7XG59O1xuXG5jb25zdCBncm91cGluZ0VsZW1lbnRWYWx1ZXMgPSBmdW5jdGlvbiBncm91cGluZ0VsZW1lbnRWYWx1ZXModmFsdWVzOiBDb3VudGVyVmFsdWVbXSk6IHtcbiAgICBhbGxHdWVzdHM6IG51bWJlcjtcbiAgICBhZHVsdHM6IG51bWJlcjtcbiAgICBiYWJpZXM6IG51bWJlcjtcbn0ge1xuICAgIGxldCBhbGxHdWVzdHMgPSAwO1xuICAgIGxldCBhZHVsdHMgPSAwO1xuICAgIGxldCBiYWJpZXMgPSAwO1xuICAgIHZhbHVlcy5mb3JFYWNoKChjdXJyZW50VmFsdWUpID0+IHtcbiAgICAgICAgY29uc3QgdGV4dCA9IGN1cnJlbnRWYWx1ZS50ZXh0LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmICh0ZXh0ID09PSAn0LLQt9GA0L7RgdC70YvQtScgfHwgdGV4dCA9PT0gJ9C00LXRgtC4Jykge1xuICAgICAgICAgICAgYWR1bHRzICs9IGN1cnJlbnRWYWx1ZS52YWx1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJhYmllcyArPSBjdXJyZW50VmFsdWUudmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICBhbGxHdWVzdHMgKz0gY3VycmVudFZhbHVlLnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgYWxsR3Vlc3RzLFxuICAgICAgICBhZHVsdHMsXG4gICAgICAgIGJhYmllcyxcbiAgICB9O1xufTtcblxuZXhwb3J0IHtcbiAgICBnZXRJbmRleEdyYWR1YXRpb24sXG4gICAgY3JlYXRlR3Vlc3RUZXh0LFxuICAgIGdyb3VwaW5nRWxlbWVudFZhbHVlcyxcbn07XG4iLCJjb25zdCBDTEFTU0VTID0ge1xuICAgIExJS0VfQlROOiAnanMtbGlrZS1idXR0b24nLFxuICAgIENIRUNLRUQ6ICdsaWtlLWJ1dHRvbl9jaGVja2VkJyxcbiAgICBJQ09OOiAnanMtbGlrZS1idXR0b25fX2ljb24nLFxuICAgIENPVU5URVI6ICdqcy1saWtlLWJ1dHRvbl9fY291bnRlcicsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDTEFTU0VTO1xuIiwiY29uc3QgQ0xBU1NFUyA9IHtcbiAgICBTTElERVI6ICdqcy1yYW5nZS1zbGlkZXInLFxuICAgIExJTkU6ICdqcy1yYW5nZS1zbGlkZXJfX2xpbmUnLFxuICAgIFBPSU5UOiAnanMtcmFuZ2Utc2xpZGVyX19wb2ludCcsXG4gICAgQkdfTElORTogJ2pzLXJhbmdlLXNsaWRlcl9fYmctbGluZScsXG4gICAgVkFMVUVTOiAnanMtcmFuZ2Utc2xpZGVyX19oZWFkLXZhbHVlJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENMQVNTRVM7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBoYW5kbGVyIGZyb20gJy4vaGFuZGxlcic7XG5cbiQuZm4uYnV0dG9uID0gaGFuZGxlcjtcbiIsImNvbnN0IENMQVNTRVMgPSB7XG4gICAgRElTQUJMRTogJ2J1dHRvbl9kaXNhYmxlJyxcbiAgICBISURERU46ICdidXR0b25faGlkZGVuJyxcbn07XG5cbmNvbnN0IGhhbmRsZXIgPSBmdW5jdGlvbiBidXR0b25QbHVnaW4oXG4gICAgdGhpczogSlF1ZXJ5LFxuICAgIGNvbW1hbmQ6ICdkaXNhYmxlJyB8ICdoaWRkZW4nLFxuICAgIGFyZ3M6IGJvb2xlYW4gPSBudWxsLFxuKTogdm9pZCB8IGJvb2xlYW4ge1xuICAgIHN3aXRjaCAoY29tbWFuZCkge1xuICAgICAgICBjYXNlICdkaXNhYmxlJzpcbiAgICAgICAgICAgIGlmIChhcmdzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy50b2dnbGVDbGFzcyhDTEFTU0VTLkRJU0FCTEUpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUNsYXNzKENMQVNTRVMuRElTQUJMRSwgYXJncyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2hpZGRlbic6XG4gICAgICAgICAgICBpZiAoYXJncyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHRoaXMudG9nZ2xlQ2xhc3MoQ0xBU1NFUy5ISURERU4pO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnRvZ2dsZUNsYXNzKENMQVNTRVMuSElEREVOLCBhcmdzKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb21tYW5kICcke2NvbW1hbmR9J2ApO1xuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5cbmltcG9ydCB7XG4gICAgZ2V0UmVuZGVyZWREYXRlLFxuICAgIHVwZGF0ZUNhbGVuZGFyLFxuICAgIHJlZHJhd1JhbmdlLFxufSBmcm9tICcuL3ZpZXcvdmlldyc7XG5cbmNvbnN0IGhhbmRsZXIgPSBmdW5jdGlvbiBidG5DaGFuZ2VNb250aEhhbmRsZXIoZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlKTogdm9pZCB7XG4gICAgY29uc3QgJGNhbGVuZGFyID0gJChlLmRlbGVnYXRlVGFyZ2V0KTtcbiAgICBjb25zdCAkYnRuQ2hhbmdlTW9udGggPSAkKGUudGFyZ2V0KTtcblxuICAgIGNvbnN0IHJlbmRlcmVkRGF0ZSA9IGdldFJlbmRlcmVkRGF0ZSgkY2FsZW5kYXIpO1xuICAgIGNvbnN0IG1vbnRoID0gcmVuZGVyZWREYXRlLmdldE1vbnRoKCk7XG5cbiAgICBpZiAoJGJ0bkNoYW5nZU1vbnRoLmhhc0NsYXNzKENMQVNTRVMuQlROX1BSRVZfTU9OVEgpKSB7XG4gICAgICAgIHJlbmRlcmVkRGF0ZS5zZXRNb250aChtb250aCAtIDEpO1xuICAgIH1cblxuICAgIGlmICgkYnRuQ2hhbmdlTW9udGguaGFzQ2xhc3MoQ0xBU1NFUy5CVE5fTkVYVF9NT05USCkpIHtcbiAgICAgICAgcmVuZGVyZWREYXRlLnNldE1vbnRoKG1vbnRoICsgMSk7XG4gICAgfVxuXG4gICAgdXBkYXRlQ2FsZW5kYXIoJGNhbGVuZGFyLCByZW5kZXJlZERhdGUpO1xuICAgIHJlZHJhd1JhbmdlKCRjYWxlbmRhcik7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkNBTEVOREFSfWApLm9uKFxuICAgICdjbGljay5jYWxlbmRhci5jaGFuZ2UtbW9udGgnLFxuICAgIGAuJHtDTEFTU0VTLkJUTl9QUkVWX01PTlRIfSwgLiR7Q0xBU1NFUy5CVE5fTkVYVF9NT05USH1gLFxuICAgIGhhbmRsZXJcbik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBoYW5kbGVyIGZyb20gJy4vaGFuZGxlcic7XG5cbiQuZm4uY2FsZW5kYXIgPSBoYW5kbGVyO1xuIiwiY29uc3QgaGFuZGxlciA9IGZ1bmN0aW9uIGhhbmRsZXIoXG4gICAgdGhpczogSlF1ZXJ5LFxuICAgIGNvbW1hbmQ6ICdzZWxlY3QtZGF0ZScsXG4gICAgYXJnczogJ3N0YXJ0JyB8ICdlbmQnID0gbnVsbFxuKTogdm9pZCB8IEpRdWVyeSB7XG4gICAgc3dpdGNoIChjb21tYW5kKSB7XG4gICAgICAgIGNhc2UgJ3NlbGVjdC1kYXRlJzpcbiAgICAgICAgICAgIGlmIChhcmdzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZXhwZWN0ZWQgcGFyYW1ldGVyIG9mIHR5cGUgJ3N0YXJ0JyB8ICdlbmQnXCIpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmF0dHIoJ2RhdGEtc2VsZWN0LWRhdGUnLCBhcmdzKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb21tYW5kICcke2NvbW1hbmR9J2ApO1xuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5cbmltcG9ydCB7XG4gICAgZ2V0UmVuZGVyZWREYXRlLFxuICAgIHVwZGF0ZUNhbGVuZGFyLFxuICAgIHJlZHJhd1JhbmdlLFxufSBmcm9tICcuL3ZpZXcvdmlldyc7XG5cbmltcG9ydCB7XG4gICAgZGF0ZVRvU3RyaW5nLFxuICAgIGdldFN0YXJ0QW5kRW5kUmFuZ2UsXG4gICAgeG9yLFxufSBmcm9tICcuL2xpYic7XG5cbmNvbnN0IGdldERheURhdGUgPSBmdW5jdGlvbiBnZXREYXlEYXRlKCRkYXk6IEpRdWVyeSwgcmVuZGVyRGF0ZTogRGF0ZSk6IERhdGUge1xuICAgIGNvbnN0IGRheURhdGUgPSBuZXcgRGF0ZShyZW5kZXJEYXRlLmdldEZ1bGxZZWFyKCksIHJlbmRlckRhdGUuZ2V0TW9udGgoKSk7XG4gICAgY29uc3QgZGF5TnVtYmVyID0gcGFyc2VJbnQoJGRheS50ZXh0KCksIDEwKTtcblxuICAgIGlmICgkZGF5Lmhhc0NsYXNzKENMQVNTRVMuREFZX1dFRUtfQU5PVEhFUl9NT05USCkpIHtcbiAgICAgICAgbGV0IG1vbnRoID0gZGF5RGF0ZS5nZXRNb250aCgpO1xuXG4gICAgICAgIGlmIChkYXlOdW1iZXIgPCA3KSB7XG4gICAgICAgICAgICBtb250aCArPSAxO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbW9udGggLT0gMTtcbiAgICAgICAgfVxuXG4gICAgICAgIGRheURhdGUuc2V0TW9udGgobW9udGgpO1xuICAgIH1cblxuICAgIGRheURhdGUuc2V0RGF0ZShkYXlOdW1iZXIpO1xuXG4gICAgcmV0dXJuIGRheURhdGU7XG59O1xuXG5jb25zdCBpc1Bvc3NpYmxlU2V0RGF0ZVJhbmdlID0gZnVuY3Rpb24gaXNQb3NzaWJsZVNldERhdGVSYW5nZShcbiAgICBvcHRpb25zOiB7XG4gICAgICAgIHRhcmdldERhdGU6IERhdGU7XG4gICAgICAgIHJhbmdlU3RhcnQ6IERhdGU7XG4gICAgICAgIHJhbmdlRW5kOiBEYXRlO1xuICAgICAgICBzZWxlY3REYXRlOiAnc3RhcnQnIHwgJ2VuZCc7XG4gICAgfVxuKTogYm9vbGVhbiB7XG4gICAgY29uc3Qge1xuICAgICAgICB0YXJnZXREYXRlLFxuICAgICAgICByYW5nZVN0YXJ0ID0gbnVsbCxcbiAgICAgICAgcmFuZ2VFbmQgPSBudWxsLFxuICAgICAgICBzZWxlY3REYXRlID0gJ3N0YXJ0JyxcbiAgICB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBjdXJyZW50RGF0ZSA9IG5ldyBEYXRlKCk7XG5cbiAgICBpZiAodGFyZ2V0RGF0ZSA8IGN1cnJlbnREYXRlKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBjb25zdCByYW5nZUVuZElzTnVsbCA9IHJhbmdlRW5kID09PSBudWxsO1xuICAgIGNvbnN0IHJhbmdlU3RhcnRJc051bGwgPSByYW5nZVN0YXJ0ID09PSBudWxsO1xuXG4gICAgaWYgKHJhbmdlU3RhcnRJc051bGwgJiYgcmFuZ2VFbmRJc051bGwpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHhvcihyYW5nZUVuZElzTnVsbCwgcmFuZ2VTdGFydElzTnVsbCkpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBzZWxlY3REYXRlID09PSAnc3RhcnQnICYmXG4gICAgICAgICFyYW5nZUVuZElzTnVsbCAmJlxuICAgICAgICB0YXJnZXREYXRlIDwgcmFuZ2VFbmRcbiAgICApIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKFxuICAgICAgICBzZWxlY3REYXRlID09PSAnZW5kJyAmJlxuICAgICAgICAhcmFuZ2VTdGFydElzTnVsbCAmJlxuICAgICAgICB0YXJnZXREYXRlID4gcmFuZ2VTdGFydFxuICAgICkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG59O1xuXG5jb25zdCBzZWxlY3REYXlIYW5kbGVyID0gZnVuY3Rpb24gc2VsZWN0RGF5SGFuZGxlcihlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiBib29sZWFuIHtcbiAgICBjb25zdCAkY2FsZW5kYXIgPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgIGNvbnN0ICRkYXkgPSAkKGUuY3VycmVudFRhcmdldCk7XG4gICAgY29uc3QgcmVuZGVyRGF0ZSA9IGdldFJlbmRlcmVkRGF0ZSgkY2FsZW5kYXIpO1xuICAgIGNvbnN0IHRhcmdldERhdGUgPSBnZXREYXlEYXRlKCRkYXksIHJlbmRlckRhdGUpO1xuXG4gICAgaWYgKHRhcmdldERhdGUuZ2V0TW9udGgoKSAhPT0gcmVuZGVyRGF0ZS5nZXRNb250aCgpKSB7XG4gICAgICAgIHVwZGF0ZUNhbGVuZGFyKCRjYWxlbmRhciwgdGFyZ2V0RGF0ZSk7XG4gICAgfVxuXG4gICAgY29uc3Qge1xuICAgICAgICBzdGFydDogcmFuZ2VTdGFydCA9IG51bGwsXG4gICAgICAgIGVuZDogcmFuZ2VFbmQgPSBudWxsLFxuICAgIH0gPSBnZXRTdGFydEFuZEVuZFJhbmdlKCRjYWxlbmRhcik7XG5cbiAgICBjb25zdCBzZWxlY3REYXRlID0gKCRjYWxlbmRhci5hdHRyKCdkYXRhLXNlbGVjdC1kYXRlJykgYXMgJ3N0YXJ0JyB8ICdlbmQnKSB8fCAnc3RhcnQnO1xuXG4gICAgaWYgKGlzUG9zc2libGVTZXREYXRlUmFuZ2Uoe1xuICAgICAgICB0YXJnZXREYXRlLFxuICAgICAgICByYW5nZVN0YXJ0LFxuICAgICAgICByYW5nZUVuZCxcbiAgICAgICAgc2VsZWN0RGF0ZSxcbiAgICB9KSkge1xuICAgICAgICAkY2FsZW5kYXIuYXR0cihgZGF0YS1yYW5nZS0ke3NlbGVjdERhdGV9YCwgZGF0ZVRvU3RyaW5nKHRhcmdldERhdGUpKTtcbiAgICAgICAgcmVkcmF3UmFuZ2UoJGNhbGVuZGFyKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdHJ1ZTtcbn07XG5cbiQoYC4ke0NMQVNTRVMuQ0FMRU5EQVJ9YCkuZWFjaChmdW5jdGlvbigpOiB2b2lkIHtcbiAgICBjb25zdCAkY2FsZW5kYXIgPSAkKHRoaXMpO1xuXG4gICAgJGNhbGVuZGFyLm9uKFxuICAgICAgICAnY2xpY2suY2FsZW5kYXIuc2VsZWN0LWRhdGUnLFxuICAgICAgICBgLiR7Q0xBU1NFUy5EQVlfV0VFS31gLFxuICAgICAgICBzZWxlY3REYXlIYW5kbGVyXG4gICAgKTtcbn0pO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuL2NsYXNzZXMnO1xuaW1wb3J0IHsgZ2V0U3RhcnRBbmRFbmRSYW5nZSB9IGZyb20gJy4vbGliJztcblxuY29uc3QgYnRuQXBwbHlDbGlja0hhbmRsZXIgPSBmdW5jdGlvbiBidG5BcHBseUNsaWNrSGFuZGxlcihlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiB2b2lkIHtcbiAgICBjb25zdCAkY2FsZW5kYXIgPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgIGNvbnN0IHtcbiAgICAgICAgc3RhcnQgPSBudWxsLFxuICAgICAgICBlbmQgPSBudWxsLFxuICAgIH0gPSBnZXRTdGFydEFuZEVuZFJhbmdlKCRjYWxlbmRhcik7XG5cbiAgICAkY2FsZW5kYXIudHJpZ2dlcignYXBwbHknLCBbc3RhcnQsIGVuZF0pO1xufTtcblxuJChgLiR7Q0xBU1NFUy5DQUxFTkRBUn1gKS5vbihcbiAgICAnY2xpY2suY2FsZW5kYXIuYXBwbHknLFxuICAgIGAuJHtDTEFTU0VTLkJUTl9BUFBMWX1gLFxuICAgIGJ0bkFwcGx5Q2xpY2tIYW5kbGVyXG4pO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuL2NsYXNzZXMnO1xuaW1wb3J0IHsgcmVkcmF3UmFuZ2UgfSBmcm9tICcuL3ZpZXcvdmlldyc7XG5cbmNvbnN0IGJ0bkNsZWFyQ2xpY2tIYW5kbGVyID0gZnVuY3Rpb24gYnRuQ2xlYXJDbGlja0hhbmRsZXIoZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlKTogdm9pZCB7XG4gICAgY29uc3QgJGNhbGVuZGFyID0gJChlLmRlbGVnYXRlVGFyZ2V0KTtcbiAgICAkY2FsZW5kYXIuYXR0cignZGF0YS1yYW5nZS1zdGFydCcsICcnKTtcbiAgICAkY2FsZW5kYXIuYXR0cignZGF0YS1yYW5nZS1lbmQnLCAnJyk7XG5cbiAgICByZWRyYXdSYW5nZSgkY2FsZW5kYXIpO1xuXG4gICAgJGNhbGVuZGFyLnRyaWdnZXIoJ2NsZWFyJyk7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkNBTEVOREFSfWApLm9uKFxuICAgICdjbGljay5jYWxlbmRhci5jbGVhcicsXG4gICAgYC4ke0NMQVNTRVMuQlROX0NMRUFSfWAsXG4gICAgYnRuQ2xlYXJDbGlja0hhbmRsZXJcbik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5cbmNvbnN0IGRhdGVSYW5nZUNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uIGRhdGVSYW5nZUNsaWNrSGFuZGxlcihlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiBib29sZWFuIHtcbiAgICBjb25zdCAkZGF0ZVJhbmdlID0gJChlLmRlbGVnYXRlVGFyZ2V0KTtcbiAgICBjb25zdCAkZHJvcGRvd25IZWFkID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgaWYgKCRkcm9wZG93bkhlYWQuZHJvcGRvd25IZWFkKCdzZWxlY3QtZGF0ZScpKSB7XG4gICAgICAgICRkYXRlUmFuZ2UucmVtb3ZlQ2xhc3MoQ0xBU1NFUy5SQU5HRV9TRUxFQ1QpO1xuICAgICAgICAkZHJvcGRvd25IZWFkLmRyb3Bkb3duSGVhZCgnc2VsZWN0LWRhdGUnLCBmYWxzZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgJGRhdGVSYW5nZS5hZGRDbGFzcyhDTEFTU0VTLlJBTkdFX1NFTEVDVCk7XG4gICAgICAgICRkYXRlUmFuZ2UuZmluZChgLiR7Q0xBU1NFUy5EUk9QRE9XTl9IRUFEfWApLmRyb3Bkb3duSGVhZCgnc2VsZWN0LWRhdGUnLCBmYWxzZSk7XG4gICAgICAgICRkcm9wZG93bkhlYWQuZHJvcGRvd25IZWFkKCdzZWxlY3QtZGF0ZScsIHRydWUpO1xuXG4gICAgICAgIGNvbnN0IHNlbGVjdERhdGUgPSAkZHJvcGRvd25IZWFkLmhhc0NsYXNzKENMQVNTRVMuRFJPUERPV05fSEVBRF9MRUZUKSA/ICdzdGFydCcgOiAnZW5kJztcbiAgICAgICAgJGRhdGVSYW5nZS5maW5kKGAuJHtDTEFTU0VTLkNBTEVOREFSfWApLmNhbGVuZGFyKCdzZWxlY3QtZGF0ZScsIHNlbGVjdERhdGUpO1xuICAgIH1cblxuICAgIHJldHVybiB0cnVlO1xufTtcblxuJChgLiR7Q0xBU1NFUy5EQVRFX1JBTkdFfWApLm9uKFxuICAgICdjbGljay5kYXRlLXJhbmdlLnNlbGVjdC1kYXRlLXJhbmdlJyxcbiAgICBgLiR7Q0xBU1NFUy5EUk9QRE9XTl9IRUFEfWAsXG4gICAgZGF0ZVJhbmdlQ2xpY2tIYW5kbGVyXG4pO1xuIiwiY29uc3QgZGF0ZVRvU3RyaW5nID0gZnVuY3Rpb24gZGF0ZVRvU3RyaW5nKGRhdGU6IERhdGUpOiBzdHJpbmcge1xuICAgIGNvbnN0IGRheSA9IGAwJHtTdHJpbmcoZGF0ZS5nZXREYXRlKCkpfWAuc2xpY2UoLTIpO1xuICAgIGNvbnN0IG1vbnRoID0gYDAke1N0cmluZyhkYXRlLmdldE1vbnRoKCkgKyAxKX1gLnNsaWNlKC0yKTtcbiAgICByZXR1cm4gYCR7ZGF5fS4ke21vbnRofS4ke2RhdGUuZ2V0RnVsbFllYXIoKX1gO1xufTtcblxuZXhwb3J0IHtcbiAgICBkYXRlVG9TdHJpbmcsXG59O1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgaGFuZGxlciBmcm9tICcuL2hhbmRsZXInO1xuXG4kLmZuLmRyb3Bkb3duQ291bnRlciA9IGhhbmRsZXI7XG4iLCJjb25zdCBDTEFTU0VTID0ge1xuICAgIERJU1BMQVk6ICdqcy1kcm9wZG93bi1jb3VudGVyX192YWx1ZScsXG4gICAgTEFCRUw6ICdqcy1kcm9wZG93bi1jb3VudGVyX19sYWJlbCcsXG4gICAgQlROX01JTlVTOiAnanMtZHJvcGRvd24tY291bnRlcl9fYnRuLW1pbnVzJyxcbn07XG5cbmNvbnN0IGhhbmRsZXIgPSBmdW5jdGlvbiBkcm9wZG93bkNvdW50ZXJQbHVnaW4oXG4gICAgdGhpczogSlF1ZXJ5LFxuICAgIGNvbW1hbmQ6ICd2YWx1ZScgfCAncmVzZXQnIHwgJ3RleHQnLFxuICAgIGFyZ3M6IG51bWJlciA9IG51bGwsXG4pOiB2b2lkIHwgbnVtYmVyIHwgc3RyaW5nIHtcbiAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcbiAgICAgICAgY2FzZSAncmVzZXQnOlxuICAgICAgICAgICAgdGhpcy5maW5kKGAuJHtDTEFTU0VTLkRJU1BMQVl9YCkudGV4dCgnMCcpO1xuICAgICAgICAgICAgdGhpcy5maW5kKGAuJHtDTEFTU0VTLkJUTl9NSU5VU31gKS5idXR0b24oJ2Rpc2FibGUnLCB0cnVlKTtcblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAndmFsdWUnOlxuICAgICAgICAgICAgaWYgKGFyZ3MgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0ZXh0ID0gdGhpcy5maW5kKGAuJHtDTEFTU0VTLkRJU1BMQVl9YCkudGV4dCgpO1xuXG4gICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhcnNlSW50KHRleHQsIDEwKTtcbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmZpbmQoQ0xBU1NFUy5ESVNQTEFZKS50ZXh0KFN0cmluZyhhcmdzKSk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ3RleHQnOlxuICAgICAgICAgICAgaWYgKGFyZ3MgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5kKGAuJHtDTEFTU0VTLkxBQkVMfWApLnRleHQoKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb21tYW5kICcke2NvbW1hbmR9J2ApO1xuICAgIH1cblxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiIsImltcG9ydCAqIGFzICQgZnJvbSAnanF1ZXJ5JztcblxuaW1wb3J0IENMQVNTRVMgZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCB7IGdldENvdW50ZXJWYWx1ZXMgfSBmcm9tICcuL3ZpZXcvdmlldyc7XG5pbXBvcnQge1xuICAgIGdyb3VwaW5nRWxlbWVudFZhbHVlcyxcbiAgICBjcmVhdGVHdWVzdFRleHQsXG59IGZyb20gJy4vbGliJztcblxuY29uc3QgREVGQVVMVF9URVhUID0gJ9Ch0LrQvtC70YzQutC+INCz0L7RgdGC0LXQuSc7XG5cbmNvbnN0IGRyb3Bkb3duVXBkYXRlR3Vlc3RIYW5kbGVyID0gZnVuY3Rpb24gZHJvcGRvd25VcGRhdGVHdWVzdEhhbmRsZXIoXG4gICAgZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlXG4pOiB2b2lkIHtcbiAgICBjb25zdCAkZHJvcGRvd24gPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuXG4gICAgY29uc3QgY291bnRlclZhbHVlcyA9IGdldENvdW50ZXJWYWx1ZXMoJGRyb3Bkb3duKTtcbiAgICBjb25zdCB7XG4gICAgICAgIGFsbEd1ZXN0cyxcbiAgICAgICAgYWR1bHRzLFxuICAgICAgICBiYWJpZXMsXG4gICAgfSA9IGdyb3VwaW5nRWxlbWVudFZhbHVlcyhjb3VudGVyVmFsdWVzKTtcblxuICAgIGlmIChhbGxHdWVzdHMgPT09IDApIHtcbiAgICAgICAgJGRyb3Bkb3duLmZpbmQoYC4ke0NMQVNTRVMuSEVBRH1gKS5kcm9wZG93bkhlYWQoJ3ZhbHVlJywgREVGQVVMVF9URVhUKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICBjb25zdCBuZXdUZXh0ID0gY3JlYXRlR3Vlc3RUZXh0KGFkdWx0cywgYmFiaWVzKTtcbiAgICAgICAgJGRyb3Bkb3duLmZpbmQoYC4ke0NMQVNTRVMuSEVBRH1gKS5kcm9wZG93bkhlYWQoJ3ZhbHVlJywgbmV3VGV4dCk7XG4gICAgfVxuXG4gICAgJGRyb3Bkb3duLmRyb3Bkb3duKCdleHBhbmQnLCBmYWxzZSk7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkRST1BET1dOfWApLm9uKFxuICAgICdjbGljay5kcm9wZG93bi1ndWVzdC51cGRhdGUtZ3Vlc3QnLFxuICAgIGAuJHtDTEFTU0VTLkJUTl9JTlRFUn1gLFxuICAgIGRyb3Bkb3duVXBkYXRlR3Vlc3RIYW5kbGVyXG4pO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuL2NsYXNzZXMnO1xuXG5jb25zdCBERUZBVUxUX1RFWFQgPSAn0KHQutC+0LvRjNC60L4g0LPQvtGB0YLQtdC5JztcblxuY29uc3QgZHJvcGRvd25DbGVhckd1ZXN0SGFuZGxlciA9IGZ1bmN0aW9uIGRyb3Bkb3duQ2xlYXJHdWVzdEhhbmRsZXIoXG4gICAgZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlXG4pOiB2b2lkIHtcbiAgICBjb25zdCAkZHJvcGRvd24gPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuXG4gICAgJGRyb3Bkb3duLmZpbmQoYC4ke0NMQVNTRVMuQ09VTlRFUn1gKS5kcm9wZG93bkNvdW50ZXIoJ3Jlc2V0Jyk7XG5cbiAgICAkKGUuY3VycmVudFRhcmdldCkuYnV0dG9uKCdoaWRkZW4nLCB0cnVlKTtcbiAgICAkZHJvcGRvd24uZmluZChgLiR7Q0xBU1NFUy5IRUFEfWApLmRyb3Bkb3duSGVhZCgndmFsdWUnLCBERUZBVUxUX1RFWFQpO1xuXG4gICAgJGRyb3Bkb3duLmRyb3Bkb3duKCdleHBhbmQnLCBmYWxzZSk7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkRST1BET1dOfWApLm9uKFxuICAgICdjbGljay5kcm9wZG93bi1ndWVzdC5jbGVhci1ndWVzdCcsXG4gICAgYC4ke0NMQVNTRVMuQlROX0NMRUFSfWAsXG4gICAgZHJvcGRvd25DbGVhckd1ZXN0SGFuZGxlclxuKTtcbiIsImltcG9ydCAqIGFzICQgZnJvbSAnanF1ZXJ5JztcblxuaW1wb3J0IGhhbmRsZXIgZnJvbSAnLi9oYW5kbGVyJztcblxuJC5mbi5kcm9wZG93bkhlYWQgPSBoYW5kbGVyO1xuIiwiY29uc3QgQ0xBU1NFUyA9IHtcbiAgICBURVhUX0VMRU1FTlQ6ICdqcy1kcm9wZG93bi1oZWFkX190ZXh0Jyxcbn07XG5cbmNvbnN0IGhhbmRsZXIgPSBmdW5jdGlvbiBwbHVnaW5IYW5kbGVyKFxuICAgIHRoaXM6IEpRdWVyeSxcbiAgICBjb21tYW5kOiAnc2V0LXRoZW1lJyB8ICdyZW1vdmUtdGhlbWUnIHwgJ3ZhbHVlJyB8ICdzZWxlY3QtZGF0ZScsXG4gICAgYXJnczogJ2V4cGFuZGVkJyB8IHN0cmluZyB8IGJvb2xlYW4gPSBudWxsXG4pOiB2b2lkIHwgc3RyaW5nIHwgYm9vbGVhbiB8IEpRdWVyeSB7XG4gICAgc3dpdGNoIChjb21tYW5kKSB7XG4gICAgICAgIGNhc2UgJ3NldC10aGVtZSc6XG4gICAgICAgICAgICB0aGlzLmFkZENsYXNzKGBkcm9wZG93bi1oZWFkX3RoZW1lXyR7YXJnc31gKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAgIGNhc2UgJ3JlbW92ZS10aGVtZSc6XG4gICAgICAgICAgICB0aGlzLnJlbW92ZUNsYXNzKGBkcm9wZG93bi1oZWFkX3RoZW1lXyR7YXJnc31gKTtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuXG4gICAgICAgIGNhc2UgJ3ZhbHVlJzpcbiAgICAgICAgICAgIGlmIChhcmdzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZChgLiR7Q0xBU1NFUy5URVhUX0VMRU1FTlR9YCkudGV4dCgpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLmZpbmQoYC4ke0NMQVNTRVMuVEVYVF9FTEVNRU5UfWApLnRleHQoYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgICBjYXNlICdzZWxlY3QtZGF0ZSc6XG4gICAgICAgICAgICBpZiAoYXJncyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhhc0NsYXNzKCdkcm9wZG93bi1oZWFkX3RoZW1lX3NlbGVjdC1kYXRlJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMudG9nZ2xlQ2xhc3MoJ2Ryb3Bkb3duLWhlYWRfdGhlbWVfc2VsZWN0LWRhdGUnLCBhcmdzIGFzIGJvb2xlYW4pO1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5rbm93biBjb21tYW5kICcke2NvbW1hbmR9J2ApO1xuICAgIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZXI7XG4iLCJ0eXBlIFRhYmxlID0ge1xuICAgIFtpbmRleDogc3RyaW5nXTogc3RyaW5nW107XG59O1xuXG5jb25zdCBDQVNFX1RBQkxFUzogVGFibGUgPSB7XG4gICAg0YHQv9Cw0LvRjNC90Lg6IFtcbiAgICAgICAgJ9GB0L/QsNC70YzQvdGPJyxcbiAgICAgICAgJ9GB0L/QsNC70YzQvdC4JyxcbiAgICAgICAgJ9GB0L/QsNC70LXQvScsXG4gICAgXSxcbiAgICDQutGA0L7QstCw0YLQuDogW1xuICAgICAgICAn0LrRgNC+0LLQsNGC0YwnLFxuICAgICAgICAn0LrRgNC+0LLQsNGC0LgnLFxuICAgICAgICAn0LrRgNC+0LLQsNGC0LXQuScsXG4gICAgXSxcbiAgICAn0LLQsNC90L3Ri9C1INC60L7QvNC90LDRgtGLJzogW1xuICAgICAgICAn0LLQsNC90L3QsNGPINC60L7QvNC90LDRgtCwJyxcbiAgICAgICAgJ9Cy0LDQvdC90YvQtSDQutC+0LzQvdCw0YLRiycsXG4gICAgICAgICfQstCw0L3QvdGLeCDQutC+0LzQvdCw0YInLFxuICAgIF0sXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDQVNFX1RBQkxFUztcbiIsImNvbnN0IENMQVNTRVMgPSB7XG4gICAgRVhQQU5ERUQ6ICdkcm9wZG93bl9leHBhbmRlZCcsXG4gICAgSEVBRDogJ2pzLWRyb3Bkb3duLWhlYWQnLFxuICAgIENPVU5URVI6ICdqcy1kcm9wZG93bi1jb3VudGVyJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENMQVNTRVM7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBoYW5kbGVyIGZyb20gJy4vaGFuZGxlcic7XG5cbiQuZm4uZHJvcGRvd24gPSBoYW5kbGVyO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuLi9jbGFzc2VzJztcblxuY29uc3QgaGFuZGxlcjogRHJvcGRvd25QbHVnaW4gPSBmdW5jdGlvbiBwbHVnaW5IYW5kbGVyKFxuICAgIHRoaXM6IEpRdWVyeSxcbiAgICBjb21tYW5kOiAnZXhwYW5kJyB8ICdjb3VudGVycycsXG4gICAgYXJnczogYm9vbGVhbiB8IENvdW50ZXJWYWx1ZSA9IG51bGxcbik6IHZvaWQgfCBib29sZWFuIHwgQ291bnRlclZhbHVlW10ge1xuICAgIHN3aXRjaCAoY29tbWFuZCkge1xuICAgICAgICBjYXNlICdleHBhbmQnOlxuICAgICAgICAgICAgaWYgKGFyZ3MgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5oYXNDbGFzcyhDTEFTU0VTLkVYUEFOREVEKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzICE9PSAnYm9vbGVhbicpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBib29sZWFuLicpO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0aGlzLnRvZ2dsZUNsYXNzKENMQVNTRVMuRVhQQU5ERUQsIGFyZ3MpO1xuXG4gICAgICAgICAgICBpZiAoYXJncykge1xuICAgICAgICAgICAgICAgIHRoaXMuZmluZChgLiR7Q0xBU1NFUy5IRUFEfWApLmRyb3Bkb3duSGVhZCgnc2V0LXRoZW1lJywgJ2V4cGFuZGVkJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuZmluZChgLiR7Q0xBU1NFUy5IRUFEfWApLmRyb3Bkb3duSGVhZCgncmVtb3ZlLXRoZW1lJywgJ2V4cGFuZGVkJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgJ2NvdW50ZXJzJzpcbiAgICAgICAgICAgIGlmIChhcmdzID09PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY291bnRlclZhbHVlczogQ291bnRlclZhbHVlW10gPSBbXTtcblxuICAgICAgICAgICAgICAgIHRoaXMuZmluZChgLiR7Q0xBU1NFUy5DT1VOVEVSfWApLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0ICRjb3VudGVyID0gJCh0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgY291bnRlclZhbHVlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICRjb3VudGVyLmRyb3Bkb3duQ291bnRlcigndGV4dCcpIGFzIHN0cmluZyxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAkY291bnRlci5kcm9wZG93bkNvdW50ZXIoJ3ZhbHVlJykgYXMgbnVtYmVyLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgIHJldHVybiBjb3VudGVyVmFsdWVzO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGNvbW1hbmQgJyR7Y29tbWFuZH0nYCk7XG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiIsImNvbnN0IENMQVNTRVMgPSB7XG4gICAgU0xJREVSOiAnanMtaW1hZ2Utc2xpZGVyJyxcbiAgICBJTUFHRTogJ2ltYWdlLXNsaWRlcl9faW1hZ2UnLFxuICAgIElNQUdFX1NFTEVDVEVEOiAnaW1hZ2Utc2xpZGVyX19pbWFnZV9zZWxlY3RlZCcsXG4gICAgSVRFTTogJ2pzLWltYWdlLXNsaWRlcl9faXRlbScsXG4gICAgSVRFTV9TRUxFQ1RFRDogJ2ltYWdlLXNsaWRlcl9faXRlbV90aGVtZV9zZWxlY3RlZCcsXG4gICAgTkFWX0JUTjogJ2pzLWltYWdlLXNsaWRlcl9fbmF2LWJ1dHRvbicsXG4gICAgQlROX1BSRVY6ICdqcy1pbWFnZS1zbGlkZXJfX25hdi1idXR0b24tcHJldicsXG4gICAgQlROX05FWFQ6ICdqcy1pbWFnZS1zbGlkZXJfX25hdi1idXR0b24tbmV4dCcsXG4gICAgSU5ERVhfSVRFTTogJ2pzLWltYWdlLXNsaWRlcl9faW1hZ2VfaW5kZXgtaXRlbScsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDTEFTU0VTO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuL2NsYXNzZXMnO1xuXG5jb25zdCBwYXJzZUluZGV4SW1hZ2UgPSBmdW5jdGlvbiBwYXJzZUluZGV4SW1hZ2Uoc2VsZWN0ZWRJbWFnZUF0dHI6IHN0cmluZyk6IG51bWJlciB7XG4gICAgaWYgKHNlbGVjdGVkSW1hZ2VBdHRyLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgICAgcmV0dXJuIHBhcnNlSW50KHNlbGVjdGVkSW1hZ2VBdHRyLCAxMCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG59O1xuXG5jb25zdCBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiBzbGlkZXJDbGlja0V2ZW50SGFuZGxlcihcbiAgICB0aGlzOiBIVE1MRWxlbWVudCxcbiAgICBlOiBKUXVlcnkuTW91c2VFdmVudEJhc2Vcbik6IGJvb2xlYW4ge1xuICAgIGNvbnN0ICRzbGlkZXIgPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgIGNvbnN0ICRidG4gPSAkKGUuY3VycmVudFRhcmdldCk7XG5cbiAgICBsZXQgaW5kZXhJbWFnZSA9IHBhcnNlSW5kZXhJbWFnZSgkc2xpZGVyLmF0dHIoJ2RhdGEtc2VsZWN0ZWQtaW1hZ2UnKSk7XG5cbiAgICBpZiAoaW5kZXhJbWFnZSA9PT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0ICRpbWFnZXMgPSAkc2xpZGVyLmZpbmQoYC4ke0NMQVNTRVMuSU1BR0V9YCk7XG4gICAgY29uc3QgJGl0ZW1zID0gJHNsaWRlci5maW5kKGAuJHtDTEFTU0VTLklURU19YCk7XG5cbiAgICAkaW1hZ2VzXG4gICAgICAgIC5lcShpbmRleEltYWdlKVxuICAgICAgICAucmVtb3ZlQ2xhc3MoQ0xBU1NFUy5JTUFHRV9TRUxFQ1RFRCk7XG5cbiAgICAkaXRlbXNcbiAgICAgICAgLmVxKGluZGV4SW1hZ2UpXG4gICAgICAgIC5yZW1vdmVDbGFzcyhDTEFTU0VTLklURU1fU0VMRUNURUQpO1xuXG4gICAgaWYgKCRidG4uaGFzQ2xhc3MoQ0xBU1NFUy5CVE5fUFJFVikpIHtcbiAgICAgICAgaW5kZXhJbWFnZSAtPSAxO1xuXG4gICAgICAgIGlmIChpbmRleEltYWdlIDwgMCkge1xuICAgICAgICAgICAgaW5kZXhJbWFnZSA9ICRpbWFnZXMubGVuZ3RoIC0gMTtcbiAgICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICAgIGluZGV4SW1hZ2UgKz0gMTtcblxuICAgICAgICBpZiAoaW5kZXhJbWFnZSA+ICRpbWFnZXMubGVuZ3RoIC0gMSkge1xuICAgICAgICAgICAgaW5kZXhJbWFnZSA9IDA7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAkc2xpZGVyLmZpbmQoYC4ke0NMQVNTRVMuSU5ERVhfSVRFTX1gKS50ZXh0KGluZGV4SW1hZ2UpO1xuICAgICRzbGlkZXIuYXR0cignZGF0YS1zZWxlY3RlZC1pbWFnZScsIGluZGV4SW1hZ2UpO1xuXG4gICAgJGltYWdlc1xuICAgICAgICAuZXEoaW5kZXhJbWFnZSlcbiAgICAgICAgLmFkZENsYXNzKENMQVNTRVMuSU1BR0VfU0VMRUNURUQpO1xuXG4gICAgJGl0ZW1zXG4gICAgICAgIC5lcShpbmRleEltYWdlKVxuICAgICAgICAuYWRkQ2xhc3MoQ0xBU1NFUy5JVEVNX1NFTEVDVEVEKTtcblxuICAgIHJldHVybiB0cnVlO1xufTtcblxuJChgLiR7Q0xBU1NFUy5TTElERVJ9YCkub24oXG4gICAgJ2NsaWNrLmltYWdlLXNsaWRlci5jaGFuZ2UtaW1hZ2UnLFxuICAgIGAuJHtDTEFTU0VTLk5BVl9CVE59YCxcbiAgICBjbGlja0hhbmRsZXJcbik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBoYW5kbGVyIGZyb20gJy4vaGFuZGxlcic7XG5cbiQuZm4ubGlrZUJ1dHRvbiA9IGhhbmRsZXI7XG4iLCJpbXBvcnQgQ0xBU1NFUyBmcm9tICcuLi9jbGFzc2VzJztcblxuY29uc3QgaGFuZGxlciA9IGZ1bmN0aW9uIGxpa2VCdXR0b25QbHVnaW4oXG4gICAgdGhpczogSlF1ZXJ5LFxuICAgIGNvbW1hbmQ6ICdjaGVja2VkJyB8ICdsaWtlcycsXG4gICAgYXJnczogYm9vbGVhbiB8IG51bWJlciA9IG51bGxcbik6IHZvaWQgfCBib29sZWFuIHwgbnVtYmVyIHwgSlF1ZXJ5IHtcbiAgICBzd2l0Y2ggKGNvbW1hbmQpIHtcbiAgICAgICAgY2FzZSAnY2hlY2tlZCc6XG4gICAgICAgICAgICBpZiAoYXJncyA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmhhc0NsYXNzKENMQVNTRVMuQ0hFQ0tFRCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXJncyAhPT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignRXhwZWN0ZWQgYm9vbGVhbiB0eXBlIHBhcmFtZXRlci4nKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdGhpcy50b2dnbGVDbGFzcyhDTEFTU0VTLkNIRUNLRUQsIGFyZ3MpO1xuICAgICAgICAgICAgdGhpc1xuICAgICAgICAgICAgICAgIC5maW5kKGAuJHtDTEFTU0VTLklDT059YClcbiAgICAgICAgICAgICAgICAudGV4dChhcmdzID8gJ2Zhdm9yaXRlJyA6ICdmYXZvcml0ZV9ib3JkZXInKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG5cbiAgICAgICAgY2FzZSAnbGlrZXMnOlxuICAgICAgICAgICAgaWYgKGFyZ3MgPT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBsaWtlcyA9IHRoaXMuZmluZChgLiR7Q0xBU1NFUy5DT1VOVEVSfWApLnRleHQoKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFyc2VJbnQobGlrZXMsIDEwKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHR5cGVvZiBhcmdzICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIG51bWJlciBwYXJhbWV0ZXIuJyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuZmluZChgLiR7Q0xBU1NFUy5DT1VOVEVSfWApLnRleHQoYXJncyk7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcblxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmtub3duIGNvbW1hbmQgJyR7Y29tbWFuZH0nYCk7XG4gICAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlcjtcbiIsImNvbnN0IENMQVNTRVMgPSB7XG4gICAgTUVOVV9JVEVNOiAnanMtbWVudS1pdGVtLWV4cGFuZGFibGUnLFxuICAgIEJUTl9FWFBBTkQ6ICdqcy1tZW51LWl0ZW0tZXhwYW5kYWJsZV9fYnRuLWV4cGFuZCcsXG4gICAgRVhQQU5ERUQ6ICdtZW51LWl0ZW0tZXhwYW5kYWJsZV9leHBhbmRlZCcsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBDTEFTU0VTO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgQ0xBU1NFUyBmcm9tICcuL2NsYXNzZXMnO1xuXG5jb25zdCBtZW51SXRlbUV4cGFuZEhhbmRsZXIgPSBmdW5jdGlvbiBtZW51SXRlbUV4cGFuZEhhbmRsZXIoZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlKTogdm9pZCB7XG4gICAgJChlLmRlbGVnYXRlVGFyZ2V0KS50b2dnbGVDbGFzcyhDTEFTU0VTLkVYUEFOREVEKTtcbn07XG5cbiQoYC4ke0NMQVNTRVMuTUVOVV9JVEVNfWApLm9uKFxuICAgICdjbGljay5tZW51LWl0ZW0tZXhwYW5kYWJsZS5leHBhbmQnLFxuICAgIG1lbnVJdGVtRXhwYW5kSGFuZGxlclxuKTtcbiIsInR5cGUgbW9kZWxVcGRhdGVDYWxsYmFjayA9IChcbiAgICBwb3NpdGlvbnM6IFtudW1iZXIsIG51bWJlcl0sXG4gICAgdmFsdWVzOiBzdHJpbmcsXG4pID0+IHZvaWQ7XG5cbmludGVyZmFjZSBNb2RlbEludGVyZmFjZSB7XG4gICAgdXBkYXRlOiAodGFyZ2V0UG9zaXRpb246IG51bWJlciwgdHlwZTogJ21pbicgfCAnbWF4JyB8IG51bGwpID0+IHZvaWQ7XG4gICAgb25VcGRhdGU6IChjYWxsYmFjazogbW9kZWxVcGRhdGVDYWxsYmFjaykgPT4gdm9pZDtcbiAgICBpbml0TW9kZWw6IChzdGFydDogW251bWJlciwgbnVtYmVyXSkgPT4gdm9pZDtcbn1cblxuY2xhc3MgTW9kZWwgaW1wbGVtZW50cyBNb2RlbEludGVyZmFjZSB7XG4gICAgcHJpdmF0ZSBfY2FsbGJhY2s6IG1vZGVsVXBkYXRlQ2FsbGJhY2s7XG4gICAgcHJpdmF0ZSBfcG9pbnRNaW5TdGVwOiBudW1iZXI7XG4gICAgcHJpdmF0ZSBfcG9pbnRNYXhTdGVwOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfcmFuZ2VNaW46IG51bWJlcjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9yYW5nZTogbnVtYmVyO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgX3N0ZXBTaXplOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfc3RlcHM6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGNvbmZpZzoge1xuICAgICAgICByYW5nZTogW251bWJlciwgbnVtYmVyXTtcbiAgICAgICAgc3RlcDogbnVtYmVyO1xuICAgIH0pIHtcbiAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgcmFuZ2UsXG4gICAgICAgICAgICBzdGVwLFxuICAgICAgICB9ID0gY29uZmlnO1xuXG4gICAgICAgIHRoaXMuX3N0ZXBTaXplID0gc3RlcDtcbiAgICAgICAgY29uc3QgW3JhbmdlTWluLCByYW5nZU1heF0gPSByYW5nZTtcbiAgICAgICAgdGhpcy5fcmFuZ2VNaW4gPSByYW5nZU1pbjtcbiAgICAgICAgdGhpcy5fcmFuZ2UgPSByYW5nZU1heCAtIHJhbmdlTWluO1xuICAgICAgICB0aGlzLl9zdGVwcyA9IE1hdGguZmxvb3IodGhpcy5fcmFuZ2UgLyBzdGVwKTtcbiAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSBudWxsO1xuICAgICAgICB0aGlzLl9wb2ludE1pblN0ZXAgPSAwO1xuICAgICAgICB0aGlzLl9wb2ludE1heFN0ZXAgPSB0aGlzLl9zdGVwcztcbiAgICB9XG5cbiAgICBwdWJsaWMgdXBkYXRlKHRhcmdldFBvc2l0aW9uOiBudW1iZXIsIHR5cGU6ICdtaW4nIHwgJ21heCcgfCBudWxsKTogdm9pZCB7XG4gICAgICAgIGlmICh0eXBlID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVBvaW50U3RlcHModGFyZ2V0UG9zaXRpb24pO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVQb2ludFN0ZXAodGFyZ2V0UG9zaXRpb24sIHR5cGUpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy50b2dnbGVVcGRhdGVFdmVudCgpO1xuICAgIH1cblxuICAgIHB1YmxpYyBvblVwZGF0ZShjYWxsYmFjazogbW9kZWxVcGRhdGVDYWxsYmFjayk6IHZvaWQge1xuICAgICAgICB0aGlzLl9jYWxsYmFjayA9IGNhbGxiYWNrO1xuICAgIH1cblxuICAgIHB1YmxpYyBpbml0TW9kZWwoc3RhcnQ6IFtudW1iZXIsIG51bWJlcl0pOiB2b2lkIHtcbiAgICAgICAgY29uc3QgW3N0YXJ0TWluLCBzdGFydE1heF0gPSBzdGFydDtcbiAgICAgICAgdGhpcy5fcG9pbnRNaW5TdGVwID0gdGhpcy52YWx1ZVRvUG9pbnRTdGVwKHN0YXJ0TWluKTtcbiAgICAgICAgdGhpcy5fcG9pbnRNYXhTdGVwID0gdGhpcy52YWx1ZVRvUG9pbnRTdGVwKHN0YXJ0TWF4KTtcbiAgICAgICAgdGhpcy50b2dnbGVVcGRhdGVFdmVudCgpO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlUG9pbnRTdGVwcyh0YXJnZXRQb3NpdGlvbjogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IHRhcmdldFN0ZXAgPSB0aGlzLnBvc2l0aW9uVG9TdGVwKHRhcmdldFBvc2l0aW9uKTtcbiAgICAgICAgY29uc3QgcG9pbnRNaW5Qb3NpdGlvbiA9IHRoaXMuc3RlcFRvUG9pbnRQb3NpdGlvbih0aGlzLl9wb2ludE1pblN0ZXApO1xuICAgICAgICBjb25zdCBwb2ludE1heFBvc2l0aW9uID0gdGhpcy5zdGVwVG9Qb2ludFBvc2l0aW9uKHRoaXMuX3BvaW50TWF4U3RlcCk7XG5cbiAgICAgICAgY29uc3QgZGlzdGFuY2VUb01pblBvaW50ID0gTWF0aC5hYnMocG9pbnRNaW5Qb3NpdGlvbiAtIHRhcmdldFBvc2l0aW9uKTtcbiAgICAgICAgY29uc3QgZGlzdGFuY2VUb01heFBvaW50ID0gTWF0aC5hYnMocG9pbnRNYXhQb3NpdGlvbiAtIHRhcmdldFBvc2l0aW9uKTtcblxuICAgICAgICBpZiAoZGlzdGFuY2VUb01pblBvaW50IDwgZGlzdGFuY2VUb01heFBvaW50KSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0U3RlcCA8PSB0aGlzLl9wb2ludE1heFN0ZXApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wb2ludE1pblN0ZXAgPSB0YXJnZXRTdGVwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2UgaWYgKGRpc3RhbmNlVG9NYXhQb2ludCA8IGRpc3RhbmNlVG9NaW5Qb2ludCkge1xuICAgICAgICAgICAgaWYgKHRhcmdldFN0ZXAgPj0gdGhpcy5fcG9pbnRNaW5TdGVwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcG9pbnRNYXhTdGVwID0gdGFyZ2V0U3RlcDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmIChkaXN0YW5jZVRvTWF4UG9pbnQgPT09IGRpc3RhbmNlVG9NaW5Qb2ludCkge1xuICAgICAgICAgICAgaWYgKHRhcmdldFBvc2l0aW9uIDwgcG9pbnRNaW5Qb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BvaW50TWluU3RlcCA9IHRhcmdldFN0ZXA7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHRhcmdldFBvc2l0aW9uID4gcG9pbnRNYXhQb3NpdGlvbikge1xuICAgICAgICAgICAgICAgIHRoaXMuX3BvaW50TWF4U3RlcCA9IHRhcmdldFN0ZXA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwcml2YXRlIHVwZGF0ZVBvaW50U3RlcCh0YXJnZXRQb3NpdGlvbjogbnVtYmVyLCB0eXBlOiAnbWluJyB8ICdtYXgnIHwgbnVsbCk6IHZvaWQge1xuICAgICAgICBjb25zdCB0YXJnZXRTdGVwID0gdGhpcy5wb3NpdGlvblRvU3RlcCh0YXJnZXRQb3NpdGlvbik7XG5cbiAgICAgICAgaWYgKHR5cGUgPT09ICdtaW4nKSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0U3RlcCA8PSB0aGlzLl9wb2ludE1heFN0ZXApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wb2ludE1pblN0ZXAgPSB0YXJnZXRTdGVwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHR5cGUgPT09ICdtYXgnKSB7XG4gICAgICAgICAgICBpZiAodGFyZ2V0U3RlcCA+PSB0aGlzLl9wb2ludE1pblN0ZXApIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9wb2ludE1heFN0ZXAgPSB0YXJnZXRTdGVwO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB0b2dnbGVVcGRhdGVFdmVudCgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuX2NhbGxiYWNrICE9PSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBwb3NpdGlvbnMgPSBbXG4gICAgICAgICAgICAgICAgdGhpcy5zdGVwVG9Qb2ludFBvc2l0aW9uKHRoaXMuX3BvaW50TWluU3RlcCksXG4gICAgICAgICAgICAgICAgdGhpcy5zdGVwVG9Qb2ludFBvc2l0aW9uKHRoaXMuX3BvaW50TWF4U3RlcCksXG4gICAgICAgICAgICBdIGFzIFtudW1iZXIsIG51bWJlcl07XG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSB0aGlzLmdldFZhbHVlc1N0cigpO1xuICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2socG9zaXRpb25zLCB2YWx1ZXMpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRWYWx1ZXNTdHIoKTogc3RyaW5nIHtcbiAgICAgICAgY29uc3QgdmFsTWluID0gdGhpcy5zdGVwVG9WYWx1ZSh0aGlzLl9wb2ludE1pblN0ZXApO1xuICAgICAgICBjb25zdCB2YWxNYXggPSB0aGlzLnN0ZXBUb1ZhbHVlKHRoaXMuX3BvaW50TWF4U3RlcCk7XG4gICAgICAgIGNvbnN0IG1pbiA9IHRoaXMuZGl2aWRlTnVtYmVyQnlEaWdpdHModmFsTWluKTtcbiAgICAgICAgY29uc3QgbWF4ID0gdGhpcy5kaXZpZGVOdW1iZXJCeURpZ2l0cyh2YWxNYXgpO1xuICAgICAgICByZXR1cm4gYCR7bWlufeKCvSAtICR7bWF4feKCvWA7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBkaXZpZGVOdW1iZXJCeURpZ2l0cyh2YWw6IG51bWJlcik6IHN0cmluZyB7XG4gICAgICAgIGNvbnN0IG51bVN0ciA9IFN0cmluZyh2YWwpO1xuXG4gICAgICAgIGlmIChudW1TdHIubGVuZ3RoIDw9IDMpIHtcbiAgICAgICAgICAgIHJldHVybiBudW1TdHI7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0bXBOdW1TdHIgPSBudW1TdHIuc3BsaXQoJycpLnJldmVyc2UoKTtcbiAgICAgICAgbGV0IGluZGV4U2xpY2UgPSAwO1xuICAgICAgICBjb25zdCByZXN1bHQgPSBbXTtcblxuICAgICAgICB3aGlsZSAoaW5kZXhTbGljZSArIDMgPD0gdG1wTnVtU3RyLmxlbmd0aCkge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goXG4gICAgICAgICAgICAgICAgLi4udG1wTnVtU3RyLnNsaWNlKGluZGV4U2xpY2UsIGluZGV4U2xpY2UgKyAzKVxuICAgICAgICAgICAgKTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKCcgJyk7XG5cbiAgICAgICAgICAgIGluZGV4U2xpY2UgKz0gMztcbiAgICAgICAgfVxuXG4gICAgICAgIHJlc3VsdC5wdXNoKFxuICAgICAgICAgICAgLi4udG1wTnVtU3RyLnNsaWNlKGluZGV4U2xpY2UpXG4gICAgICAgICk7XG4gICAgICAgIHJlc3VsdC5wdXNoKCcgJyk7XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdC5yZXZlcnNlKCkuam9pbignJyk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB2YWx1ZVRvUG9pbnRTdGVwKHZhbHVlOiBudW1iZXIpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAvIHRoaXMuX3N0ZXBTaXplKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0ZXBUb1BvaW50UG9zaXRpb24oc3RlcDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHN0ZXAgLyB0aGlzLl9zdGVwcztcbiAgICB9XG5cbiAgICBwcml2YXRlIHN0ZXBUb1ZhbHVlKHN0ZXA6IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiAoc3RlcCAqIHRoaXMuX3N0ZXBTaXplKSArIHRoaXMuX3JhbmdlTWluO1xuICAgIH1cblxuICAgIHByaXZhdGUgcG9zaXRpb25Ub1N0ZXAocG9zaXRpb246IG51bWJlcik6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBNYXRoLnJvdW5kKHBvc2l0aW9uICogdGhpcy5fc3RlcHMpO1xuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgTW9kZWw7XG5leHBvcnQgeyBNb2RlbEludGVyZmFjZSB9O1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgeyBNb2RlbEludGVyZmFjZSB9IGZyb20gJy4uL21vZGVsL21vZGVsJztcbmltcG9ydCBDTEFTU0VTIGZyb20gJy4uL2NsYXNzZXMnO1xuXG5jbGFzcyBWaWV3IHtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kc2xpZGVyOiBKUXVlcnk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfJGxpbmU6IEpRdWVyeTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kcG9pbnQxOiBKUXVlcnk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfJHBvaW50MjogSlF1ZXJ5O1xuICAgIHByaXZhdGUgcmVhZG9ubHkgXyRiZ0xpbmU6IEpRdWVyeTtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF8kdmFsdWVzOiBKUXVlcnk7XG4gICAgcHJpdmF0ZSByZWFkb25seSBfbW9kZWw6IE1vZGVsSW50ZXJmYWNlO1xuICAgIHByaXZhdGUgcmVhZG9ubHkgXyRkb2N1bWVudDogSlF1ZXJ5PERvY3VtZW50PjtcbiAgICBwcml2YXRlIHJlYWRvbmx5IF9saW5lQm9yZGVyV2lkdGg6IG51bWJlcjtcbiAgICBwcml2YXRlIF9wb2ludFNlbGVjdGVkVHlwZTogJ21pbicgfCAnbWF4JyB8IG51bGw7XG5cbiAgICBjb25zdHJ1Y3RvcihfJHNsaWRlcjogSlF1ZXJ5LCBtb2RlbDogTW9kZWxJbnRlcmZhY2UpIHtcbiAgICAgICAgdGhpcy5fJHNsaWRlciA9IF8kc2xpZGVyO1xuICAgICAgICB0aGlzLl8kbGluZSA9IF8kc2xpZGVyLmZpbmQoYC4ke0NMQVNTRVMuTElORX1gKTtcbiAgICAgICAgdGhpcy5fJGJnTGluZSA9IF8kc2xpZGVyLmZpbmQoYC4ke0NMQVNTRVMuQkdfTElORX1gKTtcbiAgICAgICAgdGhpcy5fJHZhbHVlcyA9IF8kc2xpZGVyLmZpbmQoYC4ke0NMQVNTRVMuVkFMVUVTfWApO1xuICAgICAgICB0aGlzLl8kcG9pbnQxID0gJChfJHNsaWRlci5maW5kKGAuJHtDTEFTU0VTLlBPSU5UfWApLmdldCgpWzBdKTtcbiAgICAgICAgdGhpcy5fJHBvaW50MiA9ICQoXyRzbGlkZXIuZmluZChgLiR7Q0xBU1NFUy5QT0lOVH1gKS5nZXQoKVsxXSk7XG4gICAgICAgIHRoaXMuXyRkb2N1bWVudCA9ICQoZG9jdW1lbnQpO1xuICAgICAgICB0aGlzLl9tb2RlbCA9IG1vZGVsO1xuICAgICAgICB0aGlzLl9saW5lQm9yZGVyV2lkdGggPSBwYXJzZUludCh0aGlzLl8kbGluZS5jc3MoJ2JvcmRlci1sZWZ0LXdpZHRoJykgfHwgJzAnLCAxMCk7XG4gICAgICAgIHRoaXMuX3BvaW50U2VsZWN0ZWRUeXBlID0gbnVsbDtcblxuICAgICAgICB0aGlzLl8kcG9pbnQxLmNzcygnei1pbmRleCcsIDUpO1xuICAgICAgICB0aGlzLl8kcG9pbnQyLmNzcygnei1pbmRleCcsIDYpO1xuXG4gICAgICAgIG1vZGVsLm9uVXBkYXRlKHRoaXMudXBkYXRlLmJpbmQodGhpcykpO1xuICAgICAgICB0aGlzLnNldFNsaWRlckV2ZW50SGFuZGxlcnMoKTtcbiAgICAgICAgdGhpcy5pbml0TW9kZWwoKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIGluaXRNb2RlbCgpOiB2b2lkIHtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSBbXG4gICAgICAgICAgICBwYXJzZUludCh0aGlzLl8kc2xpZGVyLmF0dHIoJ2RhdGEtc3RhcnQtbWluJykgfHwgJzAnLCAxMCksXG4gICAgICAgICAgICBwYXJzZUludCh0aGlzLl8kc2xpZGVyLmF0dHIoJ2RhdGEtc3RhcnQtbWF4JykgfHwgJzEwMDAnLCAxMCksXG4gICAgICAgIF0gYXMgW251bWJlciwgbnVtYmVyXTtcblxuICAgICAgICB0aGlzLl9tb2RlbC5pbml0TW9kZWwoc3RhcnQpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2V0U2xpZGVyRXZlbnRIYW5kbGVycygpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5fJGxpbmUub24oXG4gICAgICAgICAgICAnbW91c2Vkb3duLnJhbmdlU2xpZGVyLnVwZGF0ZScsXG4gICAgICAgICAgICB0aGlzLnNsaWRlck1vdXNlRG93bkhhbmRsZXIuYmluZCh0aGlzKVxuICAgICAgICApO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlTW9kZWwoZXY6IEpRdWVyeS5Nb3VzZUV2ZW50QmFzZSk6IHZvaWQge1xuICAgICAgICB0aGlzLl9tb2RlbC51cGRhdGUodGhpcy5nZXRUYXJnZXRQb3NpdGlvbihldiksIHRoaXMuX3BvaW50U2VsZWN0ZWRUeXBlKTtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNsaWRlck1vdXNlRG93bkhhbmRsZXIoZXY6IEpRdWVyeS5Nb3VzZUV2ZW50QmFzZSk6IHZvaWQge1xuICAgICAgICBjb25zdCAkdGFyZ2V0ID0gJChldi50YXJnZXQpO1xuXG4gICAgICAgIGlmICgkdGFyZ2V0Lmhhc0NsYXNzKENMQVNTRVMuUE9JTlQpKSB7XG4gICAgICAgICAgICB0aGlzLl9wb2ludFNlbGVjdGVkVHlwZSA9ICR0YXJnZXQuYXR0cignZGF0YS10eXBlJykgPT09ICdtaW4nID8gJ21pbicgOiAnbWF4JztcblxuICAgICAgICAgICAgaWYgKHRoaXMuX3BvaW50U2VsZWN0ZWRUeXBlID09PSAnbWF4Jykge1xuICAgICAgICAgICAgICAgIHRoaXMuXyRwb2ludDIuY3NzKCd6LWluZGV4JywgNik7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRoaXMuXyRwb2ludDIuY3NzKCd6LWluZGV4JywgNCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHRoaXMuXyRkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5vbihcbiAgICAgICAgICAgICAgICAgICAgJ21vdXNlbW92ZS5yYW5nZVNsaWRlci51cGRhdGUnLFxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBvaW50TW91c2VNb3ZlSGFuZGxlci5iaW5kKHRoaXMpXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIC5vbmUoJ21vdXNldXAucmFuZ2VTbGlkZXIub2ZmVXBkYXRlJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl8kZG9jdW1lbnQub2ZmKCdtb3VzZW1vdmUucmFuZ2VTbGlkZXIudXBkYXRlJyk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9wb2ludFNlbGVjdGVkVHlwZSA9IG51bGw7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZU1vZGVsKGV2KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgcG9pbnRNb3VzZU1vdmVIYW5kbGVyKGV2OiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiB2b2lkIHtcbiAgICAgICAgdGhpcy51cGRhdGVNb2RlbChldik7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSB1cGRhdGUocG9zaXRpb25zOiBbbnVtYmVyLCBudW1iZXJdLCB2YWx1ZXM6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICBjb25zdCBbXG4gICAgICAgICAgICBwb3NpdGlvbkxlZnQsXG4gICAgICAgICAgICBwb3NpdGlvblJpZ2h0LFxuICAgICAgICBdID0gcG9zaXRpb25zO1xuXG4gICAgICAgIHRoaXMuc2V0UG9pbnRQb3NpdGlvbih0aGlzLl8kcG9pbnQxLCBwb3NpdGlvbkxlZnQpO1xuICAgICAgICB0aGlzLnNldFBvaW50UG9zaXRpb24odGhpcy5fJHBvaW50MiwgcG9zaXRpb25SaWdodCk7XG4gICAgICAgIHRoaXMudXBkYXRlQmdMaW5lKHBvc2l0aW9ucyk7XG4gICAgICAgIHRoaXMuXyR2YWx1ZXMudGV4dCh2YWx1ZXMpO1xuICAgIH1cblxuICAgIHByaXZhdGUgc2V0UG9pbnRQb3NpdGlvbihfJHBvaW50OiBKUXVlcnksIHBvc2l0aW9uOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgY29uc3Qgd2lkdGhMaW5lID0gdGhpcy5fJGxpbmUuaW5uZXJXaWR0aCgpO1xuICAgICAgICBjb25zdCBvZmZzZXQgPSBfJHBvaW50Lm91dGVyV2lkdGgoZmFsc2UpIC8gMjtcbiAgICAgICAgY29uc3QgbWFyZ2luID0gKHBvc2l0aW9uICogd2lkdGhMaW5lKSAtIG9mZnNldDtcblxuICAgICAgICBfJHBvaW50LmNzcygnbGVmdCcsIGAke21hcmdpbn1weGApO1xuICAgIH1cblxuICAgIHByaXZhdGUgZ2V0UG9pbnRQb3NpdGlvbihfJHBvaW50OiBKUXVlcnkpOiBudW1iZXIge1xuICAgICAgICBjb25zdCB3aWR0aExpbmUgPSB0aGlzLl8kbGluZS5pbm5lcldpZHRoKCk7XG4gICAgICAgIGNvbnN0IG9mZnNldCA9IF8kcG9pbnQub3V0ZXJXaWR0aChmYWxzZSkgLyAyO1xuICAgICAgICBjb25zdCBtYXJnaW4gPSBwYXJzZUludChfJHBvaW50LmNzcygnbGVmdCcpIHx8ICctOCcsIDEwKTtcblxuICAgICAgICByZXR1cm4gKE1hdGguYWJzKG1hcmdpbikgKyBvZmZzZXQpIC8gd2lkdGhMaW5lO1xuICAgIH1cblxuICAgIHByaXZhdGUgdXBkYXRlQmdMaW5lKHBvc2l0aW9uczogW251bWJlciwgbnVtYmVyXSk6IHZvaWQge1xuICAgICAgICBjb25zdCB3aWR0aENvbnRhaW5lciA9IHRoaXMuXyRsaW5lLmlubmVyV2lkdGgoKTtcbiAgICAgICAgY29uc3QgW1xuICAgICAgICAgICAgcG9zaXRpb25MZWZ0LFxuICAgICAgICAgICAgcG9zaXRpb25SaWdodCxcbiAgICAgICAgXSA9IHBvc2l0aW9ucztcblxuICAgICAgICBjb25zdCBsZWZ0ID0gcG9zaXRpb25MZWZ0ICogd2lkdGhDb250YWluZXI7XG4gICAgICAgIGNvbnN0IHJpZ2h0ID0gd2lkdGhDb250YWluZXIgLSAod2lkdGhDb250YWluZXIgKiBwb3NpdGlvblJpZ2h0KTtcblxuICAgICAgICB0aGlzLl8kYmdMaW5lXG4gICAgICAgICAgICAuY3NzKCdsZWZ0JywgYCR7bGVmdH1weGApXG4gICAgICAgICAgICAuY3NzKCdyaWdodCcsIGAke3JpZ2h0fXB4YCk7XG4gICAgfVxuXG4gICAgcHJpdmF0ZSBnZXRUYXJnZXRQb3NpdGlvbihldjogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlKTogbnVtYmVyIHtcbiAgICAgICAgY29uc3Qgd2lkdGhMaW5lID0gdGhpcy5fJGxpbmUuaW5uZXJXaWR0aCgpO1xuICAgICAgICBjb25zdCBvZmZzZXRMaW5lID0gdGhpcy5fJGxpbmUub2Zmc2V0KCkubGVmdCArIHRoaXMuX2xpbmVCb3JkZXJXaWR0aDtcbiAgICAgICAgY29uc3QgbW91c2VQb3NpdGlvbiA9IGV2LnBhZ2VYO1xuICAgICAgICBjb25zdCB0YXJnZXRQb3NpdGlvbiA9IChtb3VzZVBvc2l0aW9uIC0gb2Zmc2V0TGluZSkgLyB3aWR0aExpbmU7XG5cbiAgICAgICAgaWYgKHRhcmdldFBvc2l0aW9uID4gMSkge1xuICAgICAgICAgICAgcmV0dXJuIDE7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGFyZ2V0UG9zaXRpb24gPCAwKSB7XG4gICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0YXJnZXRQb3NpdGlvbjtcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFZpZXc7XG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2Jhbm5lcnMvbG9naW4tcmVnaXN0cmF0aW9uLnBuZ1wiOyIsImNvbnN0IGltcG9ydEFsbCA9IGZ1bmN0aW9uIGltcG9ydEFsbChyZXNvbHZlOiBfX1dlYnBhY2tNb2R1bGVBcGkuUmVxdWlyZUNvbnRleHQpOiB2b2lkIHtcbiAgICByZXNvbHZlLmtleXMoKS5mb3JFYWNoKHJlc29sdmUpO1xufTtcblxucmVxdWlyZSgnLi9zdHlsZXMvZm9udHMuc2NzcycpO1xuaW1wb3J0QWxsKHJlcXVpcmUuY29udGV4dCgnLi9kZXNrdG9wLmJsb2NrcycsIHRydWUsIC8udHMkLykpO1xuaW1wb3J0QWxsKHJlcXVpcmUuY29udGV4dCgnLi9kZXNrdG9wLmJsb2NrcycsIHRydWUsIC8uKHNhfHNjfGMpc3MkLykpO1xuaW1wb3J0QWxsKHJlcXVpcmUuY29udGV4dCgnLi9wYWdlcycsIHRydWUsIC8uKHNhfHNjfGMpc3MkLykpO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZm9udHMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb250cy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb250cy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8wX19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Gb250IEF3ZXNvbWUgNSBCcmFuZHMtUmVndWxhci00MDAuZW90XCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzFfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL0ZvbnQgQXdlc29tZSA1IEJyYW5kcy1SZWd1bGFyLTQwMC53b2ZmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzJfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL0ZvbnQgQXdlc29tZSA1IEJyYW5kcy1SZWd1bGFyLTQwMC50dGZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfM19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvRm9udCBBd2Vzb21lIDUgQnJhbmRzLVJlZ3VsYXItNDAwLnN2Z1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF80X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUJvbGQuZW90XCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzVfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtQm9sZC53b2ZmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzZfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtQm9sZC50dGZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfN19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1Cb2xkLnN2Z1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF84X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZC5lb3RcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfOV9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGQud29mZlwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xMF9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGQudHRmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzExX19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZC5zdmdcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTJfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtRXh0cmFCb2xkSXRhbGljLmVvdFwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xM19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGRJdGFsaWMud29mZlwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xNF9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGRJdGFsaWMudHRmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzE1X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LUV4dHJhQm9sZEl0YWxpYy5zdmdcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTZfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci5lb3RcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTdfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01vbnRzZXJyYXQtUmVndWxhci53b2ZmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzE4X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LVJlZ3VsYXIudHRmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzE5X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9Nb250c2VycmF0LVJlZ3VsYXIuc3ZnXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzIwX19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9RdWlja3NhbmQtQm9sZC5lb3RcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjFfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1Cb2xkLndvZmZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjJfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1Cb2xkLnR0ZlwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yM19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLUJvbGQuc3ZnXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzI0X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9RdWlja3NhbmQtTGlnaHQuZW90XCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzI1X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9RdWlja3NhbmQtTGlnaHQud29mZlwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yNl9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLUxpZ2h0LnR0ZlwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yN19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLUxpZ2h0LnN2Z1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8yOF9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvUXVpY2tzYW5kLVJlZ3VsYXIuZW90XCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzI5X19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9RdWlja3NhbmQtUmVndWxhci53b2ZmXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzMwX19fID0gcmVxdWlyZShcIi4uL2NodW5rcy9mb250cy9RdWlja3NhbmQtUmVndWxhci50dGZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzFfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL1F1aWNrc2FuZC1SZWd1bGFyLnN2Z1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8zMl9fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLmVvdFwiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8zM19fXyA9IHJlcXVpcmUoXCIuLi9jaHVua3MvZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLndvZmZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzRfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci50dGZcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzVfX18gPSByZXF1aXJlKFwiLi4vY2h1bmtzL2ZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci5zdmdcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8xX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMl9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzNfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF80X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF80X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfNV9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzZfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzZfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF83X19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF83X19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfOF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzlfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX1BVUkVfSU1QT1JUXzlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTVfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTZfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMThfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMTlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjVfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjZfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yN19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjdfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjhfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMjlfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzFfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMl9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzJfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zM19fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzNfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNV9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMzVfX18pO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJAZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJGb250IEF3ZXNvbWUgNSBCcmFuZHNcXFwiO2ZvbnQtZmFtaWx5OidGb250IEF3ZXNvbWUgNSBCcmFuZHMnO3NyYzp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyArIFwiKTtzcmM6bG9jYWwoXFxcIuKYulxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fICsgXCIpIGZvcm1hdChcXFwid29mZlxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yX19fICsgXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfM19fXyArIFwiKSBmb3JtYXQoXFxcInN2Z1xcXCIpO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJNb250c2VycmF0XFxcIjtzcmM6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzRfX18gKyBcIik7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF81X19fICsgXCIpIGZvcm1hdChcXFwid29mZlxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF82X19fICsgXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfN19fXyArIFwiKSBmb3JtYXQoXFxcInN2Z1xcXCIpO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zdHlsZTpub3JtYWx9QGZvbnQtZmFjZXtmb250LWZhbWlseTpcXFwiTW9udHNlcnJhdFxcXCI7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF84X19fICsgXCIpO3NyYzp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfOV9fXyArIFwiKSBmb3JtYXQoXFxcIndvZmZcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTBfX18gKyBcIikgZm9ybWF0KFxcXCJ0cnVldHlwZVxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xMV9fXyArIFwiKSBmb3JtYXQoXFxcInN2Z1xcXCIpO2ZvbnQtd2VpZ2h0OjkwMDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJNb250c2VycmF0XFxcIjtzcmM6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzEyX19fICsgXCIpO3NyYzp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTNfX18gKyBcIikgZm9ybWF0KFxcXCJ3b2ZmXFxcIiksdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE0X19fICsgXCIpIGZvcm1hdChcXFwidHJ1ZXR5cGVcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMTVfX18gKyBcIikgZm9ybWF0KFxcXCJzdmdcXFwiKTtmb250LXdlaWdodDo5MDA7Zm9udC1zdHlsZTppdGFsaWN9QGZvbnQtZmFjZXtmb250LWZhbWlseTpcXFwiTW9udHNlcnJhdFxcXCI7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xNl9fXyArIFwiKTtzcmM6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE3X19fICsgXCIpIGZvcm1hdChcXFwid29mZlxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xOF9fXyArIFwiKSBmb3JtYXQoXFxcInRydWV0eXBlXFxcIiksdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzE5X19fICsgXCIpIGZvcm1hdChcXFwic3ZnXFxcIik7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsfUBmb250LWZhY2V7Zm9udC1mYW1pbHk6XFxcIlF1aWNrc2FuZFxcXCI7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMF9fXyArIFwiKTtzcmM6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIxX19fICsgXCIpIGZvcm1hdChcXFwid29mZlxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yMl9fXyArIFwiKSBmb3JtYXQoXFxcInRydWV0eXBlXFxcIiksdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzIzX19fICsgXCIpIGZvcm1hdChcXFwic3ZnXFxcIik7Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiO3NyYzp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjRfX18gKyBcIik7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yNV9fXyArIFwiKSBmb3JtYXQoXFxcIndvZmZcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjZfX18gKyBcIikgZm9ybWF0KFxcXCJ0cnVldHlwZVxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yN19fXyArIFwiKSBmb3JtYXQoXFxcInN2Z1xcXCIpO2ZvbnQtd2VpZ2h0OjMwMDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJRdWlja3NhbmRcXFwiO3NyYzp1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMjhfX18gKyBcIik7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8yOV9fXyArIFwiKSBmb3JtYXQoXFxcIndvZmZcXFwiKSx1cmwoXCIgKyBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMzBfX18gKyBcIikgZm9ybWF0KFxcXCJ0cnVldHlwZVxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMV9fXyArIFwiKSBmb3JtYXQoXFxcInN2Z1xcXCIpO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXN0eWxlOm5vcm1hbH1AZm9udC1mYWNle2ZvbnQtZmFtaWx5OlxcXCJNYXRlcmlhbCBJY29uc1xcXCI7c3JjOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zMl9fXyArIFwiKTtzcmM6dXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzMzX19fICsgXCIpIGZvcm1hdChcXFwid29mZlxcXCIpLHVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8zNF9fXyArIFwiKSBmb3JtYXQoXFxcInRydWV0eXBlXFxcIiksdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzM1X19fICsgXCIpIGZvcm1hdChcXFwic3ZnXFxcIik7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc3R5bGU6bm9ybWFsfVxcblwiLCBcIlwiXSk7XG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvRm9udCBBd2Vzb21lIDUgQnJhbmRzLVJlZ3VsYXItNDAwLmVvdFwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Gb250IEF3ZXNvbWUgNSBCcmFuZHMtUmVndWxhci00MDAud29mZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Gb250IEF3ZXNvbWUgNSBCcmFuZHMtUmVndWxhci00MDAudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL0ZvbnQgQXdlc29tZSA1IEJyYW5kcy1SZWd1bGFyLTQwMC5zdmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1Cb2xkLmVvdFwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Nb250c2VycmF0LUJvbGQud29mZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Nb250c2VycmF0LUJvbGQudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01vbnRzZXJyYXQtQm9sZC5zdmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGQuZW90XCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01vbnRzZXJyYXQtRXh0cmFCb2xkLndvZmZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGQudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01vbnRzZXJyYXQtRXh0cmFCb2xkLnN2Z1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Nb250c2VycmF0LUV4dHJhQm9sZEl0YWxpYy5lb3RcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGRJdGFsaWMud29mZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Nb250c2VycmF0LUV4dHJhQm9sZEl0YWxpYy50dGZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1FeHRyYUJvbGRJdGFsaWMuc3ZnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01vbnRzZXJyYXQtUmVndWxhci5lb3RcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1SZWd1bGFyLndvZmZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTW9udHNlcnJhdC1SZWd1bGFyLnR0ZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9Nb250c2VycmF0LVJlZ3VsYXIuc3ZnXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL1F1aWNrc2FuZC1Cb2xkLmVvdFwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9RdWlja3NhbmQtQm9sZC53b2ZmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL1F1aWNrc2FuZC1Cb2xkLnR0ZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9RdWlja3NhbmQtQm9sZC5zdmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvUXVpY2tzYW5kLUxpZ2h0LmVvdFwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9RdWlja3NhbmQtTGlnaHQud29mZlwiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9RdWlja3NhbmQtTGlnaHQudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL1F1aWNrc2FuZC1MaWdodC5zdmdcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvUXVpY2tzYW5kLVJlZ3VsYXIuZW90XCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL1F1aWNrc2FuZC1SZWd1bGFyLndvZmZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvUXVpY2tzYW5kLVJlZ3VsYXIudHRmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL1F1aWNrc2FuZC1SZWd1bGFyLnN2Z1wiOyIsImV4cG9ydCBkZWZhdWx0IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJmb250cy9NYXRlcmlhbEljb25zLVJlZ3VsYXIuZW90XCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci53b2ZmXCI7IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcImZvbnRzL01hdGVyaWFsSWNvbnMtUmVndWxhci50dGZcIjsiLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiZm9udHMvTWF0ZXJpYWxJY29ucy1SZWd1bGFyLnN2Z1wiOyIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwidmFyIG1hcCA9IHtcblx0XCIuL2J1dHRvbi9idXR0b24udHNcIjogODMsXG5cdFwiLi9idXR0b24vcGx1Z2luL2hhbmRsZXIudHNcIjogMTQsXG5cdFwiLi9idXR0b24vcGx1Z2luL3BsdWdpbi50c1wiOiAxMyxcblx0XCIuL2NhbGVuZGFyL2NhbGVuZGFyLnRzXCI6IDg0LFxuXHRcIi4vY2FsZW5kYXIvY2FsZW5kYXJfX2J0bi1hcHBseS50c1wiOiAxOSxcblx0XCIuL2NhbGVuZGFyL2NhbGVuZGFyX19idG4tY2hhbmdlLW1vbnRoLnRzXCI6IDE1LFxuXHRcIi4vY2FsZW5kYXIvY2FsZW5kYXJfX2J0bi1jbGVhci50c1wiOiAyMCxcblx0XCIuL2NhbGVuZGFyL2NhbGVuZGFyX19kYXktd2Vlay50c1wiOiAxOCxcblx0XCIuL2NhbGVuZGFyL2NsYXNzZXMudHNcIjogMyxcblx0XCIuL2NhbGVuZGFyL2xpYi50c1wiOiA2LFxuXHRcIi4vY2FsZW5kYXIvcGx1Z2luL2hhbmRsZXIudHNcIjogMTcsXG5cdFwiLi9jYWxlbmRhci9wbHVnaW4vcGx1Z2luLnRzXCI6IDE2LFxuXHRcIi4vY2FsZW5kYXIvdmlldy92aWV3LnRzXCI6IDQsXG5cdFwiLi9kYXRlLXJhbmdlL2NsYXNzZXMudHNcIjogOCxcblx0XCIuL2RhdGUtcmFuZ2UvZGF0ZS1yYW5nZS50c1wiOiA4NSxcblx0XCIuL2RhdGUtcmFuZ2UvZGF0ZS1yYW5nZV9fZHJvcGRvd24udHNcIjogMjEsXG5cdFwiLi9kYXRlLXJhbmdlL2xpYi50c1wiOiAyMixcblx0XCIuL2Ryb3Bkb3duLWNvdW50ZXIvZHJvcGRvd24tY291bnRlci50c1wiOiA4Nixcblx0XCIuL2Ryb3Bkb3duLWNvdW50ZXIvcGx1Z2luL2hhbmRsZXIudHNcIjogMjQsXG5cdFwiLi9kcm9wZG93bi1jb3VudGVyL3BsdWdpbi9wbHVnaW4udHNcIjogMjMsXG5cdFwiLi9kcm9wZG93bi1ndWVzdC9jbGFzc2VzLnRzXCI6IDcsXG5cdFwiLi9kcm9wZG93bi1ndWVzdC9kcm9wZG93bi1ndWVzdC50c1wiOiA4Nyxcblx0XCIuL2Ryb3Bkb3duLWd1ZXN0L2Ryb3Bkb3duLWd1ZXN0X19idG4tYXBwbHkudHNcIjogMjUsXG5cdFwiLi9kcm9wZG93bi1ndWVzdC9kcm9wZG93bi1ndWVzdF9fYnRuLWNsZWFyLnRzXCI6IDI2LFxuXHRcIi4vZHJvcGRvd24tZ3Vlc3QvbGliLnRzXCI6IDEwLFxuXHRcIi4vZHJvcGRvd24tZ3Vlc3Qvdmlldy92aWV3LnRzXCI6IDksXG5cdFwiLi9kcm9wZG93bi1oZWFkL2Ryb3Bkb3duLWhlYWQudHNcIjogODgsXG5cdFwiLi9kcm9wZG93bi1oZWFkL3BsdWdpbi9oYW5kbGVyLnRzXCI6IDI4LFxuXHRcIi4vZHJvcGRvd24taGVhZC9wbHVnaW4vcGx1Z2luLnRzXCI6IDI3LFxuXHRcIi4vZHJvcGRvd24tcm9vbS1hbWVuaXRpZXMvY2FzZS10YWJsZXMudHNcIjogMjksXG5cdFwiLi9kcm9wZG93bi1yb29tLWFtZW5pdGllcy9kcm9wZG93bi1yb29tLWFtZW5pdGllcy50c1wiOiA4OSxcblx0XCIuL2Ryb3Bkb3duL2NsYXNzZXMudHNcIjogMzAsXG5cdFwiLi9kcm9wZG93bi9kcm9wZG93bi50c1wiOiA5MCxcblx0XCIuL2Ryb3Bkb3duL3BsdWdpbi9oYW5kbGVyLnRzXCI6IDMyLFxuXHRcIi4vZHJvcGRvd24vcGx1Z2luL3BsdWdpbi50c1wiOiAzMSxcblx0XCIuL2V4cGFuZGFibGUtY2hlY2tib3gtbGlzdC9leHBhbmRhYmxlLWNoZWNrYm94LWxpc3QudHNcIjogOTEsXG5cdFwiLi9oZWFkZXIvaGVhZGVyX19tZW51LW1vYmlsZS1idG4udHNcIjogOTIsXG5cdFwiLi9pbWFnZS1zbGlkZXIvY2xhc3Nlcy50c1wiOiAzMyxcblx0XCIuL2ltYWdlLXNsaWRlci9pbWFnZS1zbGlkZXIudHNcIjogOTMsXG5cdFwiLi9pbWFnZS1zbGlkZXIvaW1hZ2Utc2xpZGVyX19uYXYtYnV0dG9uLnRzXCI6IDM0LFxuXHRcIi4vbGlrZS1idXR0b24vY2xhc3Nlcy50c1wiOiAxMSxcblx0XCIuL2xpa2UtYnV0dG9uL2xpa2UtYnV0dG9uLnRzXCI6IDk0LFxuXHRcIi4vbGlrZS1idXR0b24vcGx1Z2luL2hhbmRsZXIudHNcIjogMzYsXG5cdFwiLi9saWtlLWJ1dHRvbi9wbHVnaW4vcGx1Z2luLnRzXCI6IDM1LFxuXHRcIi4vbWVudS1pdGVtLWV4cGFuZGFibGUvY2xhc3Nlcy50c1wiOiAzNyxcblx0XCIuL21lbnUtaXRlbS1leHBhbmRhYmxlL21lbnUtaXRlbS1leHBhbmRhYmxlLnRzXCI6IDk1LFxuXHRcIi4vbWVudS1pdGVtLWV4cGFuZGFibGUvbWVudS1pdGVtLWV4cGFuZGFibGVfX2J0bi1leHBhbmQudHNcIjogMzgsXG5cdFwiLi9yYW5nZS1zbGlkZXIvY2xhc3Nlcy50c1wiOiAxMixcblx0XCIuL3JhbmdlLXNsaWRlci9tb2RlbC9tb2RlbC50c1wiOiAzOSxcblx0XCIuL3JhbmdlLXNsaWRlci9yYW5nZS1zbGlkZXIudHNcIjogOTYsXG5cdFwiLi9yYW5nZS1zbGlkZXIvdmlldy92aWV3LnRzXCI6IDQwXG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gODI7IiwiaW1wb3J0ICcuL3BsdWdpbi9wbHVnaW4nO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5pbXBvcnQgJy4vY2FsZW5kYXJfX2J0bi1jaGFuZ2UtbW9udGgnO1xuaW1wb3J0IENMQVNTRVMgZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCB7XG4gICAgdXBkYXRlQ2FsZW5kYXIsXG4gICAgZ2V0UmVuZGVyZWREYXRlLFxufSBmcm9tICcuL3ZpZXcvdmlldyc7XG5pbXBvcnQgJy4vcGx1Z2luL3BsdWdpbic7XG5pbXBvcnQgJy4vY2FsZW5kYXJfX2RheS13ZWVrJztcbmltcG9ydCAnLi9jYWxlbmRhcl9fYnRuLWFwcGx5JztcbmltcG9ydCAnLi9jYWxlbmRhcl9fYnRuLWNsZWFyJztcblxuJChgLiR7Q0xBU1NFUy5DQUxFTkRBUn1gKS5lYWNoKGZ1bmN0aW9uKCk6IHZvaWQge1xuICAgIGNvbnN0ICRjYWxlbmRhciA9ICQodGhpcyk7XG4gICAgY29uc3QgcmVuZGVyRGF0ZSA9IGdldFJlbmRlcmVkRGF0ZSgkY2FsZW5kYXIpO1xuICAgIHVwZGF0ZUNhbGVuZGFyKCRjYWxlbmRhciwgcmVuZGVyRGF0ZSk7XG59KTtcbiIsImltcG9ydCAqIGFzICQgZnJvbSAnanF1ZXJ5JztcblxuaW1wb3J0IENMQVNTRVMgZnJvbSAnLi9jbGFzc2VzJztcbmltcG9ydCAnLi9kYXRlLXJhbmdlX19kcm9wZG93bic7XG5pbXBvcnQgeyBkYXRlVG9TdHJpbmcgfSBmcm9tICcuL2xpYic7XG5cbmNvbnN0IERFRkFVTFRfREFURV9URVhUID0gJ9CU0JQu0JzQnC7Qk9CT0JPQkyc7XG5cbmNvbnN0IGRlc2VsZWN0RGF0ZVJhbmdlID0gZnVuY3Rpb24gZGVzZWxlY3REYXRlUmFuZ2UoJGRhdGVSYW5nZTogSlF1ZXJ5KTogdm9pZCB7XG4gICAgJGRhdGVSYW5nZS5yZW1vdmVDbGFzcyhDTEFTU0VTLlJBTkdFX1NFTEVDVCk7XG4gICAgJGRhdGVSYW5nZVxuICAgICAgICAuZmluZChgLiR7Q0xBU1NFUy5EUk9QRE9XTl9IRUFEfWApXG4gICAgICAgIC5kcm9wZG93bkhlYWQoJ3NlbGVjdC1kYXRlJywgZmFsc2UpO1xufTtcblxuY29uc3QgY2FsZW5kYXJBcHBseUhhbmRsZXIgPSBmdW5jdGlvbihlOiBKUXVlcnkuRXZlbnRCYXNlLCBzdGFydDogRGF0ZSwgZW5kOiBEYXRlKTogdm9pZCB7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgY29uc3QgJGRhdGVSYW5nZSA9ICQoZS5kZWxlZ2F0ZVRhcmdldCk7XG5cbiAgICBpZiAoc3RhcnQgIT09IG51bGwpIHtcbiAgICAgICAgJGRhdGVSYW5nZVxuICAgICAgICAgICAgLmZpbmQoYC4ke0NMQVNTRVMuRFJPUERPV05fSEVBRF9MRUZUfWApXG4gICAgICAgICAgICAuZHJvcGRvd25IZWFkKCd2YWx1ZScsIGRhdGVUb1N0cmluZyhzdGFydCkpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgICRkYXRlUmFuZ2VcbiAgICAgICAgICAgIC5maW5kKGAuJHtDTEFTU0VTLkRST1BET1dOX0hFQURfTEVGVH1gKVxuICAgICAgICAgICAgLmRyb3Bkb3duSGVhZCgndmFsdWUnLCBERUZBVUxUX0RBVEVfVEVYVCk7XG4gICAgfVxuXG4gICAgaWYgKGVuZCAhPT0gbnVsbCkge1xuICAgICAgICAkZGF0ZVJhbmdlXG4gICAgICAgICAgICAuZmluZChgLiR7Q0xBU1NFUy5EUk9QRE9XTl9IRUFEX1JJR0hUfWApXG4gICAgICAgICAgICAuZHJvcGRvd25IZWFkKCd2YWx1ZScsIGRhdGVUb1N0cmluZyhlbmQpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAkZGF0ZVJhbmdlXG4gICAgICAgICAgICAuZmluZChgLiR7Q0xBU1NFUy5EUk9QRE9XTl9IRUFEX1JJR0hUfWApXG4gICAgICAgICAgICAuZHJvcGRvd25IZWFkKCd2YWx1ZScsIERFRkFVTFRfREFURV9URVhUKTtcbiAgICB9XG5cbiAgICBkZXNlbGVjdERhdGVSYW5nZSgkZGF0ZVJhbmdlKTtcbn07XG5cbmNvbnN0IGNhbGVuZGFyQ2xlYXJIYW5kbGVyID0gZnVuY3Rpb24gY2FsZW5kYXJDbGVhckhhbmRsZXIoZTogSlF1ZXJ5LkV2ZW50QmFzZSk6IHZvaWQge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0ICRkYXRlUmFuZ2UgPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgICRkYXRlUmFuZ2VcbiAgICAgICAgLmZpbmQoYC4ke0NMQVNTRVMuRFJPUERPV05fSEVBRH1gKVxuICAgICAgICAuZHJvcGRvd25IZWFkKCd2YWx1ZScsIERFRkFVTFRfREFURV9URVhUKTtcblxuICAgIGRlc2VsZWN0RGF0ZVJhbmdlKCRkYXRlUmFuZ2UpO1xufTtcblxuJChgLiR7Q0xBU1NFUy5EQVRFX1JBTkdFfWApXG4gICAgLm9uKCdhcHBseScsIGNhbGVuZGFyQXBwbHlIYW5kbGVyKVxuICAgIC5vbignY2xlYXInLCBjYWxlbmRhckNsZWFySGFuZGxlcik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCAnLi9wbHVnaW4vcGx1Z2luJztcblxuY29uc3QgQ0xBU1NFUyA9IHtcbiAgICBCVE5fTUlOVVM6ICdqcy1kcm9wZG93bi1jb3VudGVyX19idG4tbWludXMnLFxuICAgIEJUTl9QTFVTOiAnanMtZHJvcGRvd24tY291bnRlcl9fYnRuLXBsdXMnLFxuICAgIERJU1BMQVk6ICdqcy1kcm9wZG93bi1jb3VudGVyX192YWx1ZScsXG59O1xuXG4kKCcuanMtZHJvcGRvd24tY291bnRlcicpLm9uKFxuICAgICdjbGljay5kcm9wZG93bi1jb3VudGVyLmNoYW5nZS12YWx1ZScsXG4gICAgYC4ke0NMQVNTRVMuQlROX01JTlVTfSwgLiR7Q0xBU1NFUy5CVE5fUExVU31gLFxuICAgIChlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiBib29sZWFuID0+IHtcbiAgICAgICAgY29uc3QgJGNvdW50ZXIgPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgICAgICBjb25zdCAkYnRuID0gJChlLnRhcmdldCk7XG4gICAgICAgIGNvbnN0ICRkaXNwbGF5ID0gJGNvdW50ZXIuZmluZChgLiR7Q0xBU1NFUy5ESVNQTEFZfWApO1xuICAgICAgICBsZXQgY291bnQgPSAwO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb3VudCA9IHBhcnNlSW50KCRkaXNwbGF5LnRleHQoKSwgMTApO1xuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoJGJ0bi5oYXNDbGFzcyhDTEFTU0VTLkJUTl9NSU5VUykpIHtcbiAgICAgICAgICAgIGNvdW50IC09IDE7XG5cbiAgICAgICAgICAgIGlmIChjb3VudCA8IDApIHtcbiAgICAgICAgICAgICAgICBjb3VudCA9IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmIChjb3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICRidG4uYnV0dG9uKCdkaXNhYmxlJywgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb3VudCArPSAxO1xuXG4gICAgICAgICAgICBpZiAoY291bnQgPT09IDEpIHtcbiAgICAgICAgICAgICAgICAkY291bnRlci5maW5kKGAuJHtDTEFTU0VTLkJUTl9NSU5VU31gKS5idXR0b24oJ2Rpc2FibGUnLCBmYWxzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAkZGlzcGxheS50ZXh0KFN0cmluZyhjb3VudCkpO1xuXG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5pbXBvcnQgeyBnZXRDb3VudGVyVmFsdWVzIH0gZnJvbSAnLi92aWV3L3ZpZXcnO1xuaW1wb3J0IHsgZ3JvdXBpbmdFbGVtZW50VmFsdWVzIH0gZnJvbSAnLi9saWInO1xuaW1wb3J0ICcuL2Ryb3Bkb3duLWd1ZXN0X19idG4tYXBwbHknO1xuaW1wb3J0ICcuL2Ryb3Bkb3duLWd1ZXN0X19idG4tY2xlYXInO1xuXG5jb25zdCBkcm9wZG93bkNoYW5nZUd1ZXN0SGFuZGxlciA9IGZ1bmN0aW9uIGRyb3Bkb3duVXBkYXRlSGFuZGxlcihcbiAgICBlOiBKUXVlcnkuTW91c2VFdmVudEJhc2Vcbik6IHZvaWQge1xuICAgIGNvbnN0ICRkcm9wZG93biA9ICQoZS5kZWxlZ2F0ZVRhcmdldCk7XG5cbiAgICBjb25zdCBjb3VudGVyVmFsdWVzID0gZ2V0Q291bnRlclZhbHVlcygkZHJvcGRvd24pO1xuICAgIGNvbnN0IHsgYWxsR3Vlc3RzIH0gPSBncm91cGluZ0VsZW1lbnRWYWx1ZXMoY291bnRlclZhbHVlcyk7XG5cbiAgICBjb25zdCBpc05lZWRIaWRkZW4gPSBhbGxHdWVzdHMgPT09IDA7XG5cbiAgICAkZHJvcGRvd24uZmluZChgLiR7Q0xBU1NFUy5CVE5fQ0xFQVJ9YCkuYnV0dG9uKCdoaWRkZW4nLCBpc05lZWRIaWRkZW4pO1xufTtcblxuJChgLiR7Q0xBU1NFUy5EUk9QRE9XTn1gKS5vbihcbiAgICAnY2xpY2suZHJvcGRvd24tZ3Vlc3QuY2hlY2stY291bnRlcnMnLFxuICAgIGAuJHtDTEFTU0VTLkJUTl9QTFVTfSwgLiR7Q0xBU1NFUy5CVE5fTUlOVVN9YCxcbiAgICBkcm9wZG93bkNoYW5nZUd1ZXN0SGFuZGxlclxuKTtcbiIsImltcG9ydCAnLi9wbHVnaW4vcGx1Z2luJztcbiIsImltcG9ydCAqIGFzICQgZnJvbSAnanF1ZXJ5JztcblxuaW1wb3J0IENBU0VfVEFCTEVTIGZyb20gJy4vY2FzZS10YWJsZXMnO1xuXG5jb25zdCBDTEFTU0VTID0ge1xuICAgIERST1BET1dOOiAnanMtZHJvcGRvd24tcm9vbS1hbWVuaXRpZXMnLFxuICAgIEJUTl9QTFVTOiAnanMtZHJvcGRvd24tY291bnRlcl9fYnRuLXBsdXMnLFxuICAgIEJUTl9NSU5VUzogJ2pzLWRyb3Bkb3duLWNvdW50ZXJfX2J0bi1taW51cycsXG4gICAgSEVBRDogJ2pzLWRyb3Bkb3duLWhlYWQnLFxufTtcblxuY29uc3QgREVGQVVMVF9URVhUID0gJ9Cj0LTQvtCx0YHRgtCy0LAg0L3QvtC80LXRgNCwJztcblxuY29uc3QgZ2V0Q2FzZU51bWJlciA9IGZ1bmN0aW9uIGNhbGNJbmRleEdyYWR1YXRpb24oaW5kZXg6IG51bWJlcik6IG51bWJlciB7XG4gICAgY29uc3Qgb3N0MTAgPSBpbmRleCAlIDEwO1xuICAgIGNvbnN0IG9zdDEwMCA9IGluZGV4ICUgMTAwO1xuICAgIGxldCBncmFkID0gMDtcblxuICAgIGlmIChvc3QxMCA9PT0gMSAmJiAob3N0MTAwID4gMjAgfHwgaW5kZXggPT09IDEpKSB7XG4gICAgICAgIGdyYWQgPSAwO1xuICAgIH1cblxuICAgIGlmIChvc3QxMCA+PSAyICYmIG9zdDEwIDw9IDQpIHtcbiAgICAgICAgZ3JhZCA9IDE7XG4gICAgfVxuXG4gICAgaWYgKG9zdDEwID49IDUgJiYgb3N0MTAgPD0gOSB8fCBvc3QxMCA9PT0gMCB8fCAob3N0MTAwID49IDExICYmIG9zdDEwMCA8PSAyMCkpIHtcbiAgICAgICAgZ3JhZCA9IDI7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdyYWQ7XG59O1xuXG5jb25zdCBjcmVhdGVOZXdIZWFkVGV4dCA9IGZ1bmN0aW9uIGNyZWF0ZU5ld0hlYWRUZXh0KHZhbHVlczogQ291bnRlclZhbHVlW10pOiBzdHJpbmcge1xuICAgIGNvbnN0IGhlYWRUZXh0OiBzdHJpbmdbXSA9IFtdO1xuXG4gICAgdmFsdWVzLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgaXRlbS52YWx1ZSA+IDAgJiZcbiAgICAgICAgICAgIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuYXBwbHkoQ0FTRV9UQUJMRVMsIFtpdGVtLnRleHRdKVxuICAgICAgICApIHtcbiAgICAgICAgICAgIGNvbnN0IHBocmFzZUxpc3Q6IHN0cmluZ1tdID0gQ0FTRV9UQUJMRVNbaXRlbS50ZXh0XTtcblxuICAgICAgICAgICAgY29uc3QgZW5kaW5nSW5kZXggPSBnZXRDYXNlTnVtYmVyKGl0ZW0udmFsdWUpO1xuICAgICAgICAgICAgaGVhZFRleHQucHVzaChgJHtpdGVtLnZhbHVlfSAke3BocmFzZUxpc3RbZW5kaW5nSW5kZXhdfWApO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gaGVhZFRleHQuam9pbignLCAnKTtcbn07XG5cbmNvbnN0IGNyb3BUZXh0VG9EZXNpcmVkTGVuZ3RoID0gZnVuY3Rpb24gY3JvcFRleHRUb0Rlc2lyZWRMZW5ndGgoXG4gICAgdGV4dDogc3RyaW5nLFxuICAgIG1heExlbmd0aDogbnVtYmVyXG4pOiBzdHJpbmcge1xuICAgIGlmICh0ZXh0Lmxlbmd0aCA8PSBtYXhMZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHRleHQ7XG4gICAgfVxuXG4gICAgbGV0IGxlbk5ld1RleHQgPSAwO1xuICAgIGNvbnN0IG5ld1RleHQ6IHN0cmluZ1tdID0gW107XG5cbiAgICB0ZXh0LnNwbGl0KCcsICcpLmZvckVhY2goKHBocmFzZSkgPT4ge1xuICAgICAgICBpZiAobGVuTmV3VGV4dCArIHBocmFzZS5sZW5ndGggPD0gbWF4TGVuZ3RoKSB7XG4gICAgICAgICAgICBuZXdUZXh0LnB1c2gocGhyYXNlKTtcbiAgICAgICAgICAgIGxlbk5ld1RleHQgKz0gcGhyYXNlLmxlbmd0aDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHBocmFzZVNsaWNlID0gcGhyYXNlXG4gICAgICAgICAgICAgICAgLnNwbGl0KCcgJylcbiAgICAgICAgICAgICAgICAuc2xpY2UoMCwgMilcbiAgICAgICAgICAgICAgICAuam9pbignICcpO1xuXG4gICAgICAgICAgICBpZiAobGVuTmV3VGV4dCArIHBocmFzZVNsaWNlLmxlbmd0aCA8PSBtYXhMZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBuZXdUZXh0LnB1c2gocGhyYXNlU2xpY2UpO1xuICAgICAgICAgICAgICAgIGxlbk5ld1RleHQgKz0gcGhyYXNlU2xpY2UubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYCR7bmV3VGV4dC5qb2luKCcsICcpfS4uLmA7XG59O1xuXG5jb25zdCBhZGRDb3VudGVyVmFsdWVzID0gZnVuY3Rpb24gYWRkQ291bnRlclZhbHVlcyh2YWx1ZXM6IENvdW50ZXJWYWx1ZVtdKTogbnVtYmVyIHtcbiAgICBsZXQgc3VtID0gMDtcblxuICAgIHZhbHVlcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgIHN1bSArPSBpdGVtLnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHN1bTtcbn07XG5cbmNvbnN0IGRyb3Bkb3duQ291bnRlclVwZGF0ZUhhbmRsZXIgPSBmdW5jdGlvbiBoYW5kbGVyKGU6IEpRdWVyeS5Nb3VzZUV2ZW50QmFzZSk6IHZvaWQge1xuICAgIGNvbnN0ICRkcm9wZG93biA9ICQoZS5kZWxlZ2F0ZVRhcmdldCk7XG4gICAgY29uc3QgJGRyb3Bkb3duSGVhZCA9ICRkcm9wZG93bi5maW5kKGAuJHtDTEFTU0VTLkhFQUR9YCk7XG5cbiAgICBjb25zdCB2YWx1ZXMgPSAkZHJvcGRvd24uZHJvcGRvd24oJ2NvdW50ZXJzJykgYXMgQ291bnRlclZhbHVlW107XG4gICAgY29uc3Qgc3VtVmFsdWVzID0gYWRkQ291bnRlclZhbHVlcyh2YWx1ZXMpO1xuXG4gICAgaWYgKHN1bVZhbHVlcyA9PT0gMCkge1xuICAgICAgICAkZHJvcGRvd25IZWFkLmRyb3Bkb3duSGVhZCgndmFsdWUnLCBERUZBVUxUX1RFWFQpO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnN0IG5ld1RleHQgPSBjcmVhdGVOZXdIZWFkVGV4dCh2YWx1ZXMpO1xuICAgICAgICBjb25zdCB0ZXh0U2xpY2UgPSBjcm9wVGV4dFRvRGVzaXJlZExlbmd0aChuZXdUZXh0LCAyMik7XG4gICAgICAgICRkcm9wZG93bkhlYWQuZHJvcGRvd25IZWFkKCd2YWx1ZScsIHRleHRTbGljZSk7XG4gICAgfVxufTtcblxuJChgLiR7Q0xBU1NFUy5EUk9QRE9XTn1gKS5vbihcbiAgICAnY2xpY2sucm9vbS1hbWVuaXRpZXMuaGFuZGxlcicsXG4gICAgYC4ke0NMQVNTRVMuQlROX01JTlVTfSwgLiR7Q0xBU1NFUy5CVE5fUExVU31gLFxuICAgIGRyb3Bkb3duQ291bnRlclVwZGF0ZUhhbmRsZXJcbik7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCAnLi9wbHVnaW4vcGx1Z2luJztcblxuJCgnLmRyb3Bkb3duJykub24oJ2NsaWNrLmRyb3Bkb3duLmV4cGFuZCcsICcuZHJvcGRvd24taGVhZCcsIChlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpID0+IHtcbiAgICBjb25zdCAkZHJvcGRvd24gPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgIGNvbnN0IGlzRXhwYW5kZWQgPSAkZHJvcGRvd24uZHJvcGRvd24oJ2V4cGFuZCcpIGFzIGJvb2xlYW47XG5cbiAgICAkZHJvcGRvd24uZHJvcGRvd24oJ2V4cGFuZCcsICFpc0V4cGFuZGVkKTtcbn0pO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5jb25zdCBDTEFTU0VTID0ge1xuICAgIENIRUNLQk9YX0xJU1Q6ICdqcy1leHBhbmRhYmxlLWNoZWNrYm94LWxpc3QnLFxuICAgIEVYUEFORF9JQ09OOiAnanMtZXhwYW5kYWJsZS1jaGVja2JveC1saXN0X19pY29uJyxcbiAgICBFWFBBTkRFRDogJ2V4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9leHBhbmRlZCcsXG59O1xuXG5jb25zdCBjaGVja2JveExpc3RDbGlja0hhbmRsZXIgPSBmdW5jdGlvbiBjaGVja2JveExpc3RDbGlja0hhbmRsZXIoZTogSlF1ZXJ5Lk1vdXNlRXZlbnRCYXNlKTogdm9pZCB7XG4gICAgY29uc3QgY2hlY2tib3hMaXN0ID0gJChlLmRlbGVnYXRlVGFyZ2V0KTtcbiAgICBjaGVja2JveExpc3QudG9nZ2xlQ2xhc3MoQ0xBU1NFUy5FWFBBTkRFRCk7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkNIRUNLQk9YX0xJU1R9YCkub24oXG4gICAgJ2NsaWNrLmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdC5leHBhbmQnLFxuICAgIGAuJHtDTEFTU0VTLkVYUEFORF9JQ09OfWAsXG4gICAgY2hlY2tib3hMaXN0Q2xpY2tIYW5kbGVyXG4pO1xuIiwiaW1wb3J0ICogYXMgJCBmcm9tICdqcXVlcnknO1xuXG5jb25zdCBDTEFTU0VTID0ge1xuICAgIE1PQklMRV9CVE46ICdqcy1oZWFkZXJfX21lbnUtbW9iaWxlLWJ0bicsXG4gICAgSEVBREVSOiAnanMtaGVhZGVyJyxcbiAgICBFWFBBTkRFRF9NRU5VOiAnaGVhZGVyX2V4dGVuZGVkJyxcbn07XG5cbmNvbnN0IG1vYmlsZUJ0bkNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uIG1vYmlsZUJ0bkNsaWNrSGFuZGxlcihlOiBKUXVlcnkuTW91c2VFdmVudEJhc2UpOiB2b2lkIHtcbiAgICAkKGUuZGVsZWdhdGVUYXJnZXQpLnRvZ2dsZUNsYXNzKENMQVNTRVMuRVhQQU5ERURfTUVOVSk7XG59O1xuXG4kKGAuJHtDTEFTU0VTLkhFQURFUn1gKS5vbihcbiAgICAnY2xpY2suaGVhZGVyLmV4cGFuZC1tZW51JyxcbiAgICBgLiR7Q0xBU1NFUy5NT0JJTEVfQlROfWAsXG4gICAgbW9iaWxlQnRuQ2xpY2tIYW5kbGVyXG4pO1xuIiwiaW1wb3J0ICcuL2ltYWdlLXNsaWRlcl9fbmF2LWJ1dHRvbic7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCAnLi9wbHVnaW4vcGx1Z2luJztcbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5cbmNvbnN0IGxpa2VCdXR0b25DbGlja0hhbmRsZXIgPSBmdW5jdGlvbiBsaWtlQnV0dG9uQ2xpY2tIYW5kbGVyKGU6IEpRdWVyeS5Nb3VzZUV2ZW50QmFzZSk6IHZvaWQge1xuICAgIGNvbnN0ICRidG4gPSAkKGUuZGVsZWdhdGVUYXJnZXQpO1xuICAgIGNvbnN0IGNoZWNrZWQgPSAkYnRuLmxpa2VCdXR0b24oJ2NoZWNrZWQnKTtcbiAgICBsZXQgbGlrZXMgPSAkYnRuLmxpa2VCdXR0b24oJ2xpa2VzJykgYXMgbnVtYmVyO1xuXG4gICAgbGlrZXMgPSBjaGVja2VkID8gbGlrZXMgLT0gMSA6IGxpa2VzICs9IDE7XG5cbiAgICBpZiAobGlrZXMgPCAwKSB7XG4gICAgICAgIGxpa2VzID0gMDtcbiAgICB9XG5cbiAgICAkYnRuLmxpa2VCdXR0b24oJ2xpa2VzJywgbGlrZXMpO1xuICAgICRidG4ubGlrZUJ1dHRvbignY2hlY2tlZCcsICFjaGVja2VkKTtcbn07XG5cbiQoYC4ke0NMQVNTRVMuTElLRV9CVE59YCkub24oJ2NsaWNrLmxpa2UtYnV0dG9uLmNoZWNrZWQnLCBsaWtlQnV0dG9uQ2xpY2tIYW5kbGVyKTtcbiIsImltcG9ydCAnLi9tZW51LWl0ZW0tZXhwYW5kYWJsZV9fYnRuLWV4cGFuZCc7XG4iLCJpbXBvcnQgKiBhcyAkIGZyb20gJ2pxdWVyeSc7XG5cbmltcG9ydCBNb2RlbCBmcm9tICcuL21vZGVsL21vZGVsJztcbmltcG9ydCBWaWV3IGZyb20gJy4vdmlldy92aWV3JztcbmltcG9ydCBDTEFTU0VTIGZyb20gJy4vY2xhc3Nlcyc7XG5cbiQoYC4ke0NMQVNTRVMuU0xJREVSfWApLmVhY2goZnVuY3Rpb24oKSB7XG4gICAgJCgoKSA9PiB7XG4gICAgICAgIGNvbnN0ICRzbGlkZXIgPSAkKHRoaXMpO1xuICAgICAgICBjb25zdCByYW5nZSA9IFtcbiAgICAgICAgICAgIHBhcnNlSW50KCRzbGlkZXIuYXR0cignZGF0YS1yYW5nZS1taW4nKSB8fCAnMCcsIDEwKSxcbiAgICAgICAgICAgIHBhcnNlSW50KCRzbGlkZXIuYXR0cignZGF0YS1yYW5nZS1tYXgnKSB8fCAnMTAwMCcsIDEwKSxcbiAgICAgICAgXSBhcyBbbnVtYmVyLCBudW1iZXJdO1xuICAgICAgICBjb25zdCBzdGVwID0gcGFyc2VJbnQoJHNsaWRlci5hdHRyKCdkYXRhLXN0ZXAnKSB8fCAnMScsIDEwKTtcblxuICAgICAgICBuZXcgVmlldyhcbiAgICAgICAgICAgICRzbGlkZXIsXG4gICAgICAgICAgICBuZXcgTW9kZWwoe1xuICAgICAgICAgICAgICAgIHJhbmdlLFxuICAgICAgICAgICAgICAgIHN0ZXAsXG4gICAgICAgICAgICB9KVxuICAgICAgICApO1xuICAgIH0pO1xufSk7XG4iLCJ2YXIgbWFwID0ge1xuXHRcIi4vYmxvY2staGVhZC9ibG9jay1oZWFkLnNjc3NcIjogOTgsXG5cdFwiLi9idWxsZXQtbGlzdC1pdGVtL2J1bGxldC1saXN0LWl0ZW0uc2Nzc1wiOiAxMDAsXG5cdFwiLi9idWxsZXQtbGlzdC9idWxsZXQtbGlzdC5zY3NzXCI6IDEwMixcblx0XCIuL2J1dHRvbi9idXR0b24uc2Nzc1wiOiAxMDQsXG5cdFwiLi9idXR0b25zLWRlbW8vYnV0dG9ucy1kZW1vLnNjc3NcIjogMTA2LFxuXHRcIi4vY2FsZW5kYXIvY2FsZW5kYXIuc2Nzc1wiOiAxMDgsXG5cdFwiLi9jYXJkLWFjY291bnQtcmVnaXN0cmF0aW9uL2NhcmQtYWNjb3VudC1yZWdpc3RyYXRpb24uc2Nzc1wiOiAxMTAsXG5cdFwiLi9jYXJkLWF1dGhlbnRpY2F0aW9uL2NhcmQtYXV0aGVudGljYXRpb24uc2Nzc1wiOiAxMTIsXG5cdFwiLi9jYXJkLWJvb2stcm9vbS9jYXJkLWJvb2stcm9vbS5zY3NzXCI6IDExNCxcblx0XCIuL2NhcmQtY29udGFpbmVyL2NhcmQtY29udGFpbmVyLnNjc3NcIjogMTE2LFxuXHRcIi4vY2FyZC1yb29tLWluZm9ybWF0aW9uL2NhcmQtcm9vbS1pbmZvcm1hdGlvbi5zY3NzXCI6IDExOCxcblx0XCIuL2NhcmQtc2VsZWN0aW9uLXJvb20vY2FyZC1zZWxlY3Rpb24tcm9vbS5zY3NzXCI6IDEyMCxcblx0XCIuL2NhcmRzL2NhcmRzLnNjc3NcIjogMTIyLFxuXHRcIi4vY2hlY2tib3gtYnV0dG9uL2NoZWNrYm94LWJ1dHRvbi5zY3NzXCI6IDEyNCxcblx0XCIuL2NoZWNrYm94LWxpc3QvY2hlY2tib3gtbGlzdC5zY3NzXCI6IDEyNixcblx0XCIuL2NvbG9yLWRlbW8taXRlbS9jb2xvci1kZW1vLWl0ZW0uc2Nzc1wiOiAxMjgsXG5cdFwiLi9jb2xvcnMtYW5kLXR5cGUvY29sb3JzLWFuZC10eXBlLnNjc3NcIjogMTMwLFxuXHRcIi4vY29sb3JzLWRlbW8vY29sb3JzLWRlbW8uc2Nzc1wiOiAxMzIsXG5cdFwiLi9jb21tZW50L2NvbW1lbnQuc2Nzc1wiOiAxMzQsXG5cdFwiLi9jb21tZW50cy9jb21tZW50cy5zY3NzXCI6IDEzNixcblx0XCIuL2NvbnRhaW5lci1jb250ZW50L2NvbnRhaW5lci1jb250ZW50LnNjc3NcIjogMTM4LFxuXHRcIi4vY29weXJpZ2h0LWJhci9jb3B5cmlnaHQtYmFyLnNjc3NcIjogMTQwLFxuXHRcIi4vZGF0ZS1yYW5nZS9kYXRlLXJhbmdlLnNjc3NcIjogMTQyLFxuXHRcIi4vZGF0ZS1yYW5nZS9kYXRlLXJhbmdlX19kcm9wZG93bi5zY3NzXCI6IDE0NCxcblx0XCIuL2Ryb3Bkb3duLWNvdW50ZXIvZHJvcGRvd24tY291bnRlci5zY3NzXCI6IDE0Nixcblx0XCIuL2Ryb3Bkb3duLWZpbHRlci1kYXRlL2Ryb3Bkb3duLWZpbHRlci1kYXRlLnNjc3NcIjogMTQ4LFxuXHRcIi4vZHJvcGRvd24tZ3Vlc3QvZHJvcGRvd24tZ3Vlc3Quc2Nzc1wiOiAxNTAsXG5cdFwiLi9kcm9wZG93bi1oZWFkL2Ryb3Bkb3duLWhlYWQuc2Nzc1wiOiAxNTIsXG5cdFwiLi9kcm9wZG93bi1yb29tLWFtZW5pdGllcy9kcm9wZG93bi1yb29tLWFtZW5pdGllcy5zY3NzXCI6IDE1NCxcblx0XCIuL2Ryb3Bkb3duL2Ryb3Bkb3duLnNjc3NcIjogMTU2LFxuXHRcIi4vZXhwYW5kYWJsZS1jaGVja2JveC1saXN0L2V4cGFuZGFibGUtY2hlY2tib3gtbGlzdC5zY3NzXCI6IDE1OCxcblx0XCIuL2Zvb3Rlci1jcmVhdGl2ZS9mb290ZXItY3JlYXRpdmUuc2Nzc1wiOiAxNjAsXG5cdFwiLi9mb290ZXItbmF2L2Zvb3Rlci1uYXYuc2Nzc1wiOiAxNjIsXG5cdFwiLi9mb290ZXIvZm9vdGVyLnNjc3NcIjogMTY0LFxuXHRcIi4vZm9ybS1lbGVtZW50cy9mb3JtLWVsZW1lbnRzLnNjc3NcIjogMTY2LFxuXHRcIi4vaGVhZGVyLWZvb3Rlci9oZWFkZXItZm9vdGVyLnNjc3NcIjogMTY4LFxuXHRcIi4vaGVhZGVyL2hlYWRlci5zY3NzXCI6IDE3MCxcblx0XCIuL2hvdGVsLXJvb21zL2hvdGVsLXJvb21zLnNjc3NcIjogMTcyLFxuXHRcIi4vaHRtbC1ib2R5L2h0bWwtYm9keS5zY3NzXCI6IDE3NCxcblx0XCIuL2ltYWdlLXNsaWRlci9pbWFnZS1zbGlkZXIuc2Nzc1wiOiAxNzYsXG5cdFwiLi9pbnB1dC1jaGVja2JveC9pbnB1dC1jaGVja2JveC5zY3NzXCI6IDE3OCxcblx0XCIuL2lucHV0LXJhZGlvL2lucHV0LXJhZGlvLnNjc3NcIjogMTgwLFxuXHRcIi4vaW5wdXQtdGV4dC9pbnB1dC10ZXh0LnNjc3NcIjogMTgyLFxuXHRcIi4vaW5wdXQtdG9nZ2xlL2lucHV0LXRvZ2dsZS5zY3NzXCI6IDE4NCxcblx0XCIuL2xpa2UtYnV0dG9uL2xpa2UtYnV0dG9uLnNjc3NcIjogMTg2LFxuXHRcIi4vbGlrZS1idXR0b25zL2xpa2UtYnV0dG9ucy5zY3NzXCI6IDE4OCxcblx0XCIuL2xvZ28vbG9nby5zY3NzXCI6IDE5MCxcblx0XCIuL21lbnUtaXRlbS1leHBhbmRhYmxlL21lbnUtaXRlbS1leHBhbmRhYmxlLnNjc3NcIjogMTkyLFxuXHRcIi4vbWVudS1pdGVtL21lbnUtaXRlbS5zY3NzXCI6IDE5NCxcblx0XCIuL21lbnUvbWVudS5zY3NzXCI6IDE5Nixcblx0XCIuL3BhZ2UtY29udGFpbmVyL3BhZ2UtY29udGFpbmVyLnNjc3NcIjogMTk4LFxuXHRcIi4vcGFnaW5hdGlvbi9wYWdpbmF0aW9uLnNjc3NcIjogMjAwLFxuXHRcIi4vcmFkaW8tYnV0dG9uL3JhZGlvLWJ1dHRvbi5zY3NzXCI6IDIwMixcblx0XCIuL3JhZGlvLWJ1dHRvbnMvcmFkaW8tYnV0dG9ucy5zY3NzXCI6IDIwNCxcblx0XCIuL3JhbmdlLXNsaWRlci9yYW5nZS1zbGlkZXIuc2Nzc1wiOiAyMDYsXG5cdFwiLi9yYXRpbmctYnV0dG9ucy9yYXRpbmctYnV0dG9ucy5zY3NzXCI6IDIwOCxcblx0XCIuL3JhdGluZy9yYXRpbmcuc2Nzc1wiOiAyMTAsXG5cdFwiLi9yZWNlaXB0L3JlY2VpcHQuc2Nzc1wiOiAyMTIsXG5cdFwiLi9yaWNoLWNoZWNrYm94LWJ1dHRvbi9yaWNoLWNoZWNrYm94LWJ1dHRvbi5zY3NzXCI6IDIxNCxcblx0XCIuL3JpY2gtY2hlY2tib3gtYnV0dG9ucy9yaWNoLWNoZWNrYm94LWJ1dHRvbnMuc2Nzc1wiOiAyMTYsXG5cdFwiLi9yb29tLWFkdmFudGFnZS9yb29tLWFkdmFudGFnZS5zY3NzXCI6IDIxOCxcblx0XCIuL3Jvb20tYWR2YW50YWdlcy9yb29tLWFkdmFudGFnZXMuc2Nzc1wiOiAyMjAsXG5cdFwiLi9yb29tLWRldGFpbHMtYmFubmVyL3Jvb20tZGV0YWlscy1iYW5uZXIuc2Nzc1wiOiAyMjIsXG5cdFwiLi9yb29tLWhlYWQvcm9vbS1oZWFkLnNjc3NcIjogMjI0LFxuXHRcIi4vcm9vbS1pbXByZXNzaW9ucy9yb29tLWltcHJlc3Npb25zLnNjc3NcIjogMjI2LFxuXHRcIi4vc2VhcmNoLWZpbHRlcnMvc2VhcmNoLWZpbHRlcnMuc2Nzc1wiOiAyMjgsXG5cdFwiLi90ZXh0LWRlbW8taXRlbS90ZXh0LWRlbW8taXRlbS5zY3NzXCI6IDIzMCxcblx0XCIuL3RleHQtZGVtby90ZXh0LWRlbW8uc2Nzc1wiOiAyMzIsXG5cdFwiLi90ZXh0LWZpZWxkL3RleHQtZmllbGQuc2Nzc1wiOiAyMzQsXG5cdFwiLi90ZXh0L3RleHQuc2Nzc1wiOiAyMzYsXG5cdFwiLi90b2dnbGUtYnV0dG9uL3RvZ2dsZS1idXR0b24uc2Nzc1wiOiAyMzgsXG5cdFwiLi90b2dnbGUtYnV0dG9ucy90b2dnbGUtYnV0dG9ucy5zY3NzXCI6IDI0MFxufTtcblxuXG5mdW5jdGlvbiB3ZWJwYWNrQ29udGV4dChyZXEpIHtcblx0dmFyIGlkID0gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSk7XG5cdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcbn1cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0UmVzb2x2ZShyZXEpIHtcblx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhtYXAsIHJlcSkpIHtcblx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0ZS5jb2RlID0gJ01PRFVMRV9OT1RfRk9VTkQnO1xuXHRcdHRocm93IGU7XG5cdH1cblx0cmV0dXJuIG1hcFtyZXFdO1xufVxud2VicGFja0NvbnRleHQua2V5cyA9IGZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0NvbnRleHQucmVzb2x2ZSA9IHdlYnBhY2tDb250ZXh0UmVzb2x2ZTtcbm1vZHVsZS5leHBvcnRzID0gd2VicGFja0NvbnRleHQ7XG53ZWJwYWNrQ29udGV4dC5pZCA9IDk3OyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Jsb2NrLWhlYWQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9ibG9jay1oZWFkLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Jsb2NrLWhlYWQuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJsb2NrLWhlYWR7d2lkdGg6MTAwJX0uYmxvY2staGVhZDo6YWZ0ZXJ7ZGlzcGxheTpibG9jaztjb250ZW50OicnO2NsZWFyOmJvdGh9LmJsb2NrLWhlYWRfX2hlbHB7ZmxvYXQ6cmlnaHR9LmJsb2NrLWhlYWRfX3RpdGxle2Zsb2F0OmxlZnR9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1bGxldC1saXN0LWl0ZW0uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9idWxsZXQtbGlzdC1pdGVtLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1bGxldC1saXN0LWl0ZW0uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1bGxldC1saXN0LWl0ZW17ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5idWxsZXQtbGlzdC1pdGVtX19tYWtlci1jb250YWluZXJ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtoZWlnaHQ6MS43MTQzcmVtO21hcmdpbi1yaWdodDowLjcxNDNyZW19LmJ1bGxldC1saXN0LWl0ZW1fX21hcmtlcntkaXNwbGF5OmJsb2NrO3dpZHRoOi43MTQzcmVtO2hlaWdodDouNzE0M3JlbTtiYWNrZ3JvdW5kLWNvbG9yOnJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7Ym9yZGVyLXJhZGl1czo1MCV9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1bGxldC1saXN0LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vYnVsbGV0LWxpc3Quc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vYnVsbGV0LWxpc3Quc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1bGxldC1saXN0e3dpZHRoOjEwMCU7bWF4LXdpZHRoOjI3MHB4fS5idWxsZXQtbGlzdDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MC43MTQzcmVtfS5idWxsZXQtbGlzdF9faGVhZHttYXJnaW46MHJlbSAwcmVtIDAuODU3MXJlbSAxLjQyODZyZW19LmJ1bGxldC1saXN0X19oZWFkX2JvdHRvbV9iaWd7bWFyZ2luLWJvdHRvbToxLjIxNDNyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1dHRvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1dHRvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9idXR0b24uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ1dHRvbntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtoZWlnaHQ6MTAwJTttYXgtaGVpZ2h0OjMuMTQyOXJlbTtkaXNwbGF5OmlubGluZS1ibG9jazt0ZXh0LWFsaWduOmNlbnRlcjt2ZXJ0aWNhbC1hbGlnbjp0b3A7Y3Vyc29yOnBvaW50ZXJ9LmJ1dHRvbjphY3RpdmUsLmJ1dHRvbjpob3ZlciwuYnV0dG9uOmZvY3Vze3RleHQtZGVjb3JhdGlvbjpub25lO291dGxpbmU6bm9uZX0uYnV0dG9uOnZpc2l0ZWR7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LmJ1dHRvbjo6YWZ0ZXJ7Y29udGVudDonJztoZWlnaHQ6MTAwJTtkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGV9LmJ1dHRvbl90aGVtZV9kZWZhdWx0LWxvbmd7ZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDozLjE0MjlyZW07Ym9yZGVyLXJhZGl1czoxLjU3MTRyZW07cGFkZGluZzowcmVtIDE5LjdweDtmb250LXNpemU6MC44NTcxcmVtO2xpbmUtaGVpZ2h0OjEuMDcxNHJlbTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2ZvbnQtZmFtaWx5Ok1vbnRzZXJyYXQ7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6Ym9sZDt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2U7Y29sb3I6d2hpdGU7cG9zaXRpb246cmVsYXRpdmV9LmJ1dHRvbl90aGVtZV9kZWZhdWx0LWxvbmc6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmZ9LmJ1dHRvbl90aGVtZV9kZWZhdWx0LWxvbmc6YWN0aXZle2JhY2tncm91bmQ6I2JjOWNmZn0uYnV0dG9uX3RoZW1lX2RlZmF1bHQtbG9uZzpmb2N1c3std2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5idXR0b25fdGhlbWVfZGVmYXVsdHtoZWlnaHQ6My4xNDI5cmVtO2JvcmRlci1yYWRpdXM6MS41NzE0cmVtO3BhZGRpbmc6MHJlbSAxOS43cHg7Zm9udC1zaXplOjAuODU3MXJlbTtsaW5lLWhlaWdodDoxLjA3MTRyZW07YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO2NvbG9yOndoaXRlO3BhZGRpbmctdG9wOjAuMTQyOXJlbX0uYnV0dG9uX3RoZW1lX2RlZmF1bHQ6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmZ9LmJ1dHRvbl90aGVtZV9kZWZhdWx0OmFjdGl2ZXtiYWNrZ3JvdW5kOiNiYzljZmZ9LmJ1dHRvbl90aGVtZV9kZWZhdWx0OmZvY3Vzey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDEwcHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSk7Ym94LXNoYWRvdzowcHggMHB4IDEwcHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9LmJ1dHRvbl90aGVtZV9pY29ue3dpZHRoOjMuMTQyOXJlbTtoZWlnaHQ6My4xNDI5cmVtO2ZvbnQtZmFtaWx5Ok1hdGVyaWFsIEljb25zO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MS43MTQzcmVtO2xpbmUtaGVpZ2h0OjEuNzE0M3JlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5idXR0b25fdGhlbWVfbGlnaHR7aGVpZ2h0OjMuMTQyOXJlbTtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjAuODU3MXJlbTtsaW5lLWhlaWdodDoxLjA3MTRyZW07Ym9yZGVyLXJhZGl1czoxLjU3MTRyZW07Ym9yZGVyOjAuMTQyOXJlbSBzb2xpZCAjYmM5Y2ZmO2NvbG9yOiNiYzljZmY7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO3BhZGRpbmc6MHJlbSAxLjE3ODZyZW19LmJ1dHRvbl90aGVtZV9saWdodDpob3Zlcnstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmY7Ym94LXNoYWRvdzowcHggMHB4IDEwcHggI2JjOWNmZn0uYnV0dG9uX3RoZW1lX2xpZ2h0OmFjdGl2ZXstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5idXR0b25fdGhlbWVfbGlnaHQ6Zm9jdXN7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKTtib3gtc2hhZG93OjBweCAwcHggMTBweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKX0uYnV0dG9uX3RoZW1lX3JvdW5kLWljb257d2lkdGg6Mi44NTcxcmVtO2hlaWdodDoyLjg1NzFyZW07YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtib3JkZXItcmFkaXVzOjEuNTcxNHJlbTtmb250LWZhbWlseTpNYXRlcmlhbCBJY29ucztmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEuNzE0M3JlbTtsaW5lLWhlaWdodDoxLjQyODZyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtjb2xvcjojZmZmZmZmfS5idXR0b25fdGhlbWVfcm91bmQtbGl0dGxle3dpZHRoOjIuMTQyOXJlbTtoZWlnaHQ6Mi4xNDI5cmVtO2JvcmRlcjowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjI1KTtib3JkZXItcmFkaXVzOjEuNTcxNHJlbTtjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKTtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MS4yODU3cmVtO2xpbmUtaGVpZ2h0OjIuMTQyOXJlbX0uYnV0dG9uX3RoZW1lX3JvdW5ke3dpZHRoOjIuODU3MXJlbTtoZWlnaHQ6Mi44NTcxcmVtO2JvcmRlci1yYWRpdXM6MS41NzE0cmVtO2ZvbnQtZmFtaWx5Ok1vbnRzZXJyYXQ7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZTowLjg1NzFyZW07bGluZS1oZWlnaHQ6MS4wNzE0cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Y29sb3I6I2ZmZmZmZn0uYnV0dG9uX3RoZW1lX3NvY2lhbHt3aWR0aDoxLjcxNDNyZW07aGVpZ2h0OjEuNzE0M3JlbTtmb250LWZhbWlseTonRm9udCBBd2Vzb21lIDUgQnJhbmRzJztmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEuNzE0M3JlbTtsaW5lLWhlaWdodDoxLjY0MjlyZW07YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTstd2Via2l0LWJhY2tncm91bmQtY2xpcDp0ZXh0O2JhY2tncm91bmQtY2xpcDp0ZXh0Oy13ZWJraXQtdGV4dC1maWxsLWNvbG9yOnRyYW5zcGFyZW50O3BhZGRpbmc6MH0uYnV0dG9uX3RoZW1lX3NvY2lhbDpob3ZlcntvcGFjaXR5OjAuODZ9LmJ1dHRvbl90aGVtZV9zb2NpYWw6YWN0aXZle2JhY2tncm91bmQ6I2JjOWNmZjstd2Via2l0LWJhY2tncm91bmQtY2xpcDp0ZXh0O2JhY2tncm91bmQtY2xpcDp0ZXh0Oy13ZWJraXQtdGV4dC1maWxsLWNvbG9yOnRyYW5zcGFyZW50O29wYWNpdHk6MX0uYnV0dG9uX3RoZW1lX3NvY2lhbDpmb2N1c3tiYWNrZ3JvdW5kOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpOy13ZWJraXQtYmFja2dyb3VuZC1jbGlwOnRleHQ7YmFja2dyb3VuZC1jbGlwOnRleHQ7LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6dHJhbnNwYXJlbnQ7b3BhY2l0eToxfS5idXR0b25fdGhlbWVfdGV4dHtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zaXplOjAuODU3MXJlbTtsaW5lLWhlaWdodDoxLjA3MTRyZW07dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlO2NvbG9yOiNiYzljZmZ9LmJ1dHRvbl90aGVtZV90ZXh0OmhvdmVye3RleHQtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmfS5idXR0b25fdGhlbWVfdGV4dDphY3RpdmV7dGV4dC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5idXR0b25fdGhlbWVfdGV4dDpmb2N1c3t0ZXh0LXNoYWRvdzowcHggMHB4IDEwcHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9LmJ1dHRvbl9iYWNrZ3JvdW5kX2dyYWRpZW50LXByaW1hcnl7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKX0uYnV0dG9uX2JhY2tncm91bmRfZ3JhZGllbnQtc3VjY2Vzc3tiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oIzZGQ0Y5NyksIHRvKCM2NkQyRUEpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM2RkNGOTcgMCUsICM2NkQyRUEgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNkZDRjk3IDAlLCAjNjZEMkVBIDEwMCUpfS5idXR0b25fYmFja2dyb3VuZF9ub25le2JhY2tncm91bmQ6bm9uZX0uYnV0dG9uX2hvdmVyLXRoZW1lX2dyYWRpZW50LXByaW1hcnk6aG92ZXJ7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmY7Ym94LXNoYWRvdzowcHggMHB4IDEwcHggI2JjOWNmZjtjb2xvcjojZmZmZmZmO2ZvbnQtd2VpZ2h0OmJvbGR9LmJ1dHRvbl9ob3Zlci10aGVtZV9ncmFkaWVudC1wcmltYXJ5OmFjdGl2ZXtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpOy13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDEwcHggIzZmY2Y5Nztib3gtc2hhZG93OjBweCAwcHggMTBweCAjNmZjZjk3O2NvbG9yOiNmZmZmZmY7Zm9udC13ZWlnaHQ6Ym9sZH0uYnV0dG9uX2hvdmVyLXRoZW1lX2dyYWRpZW50LXN1Y2Nlc3M6aG92ZXJ7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCM2RkNGOTcpLCB0bygjNjZEMkVBKSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjNkZDRjk3IDAlLCAjNjZEMkVBIDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgIzZGQ0Y5NyAwJSwgIzY2RDJFQSAxMDAlKTstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCAxMHB4ICM2ZmNmOTc7Ym94LXNoYWRvdzowcHggMHB4IDEwcHggIzZmY2Y5Nztjb2xvcjojZmZmZmZmO2ZvbnQtd2VpZ2h0OmJvbGR9LmJ1dHRvbl9ob3Zlci10aGVtZV9ncmFkaWVudC1zdWNjZXNzOmFjdGl2ZXtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oIzZGQ0Y5NyksIHRvKCM2NkQyRUEpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM2RkNGOTcgMCUsICM2NkQyRUEgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNkZDRjk3IDAlLCAjNjZEMkVBIDEwMCUpOy13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDEwcHggI2JjOWNmZjtib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmO2NvbG9yOiNmZmZmZmY7Zm9udC13ZWlnaHQ6Ym9sZH0uYnV0dG9uX2Rpc2FibGV7b3BhY2l0eTowLjV9LmJ1dHRvbl9kaXNhYmxlOmFjdGl2ZSwuYnV0dG9uX2Rpc2FibGU6aG92ZXIsLmJ1dHRvbl9kaXNhYmxlOmZvY3Vzey13ZWJraXQtYm94LXNoYWRvdzpub25lO2JveC1zaGFkb3c6bm9uZTt0ZXh0LXNoYWRvdzpub25lfS5idXR0b25fZm9udC13ZWlnaHRfYm9sZHtmb250LXdlaWdodDpib2xkfS5idXR0b25faGlkZGVue2Rpc3BsYXk6bm9uZX0uYnV0dG9uX2hvcml6b250YWwtc2l6ZV9iaWd7cGFkZGluZzowcmVtIDEuNjQyOXJlbX0uYnV0dG9uX3NpemVfc217aGVpZ2h0OjIuNDI4NnJlbTtwYWRkaW5nOjAgMS4zNTcxcmVtfS5idXR0b25fdGV4dC1jb2xvcl90ZXh0LXNlY29uZGFyeXtjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKX0uYnV0dG9uX19pY29ue3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjA7dG9wOjA7d2lkdGg6My4xNDI5cmVtO2hlaWdodDoxMDAlO2ZvbnQtZmFtaWx5Ok1hdGVyaWFsIEljb25zO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MS43MTQzcmVtO2xpbmUtaGVpZ2h0OjEuNzE0M3JlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO3RleHQtYWxpZ246Y2VudGVyO2NvbG9yOiNmZmZmZmY7dGV4dC10cmFuc2Zvcm06bm9uZX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vYnV0dG9ucy1kZW1vLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vYnV0dG9ucy1kZW1vLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2J1dHRvbnMtZGVtby5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuYnV0dG9ucy1kZW1vX19oZWFke21hcmdpbi1ib3R0b206MS4xNDI5cmVtfS5idXR0b25zLWRlbW9fX3Jvd3tkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7bWFyZ2luLWJvdHRvbToyLjE0MjlyZW19LmJ1dHRvbnMtZGVtb19fYnV0dG9ue21hcmdpbi1yaWdodDoxLjQyODZyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhbGVuZGFyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FsZW5kYXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FsZW5kYXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNhbGVuZGFye3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjMyMHB4O3BhZGRpbmc6MS40Mjg2cmVtIDEuNDI4NnJlbTtiYWNrZ3JvdW5kOiNmZmZmZmY7Ym9yZGVyOjAuMDcxNHJlbSBzb2xpZCByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4wNTA5ODA0KTtib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCk7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW19LmNhbGVuZGFyX19idG4tY2hhbmdlLW1vbnRoe3dpZHRoOjEuNzE0M3JlbTtoZWlnaHQ6MS43MTQzcmVtO2ZvbnQtZmFtaWx5Ok1hdGVyaWFsIEljb25zO2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MS43MTQzcmVtO2xpbmUtaGVpZ2h0OjEuNzE0M3JlbTt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjojYmM5Y2ZmO2N1cnNvcjpwb2ludGVyfS5jYWxlbmRhcl9fYnRuLWNoYW5nZS1tb250aDpob3Zlcnt0ZXh0LXNoYWRvdzowcHggMHB4IDJweCAjYmM5Y2ZmfS5jYWxlbmRhcl9fYnRuLWNvbnRyb2x7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uY2FsZW5kYXJfX2RhdGUtbmF2aWdhdGlvbnttYXJnaW4tYm90dG9tOjIuMDcxNHJlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7LXdlYmtpdC1ib3gtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5jYWxlbmRhcl9fZGF5cy1jb250YWluZXJ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlO2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7LXdlYmtpdC1mbGV4LXdyYXA6d3JhcDstbXMtZmxleC13cmFwOndyYXA7ZmxleC13cmFwOndyYXA7bWFyZ2luLWJvdHRvbToxLjQyODZyZW19LmNhbGVuZGFyX19kYXktd2Vla3twYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjE0LjI4NTcxJTtoZWlnaHQ6Mi44NTcxcmVtO2xpbmUtaGVpZ2h0OjIuODU3MXJlbTt0ZXh0LWFsaWduOmNlbnRlcjtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MC44NTcxcmVtO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO2N1cnNvcjpwb2ludGVyfS5jYWxlbmRhcl9fZGF5LXdlZWtfcmFuZ2UtZGF5LWVuZHtwb3NpdGlvbjpyZWxhdGl2ZTt6LWluZGV4OjF9LmNhbGVuZGFyX19kYXktd2Vla19yYW5nZS1kYXktZW5kOjphZnRlcntjb250ZW50OicnO2xlZnQ6MDt0b3A6MDt6LWluZGV4Oi0xO3dpZHRoOjUwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTtkaXNwbGF5OmJsb2NrO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjQkM5Q0ZGKSwgdG8oIzhCQTRGOSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7b3BhY2l0eTowLjI1fS5jYWxlbmRhcl9fZGF5LXdlZWtfcmFuZ2UtZGF5LXN0YXJ0e3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MTtjb2xvcjojZmZmfS5jYWxlbmRhcl9fZGF5LXdlZWtfcmFuZ2UtZGF5LXN0YXJ0OjphZnRlcntjb250ZW50OicnO3JpZ2h0OjA7dG9wOjA7ei1pbmRleDotMTt3aWR0aDo1MCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO29wYWNpdHk6MC4yNX0uY2FsZW5kYXJfX2RheS13ZWVrX3RoZW1lX2Fub3RoZXItbW9udGh7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KX0uY2FsZW5kYXJfX2RheS13ZWVrX3RoZW1lX3JhbmdlLWRheS1taWRkbGV7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoyfS5jYWxlbmRhcl9fZGF5LXdlZWtfdGhlbWVfcmFuZ2UtZGF5LW1pZGRsZTo6YWZ0ZXJ7Y29udGVudDonJztsZWZ0OjA7dG9wOjA7ei1pbmRleDoxO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246YWJzb2x1dGU7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO29wYWNpdHk6MC4yNX0uY2FsZW5kYXJfX2RheS13ZWVrX3RoZW1lX3JhbmdlLWRheXtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JvcmRlci1yYWRpdXM6MS41NzE0cmVtO2NvbG9yOiNmZmY7Zm9udC13ZWlnaHQ6Ym9sZH0uY2FsZW5kYXJfX2RheS13ZWVrX3RoZW1lX3RvZGF5e2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjNmZjZjk3KSwgdG8oIzY2ZDJlYSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzZmY2Y5NyAwJSwgIzY2ZDJlYSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICM2ZmNmOTcgMCUsICM2NmQyZWEgMTAwJSk7Ym9yZGVyLXJhZGl1czo1MCU7Zm9udC13ZWlnaHQ6Ym9sZDtjb2xvcjojZmZmfS5jYWxlbmRhcl9fd2Vla2RheS1uYW1le3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7aGVpZ2h0OjIuODU3MXJlbTt3aWR0aDoxMDAlO21heC13aWR0aDoyLjg1NzFyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn0uY2FsZW5kYXJfX3dlZWtkYXktbmFtZXN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZDstbXMtZmxleC1wYWNrOmRpc3RyaWJ1dGU7anVzdGlmeS1jb250ZW50OnNwYWNlLWFyb3VuZH1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmQtYWNjb3VudC1yZWdpc3RyYXRpb24uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbl9fZGF0ZS1vZi1iaXJ0aHttYXJnaW4tYm90dG9tOjEuNjQyOXJlbX0uY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbl9fZW1haWx7bWFyZ2luLWJvdHRvbTowLjcxNDNyZW19LmNhcmQtYWNjb3VudC1yZWdpc3RyYXRpb25fX2Zvcm17bWFyZ2luLWJvdHRvbToycmVtO3dpZHRoOjEwMCV9LmNhcmQtYWNjb3VudC1yZWdpc3RyYXRpb25fX2hhdmUtYWNjb3VudHt3aWR0aDoxMDAlO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59LmNhcmQtYWNjb3VudC1yZWdpc3RyYXRpb25fX2lucHV0LW5hbWV7bWFyZ2luLWJvdHRvbTowLjcxNDNyZW19LmNhcmQtYWNjb3VudC1yZWdpc3RyYXRpb25fX2lucHV0LXN1cm5hbWV7bWFyZ2luLWJvdHRvbTowLjcxNDNyZW19LmNhcmQtYWNjb3VudC1yZWdpc3RyYXRpb25fX3Bhc3N3b3Jke21hcmdpbi1ib3R0b206MC41cmVtfS5jYXJkLWFjY291bnQtcmVnaXN0cmF0aW9uX19zZWxlY3QtZ2VuZGVye21hcmdpbi1ib3R0b206MS43ODU3cmVtfS5jYXJkLWFjY291bnQtcmVnaXN0cmF0aW9uX19zcGVjaWFsLW9mZmVyc3ttYXJnaW4tYm90dG9tOjEuNzE0M3JlbX0uY2FyZC1hY2NvdW50LXJlZ2lzdHJhdGlvbl9fdGl0bGV7bWFyZ2luLWJvdHRvbToxLjM1NzFyZW07d2lkdGg6MTAwJX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1hdXRoZW50aWNhdGlvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmQtYXV0aGVudGljYXRpb24uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1hdXRoZW50aWNhdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1hdXRoZW50aWNhdGlvbl9faGVhZHt3aWR0aDoxMDAlO21hcmdpbi1ib3R0b206MS4zNTcxcmVtfS5jYXJkLWF1dGhlbnRpY2F0aW9uX19mb3Jte21hcmdpbi1ib3R0b206Mi4xNDI5cmVtO3dpZHRoOjEwMCV9LmNhcmQtYXV0aGVudGljYXRpb25fX2VtYWlse21hcmdpbi1ib3R0b206MC43MTQzcmVtfS5jYXJkLWF1dGhlbnRpY2F0aW9uX19wYXNzd29yZHttYXJnaW4tYm90dG9tOjEuNDI4NnJlbX0uY2FyZC1hdXRoZW50aWNhdGlvbl9fbm8tYWNjb3VudHtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1ib29rLXJvb20uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jYXJkLWJvb2stcm9vbS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jYXJkLWJvb2stcm9vbS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1ib29rLXJvb21fX2hlYWR7bWFyZ2luLWJvdHRvbToxLjQyODZyZW07d2lkdGg6MTAwJX0uY2FyZC1ib29rLXJvb21fX2RhdGUtcmFuZ2V7bWFyZ2luLWJvdHRvbToxLjU3MTRyZW07d2lkdGg6MTAwJX0uY2FyZC1ib29rLXJvb21fX2Ryb3Bkb3duLWd1ZXN0e21hcmdpbi1ib3R0b206MS41NzE0cmVtO3dpZHRoOjEwMCV9LmNhcmQtYm9vay1yb29tX19yZWNlaXB0e21hcmdpbi1ib3R0b206MS4zNTcxcmVtO3dpZHRoOjEwMCV9LmNhcmQtYm9vay1yb29tX19ib29raW5nLWJ1dHRvbnt3aWR0aDoxMDAlfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jYXJkLWNvbnRhaW5lci5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmQtY29udGFpbmVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmQtY29udGFpbmVyLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jYXJkLWNvbnRhaW5lcntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjM4MHB4O21pbi13aWR0aDozODBweDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyO2JhY2tncm91bmQ6I0ZGRkZGRjtib3JkZXI6MC4wNzE0cmVtIHNvbGlkICMwMDAwMDAxZjtib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2hhZG93OjByZW0gMHJlbSAxLjc4NTdyZW0gIzAwMDAwMDMzO2JveC1zaGFkb3c6MHJlbSAwcmVtIDEuNzg1N3JlbSAjMDAwMDAwMzM7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW07cGFkZGluZzoyLjg1NzFyZW0gMi4xNDI5cmVtIDIuMTQyOXJlbSAyLjA3MTRyZW19QG1lZGlhIChtYXgtd2lkdGg6IDQwMHB4KXsuY2FyZC1jb250YWluZXJ7cGFkZGluZzoyLjE0MjlyZW0gMC43MTQzcmVtO21heC13aWR0aDoxMDAlO21pbi13aWR0aDphdXRvfX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1yb29tLWluZm9ybWF0aW9uLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1yb29tLWluZm9ybWF0aW9uLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmQtcm9vbS1pbmZvcm1hdGlvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2FyZC1yb29tLWluZm9ybWF0aW9ue3dpZHRoOjI3MHB4O2JhY2tncm91bmQ6I2ZmZjstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4wNTA5ODA0KTtib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCk7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW19LmNhcmQtcm9vbS1pbmZvcm1hdGlvbl9faW1hZ2Utc2xpZGVye2hlaWdodDoxNTFweDtib3JkZXItcmFkaXVzOjAuMjg1N3JlbSAwLjI4NTdyZW0gMHJlbSAwcmVtfS5jYXJkLXJvb20taW5mb3JtYXRpb25fX2JvZHl7cGFkZGluZzoxLjQyODZyZW0gMS4yMTQzcmVtIDEuNDI4NnJlbSAxLjQyODZyZW19LmNhcmQtcm9vbS1pbmZvcm1hdGlvbl9faGVhZHtwYWRkaW5nLWJvdHRvbTowLjVyZW07Ym9yZGVyLWJvdHRvbTowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjEwMTk2MSl9LmNhcmQtcm9vbS1pbmZvcm1hdGlvbl9fcmF0aW5nLWNvbW1lbnRze3BhZGRpbmc6MC41NzE0cmVtIDAuMjE0M3JlbSAwcmVtIDByZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpiYXNlbGluZTstd2Via2l0LWFsaWduLWl0ZW1zOmJhc2VsaW5lOy1tcy1mbGV4LWFsaWduOmJhc2VsaW5lO2FsaWduLWl0ZW1zOmJhc2VsaW5lfS5jYXJkLXJvb20taW5mb3JtYXRpb25fX2NvbW1lbnRze3RleHQtZGVjb3JhdGlvbjpub25lO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpiYXNlbGluZTstd2Via2l0LWFsaWduLWl0ZW1zOmJhc2VsaW5lOy1tcy1mbGV4LWFsaWduOmJhc2VsaW5lO2FsaWduLWl0ZW1zOmJhc2VsaW5lfS5jYXJkLXJvb20taW5mb3JtYXRpb25fX2NvbW1lbnRzOmFjdGl2ZSwuY2FyZC1yb29tLWluZm9ybWF0aW9uX19jb21tZW50czpob3ZlciwuY2FyZC1yb29tLWluZm9ybWF0aW9uX19jb21tZW50czpmb2N1c3t0ZXh0LWRlY29yYXRpb246bm9uZTtvdXRsaW5lOm5vbmV9LmNhcmQtcm9vbS1pbmZvcm1hdGlvbl9fY29tbWVudHM6dmlzaXRlZHt0ZXh0LWRlY29yYXRpb246bm9uZX0uY2FyZC1yb29tLWluZm9ybWF0aW9uX19jb21tZW50czpob3ZlciwuY2FyZC1yb29tLWluZm9ybWF0aW9uX19jb21tZW50czphY3RpdmV7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7dGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jYXJkLXNlbGVjdGlvbi1yb29tLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZC1zZWxlY3Rpb24tcm9vbS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jYXJkLXNlbGVjdGlvbi1yb29tLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jYXJkLXNlbGVjdGlvbi1yb29tX190aXRsZXttYXJnaW4tYm90dG9tOjEuNXJlbX0uY2FyZC1zZWxlY3Rpb24tcm9vbV9fZGF0ZS1yYW5nZXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO21hcmdpbi1ib3R0b206MS42NDI5cmVtO3dpZHRoOjEwMCV9LmNhcmQtc2VsZWN0aW9uLXJvb21fX2Ryb3Bkb3duLWd1ZXN0e21hcmdpbi1ib3R0b206Mi4yODU3cmVtO3dpZHRoOjEwMCV9LmNhcmQtc2VsZWN0aW9uLXJvb21fX2J1dHRvbi1maW5ke3dpZHRoOjEwMCV9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NhcmRzLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZHMuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2FyZHMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNhcmRze3BhZGRpbmctdG9wOjE1MHB4O2JhY2tncm91bmQtY29sb3I6I2U1ZTVlNX0uY2FyZHNfX2NvbnRhaW5lci1jb250ZW50e2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59QG1lZGlhIChtYXgtd2lkdGg6IDExMDBweCl7LmNhcmRzX19jb250YWluZXItY29udGVudHstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlO2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmR9fUBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7LmNhcmRzX19jb250YWluZXItY29udGVudHstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn19LmNhcmRzX19jb2x1bW57ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjttYXgtd2lkdGg6MzgwcHg7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuY2FyZHNfX2NvbHVtbnstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn19QG1lZGlhIChtYXgtd2lkdGg6IDM4MHB4KXsuY2FyZHNfX2NvbHVtbnttYXgtd2lkdGg6MTAwJTt3aWR0aDoxMDAlfX0uY2FyZHNfX2l0ZW17cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTttYXJnaW4tYm90dG9tOjIuODU3MXJlbTt3aWR0aDoxMDAlfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jaGVja2JveC1idXR0b24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jaGVja2JveC1idXR0b24uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2hlY2tib3gtYnV0dG9uLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jaGVja2JveC1idXR0b257cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZX0uY2hlY2tib3gtYnV0dG9uX19jb250YWluZXJ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0O21pbi13aWR0aDozMjBweH0uY2hlY2tib3gtYnV0dG9uX190ZXh0e21hcmdpbi1sZWZ0OjAuNzE0M3JlbTt3b3JkLWJyZWFrOm5vcm1hbDt3aWR0aDoxMDAlO21heC13aWR0aDoyMDBweH1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2hlY2tib3gtbGlzdC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NoZWNrYm94LWxpc3Quc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY2hlY2tib3gtbGlzdC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY2hlY2tib3gtbGlzdF9fYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbTowLjcxNDNyZW19LmNoZWNrYm94LWxpc3RfX2hlYWR7bWFyZ2luLWJvdHRvbToxLjIxNDNyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9yLWRlbW8taXRlbS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9yLWRlbW8taXRlbS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb2xvci1kZW1vLWl0ZW0uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbG9yLWRlbW8taXRlbXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5jb2xvci1kZW1vLWl0ZW1fX2NvbG9yLXNxdWFyZXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7bWluLXdpZHRoOjVyZW07bWF4LXdpZHRoOjVyZW07bWluLWhlaWdodDo1cmVtO21heC1oZWlnaHQ6NXJlbTtib3JkZXItcmFkaXVzOjAuNDI4NnJlbX0uY29sb3ItZGVtby1pdGVtX19kZXNjcmlwdGlvbntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7bWFyZ2luLWxlZnQ6Mi45Mjg2cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9ycy1hbmQtdHlwZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9ycy1hbmQtdHlwZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb2xvcnMtYW5kLXR5cGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbG9ycy1hbmQtdHlwZXt3aWR0aDoxMDAlO2JhY2tncm91bmQtY29sb3I6I2ZmZjstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7LW1zLWZsZXgtcGFjazpkaXN0cmlidXRlO2p1c3RpZnktY29udGVudDpzcGFjZS1hcm91bmQ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleH0uY29sb3JzLWFuZC10eXBlX19jb250YWluZXItY29udGVudHtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47cGFkZGluZzo0Ljc4NTdyZW0gMy44NTcxcmVtIDByZW0gMC43MTQzcmVtO21hcmdpbjowIGF1dG99QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsuY29sb3JzLWFuZC10eXBlX19jb250YWluZXItY29udGVudHtwYWRkaW5nOjQuNzg1N3JlbSAwcmVtIDByZW0gMHJlbX19QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuY29sb3JzLWFuZC10eXBlX19jb250YWluZXItY29udGVudHstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn19QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuY29sb3JzLWFuZC10eXBlX190ZXh0LWRlbW97bWFyZ2luLXRvcDoyLjg1NzFyZW19fVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb2xvcnMtZGVtby5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9ycy1kZW1vLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbG9ycy1kZW1vLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb2xvcnMtZGVtb3twYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOmF1dG99LmNvbG9ycy1kZW1vX19jb2xvci1kZW1vOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToxLjQyODZyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbW1lbnQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb21tZW50LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbW1lbnQuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmNvbW1lbnR7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwO3dpZHRoOjEwMCU7bWluLXdpZHRoOjMwMHB4fS5jb21tZW50X19hc2lkZXtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfS5jb21tZW50X19hdmF0YXItY29udGFpbmVye2Rpc3BsYXk6YmxvY2s7d2lkdGg6My40Mjg2cmVtO2hlaWdodDozLjQyODZyZW19LmNvbW1lbnRfX2F2YXRhci1pbWFnZXttYXgtd2lkdGg6MTAwJTttYXgtaGVpZ2h0OjEwMCU7aGVpZ2h0OmF1dG87Ym9yZGVyOjAuMTQyOXJlbSBzb2xpZCAjZmZmOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4xKTtib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMSk7Ym9yZGVyLXJhZGl1czoyLjI4NTdyZW19LmNvbW1lbnRfX2xpa2UtYnV0dG9ue21hcmdpbi10b3A6MC44NTcxcmVtfS5jb21tZW50X19oZWFkLWJvZHl7bWFyZ2luLWxlZnQ6MC43MTQzcmVtfS5jb21tZW50X19oZWFke21hcmdpbi1ib3R0b206MC43MTQzcmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb21tZW50cy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbW1lbnRzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvbW1lbnRzLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb21tZW50c19faGVhZHttYXJnaW4tYm90dG9tOjEuMzU3MXJlbX0uY29tbWVudHNfX2NvbW1lbnQ6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjEuNjQyOXJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY29udGFpbmVyLWNvbnRlbnQuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb250YWluZXItY29udGVudC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9jb250YWluZXItY29udGVudC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29udGFpbmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO21pbi13aWR0aDozMjBweDttYXgtd2lkdGg6MTE5MHB4O21hcmdpbjowIGF1dG87cGFkZGluZzowIDEuMDcxNHJlbX1AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpey5jb250YWluZXItY29udGVudHtwYWRkaW5nOjAgMC43MTQzcmVtfX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY29weXJpZ2h0LWJhci5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2NvcHlyaWdodC1iYXIuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vY29weXJpZ2h0LWJhci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29weXJpZ2h0LWJhcntoZWlnaHQ6NXJlbTtiYWNrZ3JvdW5kOiNmZmY7LXdlYmtpdC1ib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCk7Ym94LXNoYWRvdzowcmVtIDAuNzE0M3JlbSAxLjQyODZyZW0gcmdiYSgzMSwzMiw2NSwwLjA1MDk4MDQpfS5jb3B5cmlnaHQtYmFyX19jb250YWluZXItY29udGVudHtoZWlnaHQ6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5jb3B5cmlnaHQtYmFyX19zb2NpYWwtYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLXJpZ2h0OjEuNDI4NnJlbX0uY29weXJpZ2h0LWJhcl9fc29jaWFsLWJ1dHRvbnN7cGFkZGluZy1ib3R0b206MC4xNDI5cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH1AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpey5jb3B5cmlnaHQtYmFyX19jb3B5cmlnaHQtdGV4dHttYXJnaW4tcmlnaHQ6MC43MTQzcmVtfX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZGF0ZS1yYW5nZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2RhdGUtcmFuZ2Uuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZGF0ZS1yYW5nZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZGF0ZS1yYW5nZXt3aWR0aDoxMDAlO21heC13aWR0aDoxMDAlfS5kYXRlLXJhbmdlX19kcm9wZG93bnN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH1AbWVkaWEgKG1heC13aWR0aDogMzgwcHgpey5kYXRlLXJhbmdlX19kcm9wZG93bnN7LXdlYmtpdC1ib3gtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufX0uZGF0ZS1yYW5nZV9fZHJvcGRvd257d2lkdGg6MTAwJTttYXgtd2lkdGg6MTUwcHh9QG1lZGlhIChtYXgtd2lkdGg6IDMzMHB4KXsuZGF0ZS1yYW5nZV9fZHJvcGRvd257bWF4LXdpZHRoOjUwJX19LmRhdGUtcmFuZ2VfX2Ryb3Bkb3duLWhlYWR7bWFyZ2luLWJvdHRvbTowLjI4NTdyZW19LmRhdGUtcmFuZ2VfcmFuZ2Utc2VsZWN0IC5kYXRlLXJhbmdlX19jb250YWluZXJ7ZGlzcGxheTpibG9ja30uZGF0ZS1yYW5nZV9fY29udGFpbmVye3dpZHRoOjEwMCU7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luLXRvcDowLjM1NzFyZW07ZGlzcGxheTpub25lfS5kYXRlLXJhbmdlX19jYWxlbmRhcntwb3NpdGlvbjphYnNvbHV0ZTt6LWluZGV4Ojk5OX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZGF0ZS1yYW5nZV9fZHJvcGRvd24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kYXRlLXJhbmdlX19kcm9wZG93bi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kYXRlLXJhbmdlX19kcm9wZG93bi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZGF0ZS1yYW5nZV9fZHJvcGRvd257d2lkdGg6MTAwJTttYXgtd2lkdGg6MTUwcHh9QG1lZGlhIChtYXgtd2lkdGg6IDMzMHB4KXsuZGF0ZS1yYW5nZV9fZHJvcGRvd257bWF4LXdpZHRoOjUwJX19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLWNvdW50ZXIuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1jb3VudGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLWNvdW50ZXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmRyb3Bkb3duLWNvdW50ZXJ7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LmRyb3Bkb3duLWNvdW50ZXJfX3ZhbHVle3dpZHRoOjEwMCU7bWF4LXdpZHRoOjIuMjg1N3JlbTttaW4td2lkdGg6Mi4yODU3cmVtfS5kcm9wZG93bi1jb3VudGVyX19jb250cm9se2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZHJvcGRvd24tZmlsdGVyLWRhdGUuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1maWx0ZXItZGF0ZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1maWx0ZXItZGF0ZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZHJvcGRvd24tZmlsdGVyLWRhdGV7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlfS5kcm9wZG93bi1maWx0ZXItZGF0ZV9faGVhZHttYXJnaW4tYm90dG9tOjAuMzU3MXJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZHJvcGRvd24tZ3Vlc3Quc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1ndWVzdC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1ndWVzdC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZHJvcGRvd24tZ3Vlc3R7d2lkdGg6MzIwcHg7bWF4LXdpZHRoOjEwMCV9LmRyb3Bkb3duLWd1ZXN0X19jb3VudGVye3BhZGRpbmc6MC41cmVtIDAuNXJlbSAwcmVtIDEuMDcxNHJlbX0uZHJvcGRvd24tZ3Vlc3RfX2J0bi1jb250YWluZXJ7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwO3BhZGRpbmc6MS4zNTcxcmVtIDAuNXJlbSAwLjkyODZyZW0gMS4wNzE0cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1oZWFkLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZHJvcGRvd24taGVhZC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1oZWFkLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kcm9wZG93bi1oZWFke3dpZHRoOjEwMCU7aGVpZ2h0OjMuMTQyOXJlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4O2JhY2tncm91bmQtY29sb3I6I2ZmZjtib3JkZXI6MC4wNzE0cmVtIHNvbGlkIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O2JvcmRlci1yYWRpdXM6MC4yODU3cmVtO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC43NDkwMik7Y3Vyc29yOnBvaW50ZXJ9LmRyb3Bkb3duLWhlYWQ6aG92ZXJ7Ym9yZGVyLWNvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5kcm9wZG93bi1oZWFkX190ZXh0e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJTtwYWRkaW5nLWxlZnQ6MXJlbTtvdmVyZmxvdzpoaWRkZW59LmRyb3Bkb3duLWhlYWRfX2ljb257cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7d2lkdGg6My4xNDI5cmVtO2hlaWdodDozLjE0MjlyZW07bWluLXdpZHRoOjMuMTQyOXJlbTtwYWRkaW5nLWxlZnQ6MC4xNDI5cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxLjcxNDNyZW07bGluZS1oZWlnaHQ6MS43MTQzcmVtO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC43NDkwMil9LmRyb3Bkb3duLWhlYWRfdGhlbWVfZXhwYW5kZWR7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW0gMC4yODU3cmVtIDByZW0gMHJlbTtib3JkZXItY29sb3I6cmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9LmRyb3Bkb3duLWhlYWRfdGhlbWVfc2VsZWN0LWRhdGV7Ym9yZGVyLWNvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi1yb29tLWFtZW5pdGllcy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLXJvb20tYW1lbml0aWVzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLXJvb20tYW1lbml0aWVzLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kcm9wZG93bi1yb29tLWFtZW5pdGllc19fY291bnRlcntwYWRkaW5nOjAuNDI4NnJlbSAwLjQyODZyZW0gMHJlbSAxLjA3MTRyZW19LmRyb3Bkb3duLXJvb20tYW1lbml0aWVzX19jb3VudGVyOmxhc3QtY2hpbGR7cGFkZGluZy1ib3R0b206MC41NzE0cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9kcm9wZG93bi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Ryb3Bkb3duLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kcm9wZG93bntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCV9LmRyb3Bkb3duX19ibG9jay1oZWFke21hcmdpbi1ib3R0b206MC4yODU3cmVtfS5kcm9wZG93bl9fYm9keXtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Om5vbmV9LmRyb3Bkb3duX19jb250ZW50e3Bvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7bGVmdDowO3RvcDowO3otaW5kZXg6OTk5O2JhY2tncm91bmQ6I2ZmZjtib3JkZXI6MC4wNzE0cmVtIHNvbGlkIHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO2JvcmRlci10b3A6MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCk7Ym94LXNoYWRvdzowcmVtIDAuNzE0M3JlbSAxLjQyODZyZW0gcmdiYSgzMSwzMiw2NSwwLjA1MDk4MDQpO2JvcmRlci1yYWRpdXM6MHJlbSAwcmVtIDAuMjg1N3JlbSAwLjI4NTdyZW19LmRyb3Bkb3duX2V4cGFuZGVkIC5kcm9wZG93bl9fYm9keXtkaXNwbGF5OmJsb2NrfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9leHBhbmRhYmxlLWNoZWNrYm94LWxpc3Quc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9leHBhbmRhYmxlLWNoZWNrYm94LWxpc3Quc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZXhwYW5kYWJsZS1jaGVja2JveC1saXN0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5leHBhbmRhYmxlLWNoZWNrYm94LWxpc3R7d2lkdGg6MTAwJTttYXgtd2lkdGg6MjY2cHh9LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9faGVhZHtoZWlnaHQ6My4xNDI5cmVtO21hcmdpbi1ib3R0b206MC4xNDI5cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9fYm9keXtkaXNwbGF5Om5vbmV9LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9fY2hlY2tib3g6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tYm90dG9tOjAuNzE0M3JlbX0uZXhwYW5kYWJsZS1jaGVja2JveC1saXN0X19pY29ue3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3dpZHRoOjMuMTQyOXJlbTtoZWlnaHQ6My4xNDI5cmVtO21pbi13aWR0aDozLjE0MjlyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtmb250LWZhbWlseTpNYXRlcmlhbCBJY29ucztmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEuNzE0M3JlbTtsaW5lLWhlaWdodDoxLjcxNDNyZW07Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjc0OTAyKTtjdXJzb3I6cG9pbnRlcn0uZXhwYW5kYWJsZS1jaGVja2JveC1saXN0X19pY29uOmhvdmVyLC5leHBhbmRhYmxlLWNoZWNrYm94LWxpc3RfX2ljb246YWN0aXZle2NvbG9yOiNiYzljZmZ9LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9faWNvbjphY3RpdmV7Zm9udC1zaXplOjJyZW19LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9leHBhbmRlZCAuZXhwYW5kYWJsZS1jaGVja2JveC1saXN0X19ib2R5e2Rpc3BsYXk6YmxvY2t9LmV4cGFuZGFibGUtY2hlY2tib3gtbGlzdF9leHBhbmRlZCAuZXhwYW5kYWJsZS1jaGVja2JveC1saXN0X19pY29uey13ZWJraXQtdHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpOy1tcy10cmFuc2Zvcm06cm90YXRlKDE4MGRlZyk7dHJhbnNmb3JtOnJvdGF0ZSgxODBkZWcpO3BhZGRpbmc6MHJlbSAwcmVtIDAuMTQyOXJlbSAwLjE0MjlyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Zvb3Rlci1jcmVhdGl2ZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Zvb3Rlci1jcmVhdGl2ZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb290ZXItY3JlYXRpdmUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvb3Rlci1jcmVhdGl2ZXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO2JhY2tncm91bmQ6I2ZmZjstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4wNTA5ODA0KTtib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCl9LmZvb3Rlci1jcmVhdGl2ZV9fY29udGFpbmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtwYWRkaW5nOjcuMTQyOXJlbSAwcmVtIDExMHB4IDByZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0uZm9vdGVyLWNyZWF0aXZlX19sb2dve21hcmdpbi1ib3R0b206MS4yMTQzcmVtfS5mb290ZXItY3JlYXRpdmVfX3NpdGUtZGVzY3JpcHRpb257bWFyZ2luLWJvdHRvbToxLjkyODZyZW07d2lkdGg6MTAwJTttYXgtd2lkdGg6NTYwcHg7dGV4dC1hbGlnbjpjZW50ZXJ9LmZvb3Rlci1jcmVhdGl2ZV9fc29jaWFsLWJ1dHRvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDoxLjQyODZyZW19LmZvb3Rlci1jcmVhdGl2ZV9fc29jaWFsLWJ1dHRvbnN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb290ZXItbmF2LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZm9vdGVyLW5hdi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb290ZXItbmF2LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5mb290ZXItbmF2X190aXRsZXttYXJnaW4tYm90dG9tOjEuNXJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZm9vdGVyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vZm9vdGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Zvb3Rlci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuZm9vdGVye2JhY2tncm91bmQtY29sb3I6I2ZmZjstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjA3MTRyZW0gMHJlbSByZ2JhKDMxLDMyLDY1LDAuMTAxOTYxKTtib3gtc2hhZG93OjByZW0gMC4wNzE0cmVtIDByZW0gcmdiYSgzMSwzMiw2NSwwLjEwMTk2MSl9LmZvb3Rlcl9fY29udGFpbmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtwYWRkaW5nOjcuMTQyOXJlbSAwcmVtIDUuNzE0M3JlbSAwcmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW59QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsuZm9vdGVyX19jb250YWluZXItY29udGVudHstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn19LmZvb3Rlcl9fbG9nb3ttYXJnaW4tYm90dG9tOjEuMjE0M3JlbX1AbWVkaWEgKG1heC13aWR0aDogOTkycHgpey5mb290ZXJfX2xvZ297bWFyZ2luOjAgYXV0byAxLjIxNDNyZW0gYXV0b319LmZvb3Rlcl9fbmF2e21hcmdpbi10b3A6MC4zNTcxcmVtO3dpZHRoOjEwMCU7bWF4LXdpZHRoOjE2MHB4fUBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCl7LmZvb3Rlcl9fbmF2e2Rpc3BsYXk6bm9uZX19LmZvb3Rlcl9fc2l0ZS1kZXNjcmlwdGlvbnt3aWR0aDoxMDAlO21heC13aWR0aDoyNjBweDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5mb290ZXJfX3N1YnNjcmliZS1jb250YWluZXJ7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTttYXJnaW4tdG9wOjAuMzU3MXJlbTt3aWR0aDoxMDAlO21heC13aWR0aDoyNjBweH1AbWVkaWEgKG1heC13aWR0aDogOTkycHgpey5mb290ZXJfX3N1YnNjcmliZS1jb250YWluZXJ7bWFyZ2luLXRvcDoxLjQyODZyZW19fS5mb290ZXJfX3N1YnNjcmliZS1kZXNjcmlwdGlvbnttYXJnaW4tYm90dG9tOjEuNjQyOXJlbX0uZm9vdGVyX19zdWJzY3JpYmUtdGl0bGV7bWFyZ2luLWJvdHRvbToxLjI4NTdyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Zvcm0tZWxlbWVudHMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9mb3JtLWVsZW1lbnRzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2Zvcm0tZWxlbWVudHMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmZvcm0tZWxlbWVudHN7d2lkdGg6MTAwJX0uZm9ybS1lbGVtZW50c19fY29sdW1ue2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LmZvcm0tZWxlbWVudHNfX2NvbHVtbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDowLjcxNDNyZW19QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuZm9ybS1lbGVtZW50c19fY29sdW1ue3dpZHRoOjEwMCU7bWFyZ2luLXJpZ2h0OjByZW19fS5mb3JtLWVsZW1lbnRzX19jb21tZW50e21heC13aWR0aDo2MyV9QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuZm9ybS1lbGVtZW50c19fY29tbWVudHttYXgtd2lkdGg6MTAwJX19LmZvcm0tZWxlbWVudHNfX2NvbnRhaW5lci1jb250ZW50e2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47cGFkZGluZy10b3A6MTQwcHh9QG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCl7LmZvcm0tZWxlbWVudHNfX2NvbnRhaW5lci1jb250ZW50e3BhZGRpbmctdG9wOjVyZW19fUBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7LmZvcm0tZWxlbWVudHNfX2NvbnRhaW5lci1jb250ZW50e3BhZGRpbmctdG9wOjEuNDI4NnJlbX19LmZvcm0tZWxlbWVudHNfX2l0ZW17bWFyZ2luLWJvdHRvbToxLjQyODZyZW07bWluLXdpZHRoOjMyMHB4fUBtZWRpYSAobWF4LXdpZHRoOiA0MDBweCl7LmZvcm0tZWxlbWVudHNfX2l0ZW17bWluLXdpZHRoOmF1dG99fS5mb3JtLWVsZW1lbnRzX19yb3d7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbjstd2Via2l0LWZsZXgtd3JhcDp3cmFwOy1tcy1mbGV4LXdyYXA6d3JhcDtmbGV4LXdyYXA6d3JhcH0uZm9ybS1lbGVtZW50c19fcm93Om5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbTo3LjE0MjlyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2hlYWRlci1mb290ZXIuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9oZWFkZXItZm9vdGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2hlYWRlci1mb290ZXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmhlYWRlci1mb290ZXJ7YmFja2dyb3VuZDojZTVlNWU1O3BhZGRpbmc6MTUwcHggMH0uaGVhZGVyLWZvb3Rlcl9faGVhZGVye21hcmdpbi1ib3R0b206Mi44NTcxcmVtfS5oZWFkZXItZm9vdGVyX19jb3B5cmlnaHQtYmFye21hcmdpbjowLjA3MTRyZW0gMHJlbSAyLjg1NzFyZW0gMHJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaGVhZGVyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaGVhZGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2hlYWRlci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVye2JhY2tncm91bmQtY29sb3I6I2ZmZjstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4wNTA5ODA0KTtib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMDUwOTgwNCl9LmhlYWRlcl9fY29udGFpbmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO2hlaWdodDo1cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn1AbWVkaWEgKG1heC13aWR0aDogOTkycHgpey5oZWFkZXJfX2NvbnRhaW5lci1jb250ZW50e3BhZGRpbmctbGVmdDowLjcxNDNyZW07LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDphdXRvOy1tcy1mbGV4OmF1dG87ZmxleDphdXRvOy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1uO2hlaWdodDphdXRvfX0uaGVhZGVyX19oZWFke2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1wYWNrOmp1c3RpZnk7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2VlbjstbXMtZmxleC1wYWNrOmp1c3RpZnk7anVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDphdXRvOy1tcy1mbGV4OmF1dG87ZmxleDphdXRvOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfUBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCl7LmhlYWRlcl9faGVhZHt3aWR0aDoxMDAlO2hlaWdodDo1cmVtfX0uaGVhZGVyX19wZXJzb25hbC1hcmVhLWJ1dHRvbnN7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfUBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCl7LmhlYWRlcl9fcGVyc29uYWwtYXJlYS1idXR0b25ze3dpZHRoOjEwMCU7bWF4LXdpZHRoOjMwMHB4Oy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn19LmhlYWRlcl9fYnRuLWxvZ2lue21hcmdpbi1yaWdodDoxLjQyODZyZW19QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsuaGVhZGVyX19idG4tbG9naW57bWFyZ2luLXJpZ2h0OjB9fS5oZWFkZXJfX2xvZ297LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDphdXRvOy1tcy1mbGV4OmF1dG87ZmxleDphdXRvfS5oZWFkZXJfX25hdi1jb250YWluZXJ7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyfUBtZWRpYSAobWF4LXdpZHRoOiA5OTJweCl7LmhlYWRlcl9fbmF2LWNvbnRhaW5lcntkaXNwbGF5Om5vbmU7d2lkdGg6MTAwJX19LmhlYWRlcl9fcGVyc29uYWwtYXJlYXttYXJnaW4tbGVmdDoxLjU3MTRyZW19QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsuaGVhZGVyX19wZXJzb25hbC1hcmVhe21hcmdpbjoxLjQyODZyZW0gMHJlbSAxLjQyODZyZW0gMHJlbX19LmhlYWRlcl9fdXNlci1uYW1le3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7cGFkZGluZy1sZWZ0OjEuNDI4NnJlbTtib3JkZXItbGVmdDowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjEwMTk2MSl9QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsuaGVhZGVyX191c2VyLW5hbWV7cGFkZGluZzoxLjQyODZyZW0gMHJlbSAwcmVtIDByZW07Ym9yZGVyLWxlZnQ6bm9uZTtib3JkZXItdG9wOjAuMDcxNHJlbSBzb2xpZCByZ2JhKDMxLDMyLDY1LDAuMTAxOTYxKX19LmhlYWRlcl9fbWVudS1tb2JpbGUtYnRue2Rpc3BsYXk6bm9uZX1AbWVkaWEgKG1heC13aWR0aDogOTkycHgpey5oZWFkZXJfX21lbnUtbW9iaWxlLWJ0bntkaXNwbGF5OmJsb2NrfX0uaGVhZGVyX2V4dGVuZGVkIC5oZWFkZXJfX25hdi1jb250YWluZXJ7ZGlzcGxheTpibG9ja31cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaG90ZWwtcm9vbXMuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9ob3RlbC1yb29tcy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9ob3RlbC1yb29tcy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaG90ZWwtcm9vbXN7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlfS5ob3RlbC1yb29tc19fdGl0bGV7bWFyZ2luLWJvdHRvbTowLjE0MjlyZW19LmhvdGVsLXJvb21zX19ib2R5e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOndyYXA7LW1zLWZsZXgtd3JhcDp3cmFwO2ZsZXgtd3JhcDp3cmFwOy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0uaG90ZWwtcm9vbXNfX3Jvb20taW5mb3JtYXRpb257bWFyZ2luLXRvcDoxLjI4NTdyZW19LmhvdGVsLXJvb21zX19wYWdpbmF0aW9ue21hcmdpbi10b3A6Mi44NTcxcmVtO3BhZGRpbmctcmlnaHQ6MS4xNDI5cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcn1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaHRtbC1ib2R5LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaHRtbC1ib2R5LnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2h0bWwtYm9keS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCJodG1sLGJvZHl7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO2JhY2tncm91bmQ6I2ZmZmZmZn1odG1se21heC13aWR0aDoxOTIwcHg7Zm9udC1zaXplOjE0cHg7Zm9udC1mYW1pbHk6QXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZn1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW1hZ2Utc2xpZGVyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW1hZ2Utc2xpZGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2ltYWdlLXNsaWRlci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaW1hZ2Utc2xpZGVye3dpZHRoOjEwMCU7bWF4LWhlaWdodDoxMDAlfS5pbWFnZS1zbGlkZXI6aG92ZXIgLmltYWdlLXNsaWRlcl9fbmF2LWJ1dHRvbntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4fS5pbWFnZS1zbGlkZXJfX2NvbnRhaW5lcntkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7cG9zaXRpb246cmVsYXRpdmV9LmltYWdlLXNsaWRlcl9faXRlbXN7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6MS4wNzE0cmVtO2JvdHRvbToxLjA3MTRyZW07ei1pbmRleDoxMDAwO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0uaW1hZ2Utc2xpZGVyX19uYXYtYnV0dG9uLWljb257Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxLjcxNDNyZW07Y29sb3I6I2ZmZjstd2Via2l0LXRyYW5zZm9ybTpyb3RhdGUoOTBkZWcpOy1tcy10cmFuc2Zvcm06cm90YXRlKDkwZGVnKTt0cmFuc2Zvcm06cm90YXRlKDkwZGVnKX0uaW1hZ2Utc2xpZGVyX19uYXYtYnV0dG9ue3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3dpZHRoOjNyZW07aGVpZ2h0OjEwMCU7ei1pbmRleDo5OTk7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW0gMHJlbSAwcmVtIDByZW07ZGlzcGxheTpub25lOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCByaWdodCB0b3AsIGZyb20ocmdiYSgwLDAsMCwwLjUpKSwgY29sb3Itc3RvcCg5OS45OSUsIHJnYmEoMCwwLDAsMCkpLCB0byhyZ2JhKDI1NSwyNTUsMjU1LDApKSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQobGVmdCwgcmdiYSgwLDAsMCwwLjUpIDAlLCByZ2JhKDAsMCwwLDApIDk5Ljk5JSwgcmdiYSgyNTUsMjU1LDI1NSwwKSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSgwLDAsMCwwLjUpIDAlLCByZ2JhKDAsMCwwLDApIDk5Ljk5JSwgcmdiYSgyNTUsMjU1LDI1NSwwKSAxMDAlKTtjdXJzb3I6cG9pbnRlcn0uaW1hZ2Utc2xpZGVyX19uYXYtYnV0dG9uX3JpZ2h0e3JpZ2h0OjA7LXdlYmtpdC10cmFuc2Zvcm06bWF0cml4KC0xLCAwLCAwLCAxLCAwLCAwKTstbXMtdHJhbnNmb3JtOm1hdHJpeCgtMSwgMCwgMCwgMSwgMCwgMCk7dHJhbnNmb3JtOm1hdHJpeCgtMSwgMCwgMCwgMSwgMCwgMCl9LmltYWdlLXNsaWRlcl9faXRlbXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjAuNTM1N3JlbTtoZWlnaHQ6MC41MzU3cmVtO2JvcmRlci1yYWRpdXM6NTAlO2JvcmRlcjowLjA3MTRyZW0gc29saWQgI2ZmZmZmZjstd2Via2l0LWJveC1zaGFkb3c6MHJlbSAwLjM1NzFyZW0gMC4zNTcxcmVtICMxZjIwNDE0ZDtib3gtc2hhZG93OjByZW0gMC4zNTcxcmVtIDAuMzU3MXJlbSAjMWYyMDQxNGR9LmltYWdlLXNsaWRlcl9faXRlbTpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDozLjc1cHh9LmltYWdlLXNsaWRlcl9faXRlbV90aGVtZV9zZWxlY3RlZHtiYWNrZ3JvdW5kLWNvbG9yOiNmZmZ9LmltYWdlLXNsaWRlcl9faW1hZ2V7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bzttYXgtaGVpZ2h0OjEwMCU7ei1pbmRleDotMTtkaXNwbGF5Om5vbmV9LmltYWdlLXNsaWRlcl9faW1hZ2Vfc2VsZWN0ZWR7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW0gMC4yODU3cmVtIDByZW0gMHJlbTt6LWluZGV4OjI7ZGlzcGxheTpibG9ja30uaW1hZ2Utc2xpZGVyX19pbWFnZV9pbmRleC1pdGVte2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bGVmdDo0MHB4O3RvcDoyMHB4O2NvbG9yOiM2ZmNmOTc7Zm9udC1zaXplOjJyZW07Zm9udC13ZWlnaHQ6Ym9sZDt6LWluZGV4OjJ9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2lucHV0LWNoZWNrYm94LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW5wdXQtY2hlY2tib3guc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW5wdXQtY2hlY2tib3guc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmlucHV0LWNoZWNrYm94e2Rpc3BsYXk6YmxvY2s7Y3Vyc29yOnBvaW50ZXJ9LmlucHV0LWNoZWNrYm94X19pbnB1dHtkaXNwbGF5Om5vbmV9LmlucHV0LWNoZWNrYm94X19pbnB1dDpjaGVja2VkKy5pbnB1dC1jaGVja2JveF9fbmV3LWlucHV0e2JvcmRlci1jb2xvcjojYmM5Y2ZmO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjQkM5Q0ZGKSwgdG8oIzhCQTRGOSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dDstd2Via2l0LXRleHQtZmlsbC1jb2xvcjp0cmFuc3BhcmVudH0uaW5wdXQtY2hlY2tib3hfX2lucHV0OmhvdmVyKy5pbnB1dC1jaGVja2JveF9fbmV3LWlucHV0ey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDEwcHggI2JjOWNmZjtib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmfS5pbnB1dC1jaGVja2JveF9faW5wdXQ6YWN0aXZlKy5pbnB1dC1jaGVja2JveF9fbmV3LWlucHV0ey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDVweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKTtib3gtc2hhZG93OjBweCAwcHggNXB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5pbnB1dC1jaGVja2JveF9faW5wdXQ6Zm9jdXMrLmlucHV0LWNoZWNrYm94X19uZXctaW5wdXR7Ym9yZGVyLWNvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5pbnB1dC1jaGVja2JveF9fbmV3LWlucHV0e2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7d2lkdGg6MS40Mjg2cmVtO2hlaWdodDoxLjQyODZyZW07YmFja2dyb3VuZDojZmZmO2JvcmRlcjowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjI1MDk4KTstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym9yZGVyLXJhZGl1czowLjI4NTdyZW07Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxcmVtO2ZvbnQtd2VpZ2h0OmJvbGQ7Y29sb3I6d2hpdGU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9pbnB1dC1yYWRpby5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2lucHV0LXJhZGlvLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2lucHV0LXJhZGlvLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5pbnB1dC1yYWRpb3tkaXNwbGF5OmJsb2NrO2N1cnNvcjpwb2ludGVyfS5pbnB1dC1yYWRpb19faW5wdXQtaW5kaWNhdG9ye2Rpc3BsYXk6bm9uZTt3aWR0aDowLjg1NzFyZW07aGVpZ2h0OjAuODU3MXJlbTtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI2JjOWNmZiksIHRvKCM4YmE0ZjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNiYzljZmYgMCUsICM4YmE0ZjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjYmM5Y2ZmIDAlLCAjOGJhNGY5IDEwMCUpO2JvcmRlci1yYWRpdXM6MC43MTQzcmVtfS5pbnB1dC1yYWRpb19faW5wdXR7ZGlzcGxheTpub25lfS5pbnB1dC1yYWRpb19faW5wdXQ6Y2hlY2tlZCsuaW5wdXQtcmFkaW9fX25ldy1pbnB1dHtib3JkZXItY29sb3I6I2JjOWNmZn0uaW5wdXQtcmFkaW9fX2lucHV0OmNoZWNrZWQrLmlucHV0LXJhZGlvX19uZXctaW5wdXQ+LmlucHV0LXJhZGlvX19pbnB1dC1pbmRpY2F0b3J7ZGlzcGxheTpibG9ja30uaW5wdXQtcmFkaW9fX2lucHV0OmhvdmVyKy5pbnB1dC1yYWRpb19fbmV3LWlucHV0ey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDEwcHggI2JjOWNmZjtib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmfS5pbnB1dC1yYWRpb19faW5wdXQ6YWN0aXZlKy5pbnB1dC1yYWRpb19fbmV3LWlucHV0ey13ZWJraXQtYm94LXNoYWRvdzowcHggMHB4IDVweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKTtib3gtc2hhZG93OjBweCAwcHggNXB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5pbnB1dC1yYWRpb19faW5wdXQ6Zm9jdXMrLmlucHV0LXJhZGlvX19uZXctaW5wdXR7Ym9yZGVyLWNvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5pbnB1dC1yYWRpb19fbmV3LWlucHV0e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDt3aWR0aDoxLjQyODZyZW07aGVpZ2h0OjEuNDI4NnJlbTtiYWNrZ3JvdW5kOiNmZmY7Ym9yZGVyOjAuMDcxNHJlbSBzb2xpZCByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO2JvcmRlci1yYWRpdXM6MC43MTQzcmVtOy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9pbnB1dC10ZXh0LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW5wdXQtdGV4dC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9pbnB1dC10ZXh0LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5pbnB1dC10ZXh0e3dpZHRoOjEwMCV9LmlucHV0LXRleHRfdXNlLWljb24tcmlnaHQgLmlucHV0LXRleHRfX2lucHV0e3BhZGRpbmctcmlnaHQ6My4xNDI5cmVtfS5pbnB1dC10ZXh0X19jb250YWluZXJ7d2lkdGg6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZX0uaW5wdXQtdGV4dF9faWNvbi1yaWdodHtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTtmb250LWZhbWlseTpNYXRlcmlhbCBJY29ucztmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjEuNzE0M3JlbTtsaW5lLWhlaWdodDoxLjcxNDNyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtjb2xvcjpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjQkM5Q0ZGKSwgdG8oIzhCQTRGOSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dDstd2Via2l0LXRleHQtZmlsbC1jb2xvcjp0cmFuc3BhcmVudDt3aWR0aDoxMDAlO21heC13aWR0aDozLjE0MjlyZW07bWluLXdpZHRoOjMuMTQyOXJlbTtoZWlnaHQ6MTAwJTttYXgtaGVpZ2h0OjMuMTQyOXJlbTtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDowO3RvcDowO2N1cnNvcjpwb2ludGVyfS5pbnB1dC10ZXh0X19pY29uLXJpZ2h0OmhvdmVye3RleHQtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmfS5pbnB1dC10ZXh0X19pY29uLXJpZ2h0OmFjdGl2ZXt0ZXh0LXNoYWRvdzowcHggMHB4IDEwcHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9LmlucHV0LXRleHRfX2lucHV0e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJTttaW4td2lkdGg6MDtoZWlnaHQ6My4xNDI5cmVtO3BhZGRpbmc6MHJlbSAxcmVtIDAuMTQyOXJlbSAxcmVtO2ZvbnQtZmFtaWx5Ok1vbnRzZXJyYXQ7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZTowLjk3ODZyZW07bGluZS1oZWlnaHQ6MS4yODU3cmVtO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtib3JkZXItcmFkaXVzOjAuMjg1N3JlbX0uaW5wdXQtdGV4dF9faW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtvcGFjaXR5OjF9LmlucHV0LXRleHRfX2lucHV0OjotbW96LXBsYWNlaG9sZGVye2NvbG9yOnJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7b3BhY2l0eToxfS5pbnB1dC10ZXh0X19pbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtvcGFjaXR5OjF9LmlucHV0LXRleHRfX2lucHV0OjotbXMtaW5wdXQtcGxhY2Vob2xkZXJ7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtvcGFjaXR5OjF9LmlucHV0LXRleHRfX2lucHV0OjpwbGFjZWhvbGRlcntjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO29wYWNpdHk6MX0uaW5wdXQtdGV4dF9faW5wdXQ6aG92ZXIsLmlucHV0LXRleHRfX2lucHV0OmZvY3Vze2xpbmUtaGVpZ2h0OjEuNzE0M3JlbTtjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuNzQ5MDIpO2JvcmRlci1jb2xvcjpyZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW5wdXQtdG9nZ2xlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vaW5wdXQtdG9nZ2xlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2lucHV0LXRvZ2dsZS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaW5wdXQtdG9nZ2xle2Rpc3BsYXk6YmxvY2s7Y3Vyc29yOnBvaW50ZXJ9LmlucHV0LXRvZ2dsZV9faW5wdXR7ZGlzcGxheTpub25lfS5pbnB1dC10b2dnbGVfX2lucHV0OmNoZWNrZWQrLmlucHV0LXRvZ2dsZV9fc3dpdGNoe2JvcmRlci1jb2xvcjojYmM5Y2ZmfS5pbnB1dC10b2dnbGVfX2lucHV0OmNoZWNrZWQrLmlucHV0LXRvZ2dsZV9fc3dpdGNoIC5pbnB1dC10b2dnbGVfX3N3aXRjaC1pbmRpY2F0b3J7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtmbG9hdDpyaWdodH0uaW5wdXQtdG9nZ2xlX19zd2l0Y2gtaW5kaWNhdG9ye2Rpc3BsYXk6YmxvY2s7ZmxvYXQ6bGVmdDt3aWR0aDowLjg1NzFyZW07aGVpZ2h0OjAuODU3MXJlbTtiYWNrZ3JvdW5kOnJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7Ym9yZGVyLXJhZGl1czowLjcxNDNyZW19LmlucHV0LXRvZ2dsZV9fc3dpdGNoe3dpZHRoOjIuODU3MXJlbTtoZWlnaHQ6MS40Mjg2cmVtO2JhY2tncm91bmQ6d2hpdGU7Ym9yZGVyOjAuMDcxNHJlbSBzb2xpZCByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtib3JkZXItcmFkaXVzOjAuNzE0M3JlbTtwYWRkaW5nOjAuMjE0M3JlbX0uaW5wdXQtdG9nZ2xlX19zd2l0Y2g6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmZ9LmlucHV0LXRvZ2dsZV9fc3dpdGNoOmFjdGl2ZXstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCA1cHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSk7Ym94LXNoYWRvdzowcHggMHB4IDVweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbGlrZS1idXR0b24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9saWtlLWJ1dHRvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9saWtlLWJ1dHRvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubGlrZS1idXR0b257cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7d2lkdGg6Mi44NTcxcmVtO2hlaWdodDoxLjQyODZyZW07YmFja2dyb3VuZDp3aGl0ZTtib3JkZXI6MC4wNzE0cmVtIHNvbGlkIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7Ym94LXNpemluZzpib3JkZXItYm94O2JvcmRlci1yYWRpdXM6MC43MTQzcmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjtjdXJzb3I6cG9pbnRlcn0ubGlrZS1idXR0b246aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4IHJnYmEoMzEsMzIsNjUsMC4yNTA5OCl9Lmxpa2UtYnV0dG9uOmFjdGl2ZXstd2Via2l0LWJveC1zaGFkb3c6MHB4IDBweCA1cHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSk7Ym94LXNoYWRvdzowcHggMHB4IDVweCByZ2JhKDMxLDMyLDY1LDAuNTAxOTYxKX0ubGlrZS1idXR0b25fY2hlY2tlZHtib3JkZXItY29sb3I6I2JjOWNmZn0ubGlrZS1idXR0b25fY2hlY2tlZCAubGlrZS1idXR0b25fX2ljb257YmFja2dyb3VuZDojYmM5Y2ZmOy13ZWJraXQtYmFja2dyb3VuZC1jbGlwOnRleHQ7YmFja2dyb3VuZC1jbGlwOnRleHQ7LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6dHJhbnNwYXJlbnR9Lmxpa2UtYnV0dG9uX2NoZWNrZWQgLmxpa2UtYnV0dG9uX19jb3VudGVye2NvbG9yOiNiYzljZmZ9Lmxpa2UtYnV0dG9uX2NoZWNrZWQ6aG92ZXJ7LXdlYmtpdC1ib3gtc2hhZG93OjBweCAwcHggMTBweCAjYmM5Y2ZmO2JveC1zaGFkb3c6MHB4IDBweCAxMHB4ICNiYzljZmZ9Lmxpa2UtYnV0dG9uX19jb3VudGVye3dpZHRoOjAuODU3MXJlbTtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MC43MTQzcmVtO2xpbmUtaGVpZ2h0OjEuMjE0M3JlbTt0ZXh0LWFsaWduOmNlbnRlcjtjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuMjUwOTgpOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0ubGlrZS1idXR0b25fX2ljb257d2lkdGg6MS4yODU3cmVtO2hlaWdodDoxLjI4NTdyZW07Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZTowLjcxNDNyZW07bGluZS1oZWlnaHQ6MC42NDI5cmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXI7dGV4dC1hbGlnbjpjZW50ZXI7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtkaXNwbGF5OmZsZXg7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtYm94LXBhY2s6Y2VudGVyOy13ZWJraXQtanVzdGlmeS1jb250ZW50OmNlbnRlcjstbXMtZmxleC1wYWNrOmNlbnRlcjtqdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbGlrZS1idXR0b25zLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbGlrZS1idXR0b25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2xpa2UtYnV0dG9ucy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubGlrZS1idXR0b25zX19idXR0b246bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tcmlnaHQ6MC43MTQzcmVtfS5saWtlLWJ1dHRvbnNfX2NvbnRhaW5lcntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9Lmxpa2UtYnV0dG9uc19faGVhZHttYXJnaW4tYm90dG9tOjEuMDcxNHJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbG9nby5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2xvZ28uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbG9nby5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubG9nb3t0ZXh0LWRlY29yYXRpb246bm9uZTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LWFsaWduOmNlbnRlcjstd2Via2l0LWFsaWduLWl0ZW1zOmNlbnRlcjstbXMtZmxleC1hbGlnbjpjZW50ZXI7YWxpZ24taXRlbXM6Y2VudGVyOy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwfS5sb2dvOmFjdGl2ZSwubG9nbzpob3ZlciwubG9nbzpmb2N1c3t0ZXh0LWRlY29yYXRpb246bm9uZTtvdXRsaW5lOm5vbmV9LmxvZ286dmlzaXRlZHt0ZXh0LWRlY29yYXRpb246bm9uZX0ubG9nb19fdGV4dHttYXJnaW4tbGVmdDoxMS41cHg7d2lkdGg6My45Mjg2cmVtO2hlaWdodDoxcmVtfS5sb2dvX19pY29ue3dpZHRoOjMuNDI4NnJlbTtoZWlnaHQ6My40Mjg2cmVtfS5sb2dvX19pY29uLW1haW57d2lkdGg6Mi44NTcxcmVtO2hlaWdodDoyLjg1NzFyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL21lbnUtaXRlbS1leHBhbmRhYmxlLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbWVudS1pdGVtLWV4cGFuZGFibGUuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbWVudS1pdGVtLWV4cGFuZGFibGUuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm1lbnUtaXRlbS1leHBhbmRhYmxle3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO2Rpc3BsYXk6YmxvY2s7Y3Vyc29yOnBvaW50ZXJ9Lm1lbnUtaXRlbS1leHBhbmRhYmxlX19oZWFke2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0ubWVudS1pdGVtLWV4cGFuZGFibGVfX2J0bi1leHBhbmR7d2lkdGg6MS42NDI5cmVtO2hlaWdodDoxLjVyZW07Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxLjcxNDNyZW07bGluZS1oZWlnaHQ6MS41cmVtO3RleHQtYWxpZ246Y2VudGVyO2NvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS5tZW51LWl0ZW0tZXhwYW5kYWJsZV9fYm9keXtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6bm9uZX0ubWVudS1pdGVtLWV4cGFuZGFibGVfX2xpc3R7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt6LWluZGV4Ojk5OTttaW4td2lkdGg6MTAwJTtwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0wLjVyZW07dG9wOjA7YmFja2dyb3VuZDojZmZmO3BhZGRpbmc6MC41cmVtO21hcmdpbjowO2JvcmRlci1yYWRpdXM6MHJlbSAwcmVtIDAuMjg1N3JlbSAwLjI4NTdyZW07LXdlYmtpdC1ib3gtc2hhZG93OjByZW0gMC43MTQzcmVtIDEuNDI4NnJlbSByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO2JveC1zaGFkb3c6MHJlbSAwLjcxNDNyZW0gMS40Mjg2cmVtIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCl9Lm1lbnUtaXRlbS1leHBhbmRhYmxlX19saXN0LWl0ZW17bGlzdC1zdHlsZS10eXBlOm5vbmU7bWFyZ2luLXRvcDowLjcxNDNyZW19Lm1lbnUtaXRlbS1leHBhbmRhYmxlX19saW5rey13ZWJraXQtdXNlci1zZWxlY3Q6bm9uZTstbW96LXVzZXItc2VsZWN0Om5vbmU7LW1zLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZTt0ZXh0LWRlY29yYXRpb246bm9uZTtjdXJzb3I6cG9pbnRlcn0ubWVudS1pdGVtLWV4cGFuZGFibGVfX2xpbms6aG92ZXJ7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9Lm1lbnUtaXRlbS1leHBhbmRhYmxlX19saW5rOmFjdGl2ZXtvdXRsaW5lOm5vbmU7dGV4dC1kZWNvcmF0aW9uOm5vbmU7dGV4dC1zaGFkb3c6MHB4IDBweCA1cHggcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9Lm1lbnUtaXRlbS1leHBhbmRhYmxlX2V4cGFuZGVkIC5tZW51LWl0ZW0tZXhwYW5kYWJsZV9fYm9keXtkaXNwbGF5OmJsb2NrfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9tZW51LWl0ZW0uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9tZW51LWl0ZW0uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbWVudS1pdGVtLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tZW51LWl0ZW17LXdlYmtpdC11c2VyLXNlbGVjdDpub25lOy1tb3otdXNlci1zZWxlY3Q6bm9uZTstbXMtdXNlci1zZWxlY3Q6bm9uZTt1c2VyLXNlbGVjdDpub25lO3RleHQtZGVjb3JhdGlvbjpub25lfS5tZW51LWl0ZW06aG92ZXJ7LXdlYmtpdC10ZXh0LWRlY29yYXRpb246dW5kZXJsaW5lIHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgcmdiYSgzMSwzMiw2NSwwLjUwMTk2MSl9Lm1lbnUtaXRlbTphY3RpdmV7b3V0bGluZTpub25lO3RleHQtZGVjb3JhdGlvbjpub25lO3RleHQtc2hhZG93OjBweCAwcHggNXB4IHJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9tZW51LnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vbWVudS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9tZW51LnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5tZW51e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsubWVudXstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbjstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydH19Lm1lbnVfdGhlbWVfdmVydGljYWx7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246c3RhcnQ7LXdlYmtpdC1hbGlnbi1pdGVtczpmbGV4LXN0YXJ0Oy1tcy1mbGV4LWFsaWduOnN0YXJ0O2FsaWduLWl0ZW1zOmZsZXgtc3RhcnR9Lm1lbnVfdGhlbWVfdmVydGljYWwgLm1lbnVfX2l0ZW17bWFyZ2luOjByZW0gMHJlbSAxLjVyZW0gMHJlbX0ubWVudV9faXRlbTpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1yaWdodDoxLjVyZW19QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KXsubWVudV9faXRlbTpub3QoOmxhc3QtY2hpbGQpe21hcmdpbjowcmVtIDByZW0gMS41cmVtIDByZW19fVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9wYWdlLWNvbnRhaW5lci5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3BhZ2UtY29udGFpbmVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3BhZ2UtY29udGFpbmVyLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wYWdlLWNvbnRhaW5lcntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn0ucGFnZS1jb250YWluZXJfX21haW57LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDphdXRvOy1tcy1mbGV4OmF1dG87ZmxleDphdXRvfS5wYWdlLWNvbnRhaW5lcl9fY29weXJpZ2h0LWJhcntib3JkZXItdG9wOjAuMDcxNHJlbSBzb2xpZCAjZTVlNWU1fVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9wYWdpbmF0aW9uLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcGFnaW5hdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9wYWdpbmF0aW9uLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5wYWdpbmF0aW9ue3dpZHRoOjEwMCU7bWF4LXdpZHRoOjI0MHB4fS5wYWdpbmF0aW9uX19oZWFke21hcmdpbi1ib3R0b206MS4wNzE0cmVtfS5wYWdpbmF0aW9uX19idXR0b25ze2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ucGFnaW5hdGlvbl9fYm90dG9tLXRleHR7bWFyZ2luLXRvcDowLjU3MTRyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhZGlvLWJ1dHRvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhZGlvLWJ1dHRvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yYWRpby1idXR0b24uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJhZGlvLWJ1dHRvbntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3dpZHRoOjEwMCV9LnJhZGlvLWJ1dHRvbl9fY29udGFpbmVye2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcn0ucmFkaW8tYnV0dG9uX190ZXh0e21hcmdpbi1sZWZ0OjAuNzE0M3JlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmFkaW8tYnV0dG9ucy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhZGlvLWJ1dHRvbnMuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmFkaW8tYnV0dG9ucy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucmFkaW8tYnV0dG9uc19faGVhZHttYXJnaW4tYm90dG9tOjEuMTQyOXJlbX0ucmFkaW8tYnV0dG9uc19fY29udGFpbmVye2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcH0ucmFkaW8tYnV0dG9uc19fYnV0dG9uOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLXJpZ2h0OjEuNDI4NnJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmFuZ2Utc2xpZGVyLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmFuZ2Utc2xpZGVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhbmdlLXNsaWRlci5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucmFuZ2Utc2xpZGVye3dpZHRoOjEwMCU7bWluLXdpZHRoOjI2NnB4fS5yYW5nZS1zbGlkZXJfX2JnLWxpbmV7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtib3R0b206MDtsZWZ0OjA7cmlnaHQ6MDt6LWluZGV4OjE7d2lkdGg6YXV0bztiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oIzZmY2Y5NyksIHRvKCM2NmQyZWEpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM2ZmNmOTcgMCUsICM2NmQyZWEgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNmZjZjk3IDAlLCAjNjZkMmVhIDEwMCUpfS5yYW5nZS1zbGlkZXJfX2JvdHRvbS10ZXh0e21hcmdpbi10b3A6MC42NDI5cmVtfS5yYW5nZS1zbGlkZXJfX2hlYWR7bWFyZ2luLWJvdHRvbToxLjY0MjlyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LXBhY2s6anVzdGlmeTstd2Via2l0LWp1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy1tcy1mbGV4LXBhY2s6anVzdGlmeTtqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYmV0d2Vlbn0ucmFuZ2Utc2xpZGVyX19saW5le3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7ei1pbmRleDoxO3dpZHRoOjEwMCU7aGVpZ2h0OjAuNDI4NnJlbTtib3JkZXItcmFkaXVzOjAuMjE0M3JlbTtwb3NpdGlvbjpyZWxhdGl2ZTtib3JkZXI6MC4wNzE0cmVtIHNvbGlkIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCl9LnJhbmdlLXNsaWRlcl9fcG9pbnR7ZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt0b3A6LTAuNDI4NnJlbTtsZWZ0Oi04cHg7ei1pbmRleDoyO3dpZHRoOjAuODU3MXJlbTtoZWlnaHQ6MC44NTcxcmVtO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjNmZjZjk3KSwgdG8oIzY2ZDJlYSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzZmY2Y5NyAwJSwgIzY2ZDJlYSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICM2ZmNmOTcgMCUsICM2NmQyZWEgMTAwJSk7Ym9yZGVyOjAuMTQyOXJlbSBzb2xpZCAjZmZmZmZmO2JvcmRlci1yYWRpdXM6MC43MTQzcmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yYXRpbmctYnV0dG9ucy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhdGluZy1idXR0b25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JhdGluZy1idXR0b25zLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yYXRpbmctYnV0dG9uc19faGVhZHttYXJnaW4tYm90dG9tOjEuMDcxNHJlbX0ucmF0aW5nLWJ1dHRvbnNfX2NvbnRhaW5lcntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3d9LnJhdGluZy1idXR0b25zX19yYXRpbmc6bm90KDpsYXN0LWNoaWxkKXttYXJnaW4tcmlnaHQ6MS40Mjg2cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yYXRpbmcuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yYXRpbmcuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmF0aW5nLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yYXRpbmd7d2lkdGg6MTIwcHh9LnJhdGluZ19fc3RhcntkaXNwbGF5OmlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7d2lkdGg6MS43MTQzcmVtO2hlaWdodDoxLjcxNDNyZW07Zm9udC1mYW1pbHk6TWF0ZXJpYWwgSWNvbnM7Zm9udC1zdHlsZTpub3JtYWw7Zm9udC13ZWlnaHQ6bm9ybWFsO2ZvbnQtc2l6ZToxLjcxNDNyZW07bGluZS1oZWlnaHQ6MS43MTQzcmVtO3RleHQtYWxpZ246Y2VudGVyO2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjQkM5Q0ZGKSwgdG8oIzhCQTRGOSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dDstd2Via2l0LXRleHQtZmlsbC1jb2xvcjp0cmFuc3BhcmVudDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7Y3Vyc29yOnBvaW50ZXJ9LnJhdGluZ19fc3Rhcjpob3ZlcntiYWNrZ3JvdW5kOiM2ZmNmOTc7LXdlYmtpdC1iYWNrZ3JvdW5kLWNsaXA6dGV4dDtiYWNrZ3JvdW5kLWNsaXA6dGV4dDstd2Via2l0LXRleHQtZmlsbC1jb2xvcjp0cmFuc3BhcmVudH0ucmF0aW5nX19zdGFyOmFjdGl2ZXt0ZXh0LXNoYWRvdzowcHggMHB4IDEwcHggIzZmY2Y5N31cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmVjZWlwdC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JlY2VpcHQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmVjZWlwdC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucmVjZWlwdF9faXRlbXtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtcGFjazpzdGFydDstd2Via2l0LWp1c3RpZnktY29udGVudDpmbGV4LXN0YXJ0Oy1tcy1mbGV4LXBhY2s6c3RhcnQ7anVzdGlmeS1jb250ZW50OmZsZXgtc3RhcnQ7bWFyZ2luLWJvdHRvbToxLjE0MjlyZW19LnJlY2VpcHRfX3RleHQtY29udGFpbmVye3dpZHRoOjEwMCU7bWF4LXdpZHRoOjIxNXB4O21hcmdpbi1yaWdodDowLjM1NzFyZW19LnJlY2VpcHRfX2ljb257cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmU7d2lkdGg6MS40Mjg2cmVtO2hlaWdodDoxLjQyODZyZW07Ym9yZGVyLXJhZGl1czo1MCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjstd2Via2l0LWJveC1wYWNrOmNlbnRlcjstd2Via2l0LWp1c3RpZnktY29udGVudDpjZW50ZXI7LW1zLWZsZXgtcGFjazpjZW50ZXI7anVzdGlmeS1jb250ZW50OmNlbnRlcjtib3JkZXI6MC4wNzE0cmVtIHNvbGlkIHJnYmEoMzEsMzIsNjUsMC4yNTA5OCk7Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjI1MDk4KTtjdXJzb3I6cG9pbnRlcn0ucmVjZWlwdF9fcHJpY2V7LXdlYmtpdC1ib3gtZmxleDoxOy13ZWJraXQtZmxleDphdXRvOy1tcy1mbGV4OmF1dG87ZmxleDphdXRvfS5yZWNlaXB0X190b3RhbC1zdW17ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOmJhc2VsaW5lOy13ZWJraXQtYWxpZ24taXRlbXM6YmFzZWxpbmU7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmU7YWxpZ24taXRlbXM6YmFzZWxpbmV9LnJlY2VpcHRfX3RvdGFsLXN1bTpub3QoOm9ubHktY2hpbGQpe21hcmdpbi10b3A6Mi4yMTQzcmVtfS5yZWNlaXB0X19zZXBhcmF0ZS1saW5le3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJTttYXJnaW46MCAwLjM1NzFyZW07aGVpZ2h0OjAuMDcxNHJlbTtib3JkZXItYm90dG9tOjAuMDcxNHJlbSBkb3R0ZWQgcmdiYSgzMSwzMiw2NSwwLjI1MDk4KX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmljaC1jaGVja2JveC1idXR0b24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yaWNoLWNoZWNrYm94LWJ1dHRvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yaWNoLWNoZWNrYm94LWJ1dHRvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucmljaC1jaGVja2JveC1idXR0b257ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOnN0YXJ0Oy13ZWJraXQtYWxpZ24taXRlbXM6ZmxleC1zdGFydDstbXMtZmxleC1hbGlnbjpzdGFydDthbGlnbi1pdGVtczpmbGV4LXN0YXJ0fS5yaWNoLWNoZWNrYm94LWJ1dHRvbl9fY29udGFpbmVye21hcmdpbi1sZWZ0OjAuNzE0M3JlbTt3aWR0aDoyNzBweDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1ufS5yaWNoLWNoZWNrYm94LWJ1dHRvbl9fdGV4dHttYXJnaW4tYm90dG9tOjAuMzU3MXJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmljaC1jaGVja2JveC1idXR0b25zLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcmljaC1jaGVja2JveC1idXR0b25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JpY2gtY2hlY2tib3gtYnV0dG9ucy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucmljaC1jaGVja2JveC1idXR0b25zX19oZWFke21hcmdpbi1ib3R0b206MS4xNDI5cmVtfS5yaWNoLWNoZWNrYm94LWJ1dHRvbnNfX2J1dHRvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MC42NDI5cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWFkdmFudGFnZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tYWR2YW50YWdlLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tYWR2YW50YWdlLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yb29tLWFkdmFudGFnZXtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7Ym9yZGVyLWJvdHRvbTowLjA3MTRyZW0gc29saWQgcmdiYSgzMSwzMiw2NSwwLjEwMTk2MSk7cGFkZGluZy1ib3R0b206MS4yMTQzcmVtfS5yb29tLWFkdmFudGFnZV9faWNvbnt3aWR0aDozLjQyODZyZW07aGVpZ2h0OjMuNDI4NnJlbTtmb250LWZhbWlseTpNYXRlcmlhbCBJY29ucztmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpub3JtYWw7Zm9udC1zaXplOjMuNDI4NnJlbTtsaW5lLWhlaWdodDozLjQyODZyZW07ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1hbGlnbjpjZW50ZXI7LXdlYmtpdC1hbGlnbi1pdGVtczpjZW50ZXI7LW1zLWZsZXgtYWxpZ246Y2VudGVyO2FsaWduLWl0ZW1zOmNlbnRlcjt0ZXh0LWFsaWduOmNlbnRlcjtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oI0JDOUNGRiksIHRvKCM4QkE0RjkpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNCQzlDRkYgMCUsICM4QkE0RjkgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpOy13ZWJraXQtYmFja2dyb3VuZC1jbGlwOnRleHQ7YmFja2dyb3VuZC1jbGlwOnRleHQ7LXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6dHJhbnNwYXJlbnQ7bWFyZ2luLXJpZ2h0OjAuNzE0M3JlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcm9vbS1hZHZhbnRhZ2VzLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcm9vbS1hZHZhbnRhZ2VzLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tYWR2YW50YWdlcy5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIucm9vbS1hZHZhbnRhZ2VzX19oZWFke21hcmdpbi1ib3R0b206MS4zNTcxcmVtfS5yb29tLWFkdmFudGFnZXNfX3Jvb20tYWR2YW50YWdlOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToxLjY0MjlyZW19XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tZGV0YWlscy1iYW5uZXIuc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWRldGFpbHMtYmFubmVyLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tZGV0YWlscy1iYW5uZXIuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJvb20tZGV0YWlscy1iYW5uZXJ7d2lkdGg6MTAwJTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsucm9vbS1kZXRhaWxzLWJhbm5lcnstd2Via2l0LWJveC1vcmllbnQ6dmVydGljYWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOmNvbHVtbjstbXMtZmxleC1kaXJlY3Rpb246Y29sdW1uO2ZsZXgtZGlyZWN0aW9uOmNvbHVtbn19LnJvb20tZGV0YWlscy1iYW5uZXJfX2ltZy1jb2x1bW57d2lkdGg6MzIlO2hlaWdodDoxMDAlO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW59QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsucm9vbS1kZXRhaWxzLWJhbm5lcl9faW1nLWNvbHVtbnt3aWR0aDoxMDAlfX0ucm9vbS1kZXRhaWxzLWJhbm5lcl9faW1nLWl0ZW0tY29udGFpbmVye2hlaWdodDo1MCV9QG1lZGlhIChtYXgtd2lkdGg6IDc2OHB4KXsucm9vbS1kZXRhaWxzLWJhbm5lcl9faW1nLWl0ZW0tY29udGFpbmVye2hlaWdodDphdXRvfX0ucm9vbS1kZXRhaWxzLWJhbm5lcl9faW1nLWl0ZW17d2lkdGg6MTAwJX0ucm9vbS1kZXRhaWxzLWJhbm5lcl9fbWFpbi1pbWctY29udGFpbmVye3dpZHRoOjY4JX1AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpey5yb29tLWRldGFpbHMtYmFubmVyX19tYWluLWltZy1jb250YWluZXJ7d2lkdGg6MTAwJX19LnJvb20tZGV0YWlscy1iYW5uZXJfX21haW4taW1ne3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCV9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20taGVhZC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20taGVhZC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWhlYWQuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJvb20taGVhZHtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVuOy13ZWJraXQtYm94LWFsaWduOmJhc2VsaW5lOy13ZWJraXQtYWxpZ24taXRlbXM6YmFzZWxpbmU7LW1zLWZsZXgtYWxpZ246YmFzZWxpbmU7YWxpZ24taXRlbXM6YmFzZWxpbmV9LnJvb20taGVhZF9fbHV4dXJ5e21hcmdpbi1sZWZ0OjAuMzU3MXJlbX0ucm9vbS1oZWFkX19wcmljZS1udW1iZXJ7bWFyZ2luLXJpZ2h0OjAuMjg1N3JlbX0ucm9vbS1oZWFkX19yb29tLW51bWJlcnt0ZXh0LWRlY29yYXRpb246bm9uZTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtYWxpZ246YmFzZWxpbmU7LXdlYmtpdC1hbGlnbi1pdGVtczpiYXNlbGluZTstbXMtZmxleC1hbGlnbjpiYXNlbGluZTthbGlnbi1pdGVtczpiYXNlbGluZTtjdXJzb3I6cG9pbnRlcn0ucm9vbS1oZWFkX19yb29tLW51bWJlcjphY3RpdmUsLnJvb20taGVhZF9fcm9vbS1udW1iZXI6aG92ZXIsLnJvb20taGVhZF9fcm9vbS1udW1iZXI6Zm9jdXN7dGV4dC1kZWNvcmF0aW9uOm5vbmU7b3V0bGluZTpub25lfS5yb29tLWhlYWRfX3Jvb20tbnVtYmVyOnZpc2l0ZWR7dGV4dC1kZWNvcmF0aW9uOm5vbmV9LnJvb20taGVhZF9fcm9vbS1udW1iZXI6aG92ZXIsLnJvb20taGVhZF9fcm9vbS1udW1iZXI6YWN0aXZley13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOnVuZGVybGluZSByZ2JhKDMxLDMyLDY1LDAuMjUwOTgpO3RleHQtZGVjb3JhdGlvbjp1bmRlcmxpbmUgcmdiYSgzMSwzMiw2NSwwLjI1MDk4KX0ucm9vbS1oZWFkX19yb29tLXByaWNle2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpiYXNlbGluZTstd2Via2l0LWFsaWduLWl0ZW1zOmJhc2VsaW5lOy1tcy1mbGV4LWFsaWduOmJhc2VsaW5lO2FsaWduLWl0ZW1zOmJhc2VsaW5lfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWltcHJlc3Npb25zLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vcm9vbS1pbXByZXNzaW9ucy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWltcHJlc3Npb25zLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yb29tLWltcHJlc3Npb25zX19oZWFke21hcmdpbi1ib3R0b206MS40Mjg2cmVtfS5yb29tLWltcHJlc3Npb25zX19ib2R5e3dpZHRoOjEwMCU7ZGlzcGxheTotd2Via2l0LWJveDtkaXNwbGF5Oi13ZWJraXQtZmxleDtkaXNwbGF5Oi1tcy1mbGV4Ym94O2Rpc3BsYXk6ZmxleDstd2Via2l0LWJveC1vcmllbnQ6aG9yaXpvbnRhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246cm93Oy1tcy1mbGV4LWRpcmVjdGlvbjpyb3c7ZmxleC1kaXJlY3Rpb246cm93Oy13ZWJraXQtZmxleC13cmFwOm5vd3JhcDstbXMtZmxleC13cmFwOm5vd3JhcDtmbGV4LXdyYXA6bm93cmFwOy13ZWJraXQtYm94LWFsaWduOmVuZDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtZW5kOy1tcy1mbGV4LWFsaWduOmVuZDthbGlnbi1pdGVtczpmbGV4LWVuZH0ucm9vbS1pbXByZXNzaW9uc19fZGlhZ3JhbS1jb3VudGVye3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7cG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3BhZGRpbmctdG9wOjIuNXJlbTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW59LnJvb20taW1wcmVzc2lvbnNfX2RpYWdyYW0taW1hZ2V7LXdlYmtpdC10cmFuc2Zvcm06cm90YXRlKC05MGRlZyk7LW1zLXRyYW5zZm9ybTpyb3RhdGUoLTkwZGVnKTt0cmFuc2Zvcm06cm90YXRlKC05MGRlZyl9LnJvb20taW1wcmVzc2lvbnNfX2RpYWdyYW17cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTttYXJnaW4tYm90dG9tOjAuMTQyOXJlbTt3aWR0aDoxMjBweDtoZWlnaHQ6MTIwcHg7ZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZX0ucm9vbS1pbXByZXNzaW9uc19faGVscC1pdGVte2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtb3JpZW50Omhvcml6b250YWw7LXdlYmtpdC1ib3gtZGlyZWN0aW9uOm5vcm1hbDstd2Via2l0LWZsZXgtZGlyZWN0aW9uOnJvdzstbXMtZmxleC1kaXJlY3Rpb246cm93O2ZsZXgtZGlyZWN0aW9uOnJvdzstd2Via2l0LWZsZXgtd3JhcDpub3dyYXA7LW1zLWZsZXgtd3JhcDpub3dyYXA7ZmxleC13cmFwOm5vd3JhcDstd2Via2l0LWJveC1hbGlnbjpzdGFydDstd2Via2l0LWFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7LW1zLWZsZXgtYWxpZ246c3RhcnQ7YWxpZ24taXRlbXM6ZmxleC1zdGFydH0ucm9vbS1pbXByZXNzaW9uc19faGVscC1saXN0e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7bGlzdC1zdHlsZTpub25lO21hcmdpbi1sZWZ0OjIuMTQyOXJlbX0ucm9vbS1pbXByZXNzaW9uc19faGVscC1tYXJrZXJ7d2lkdGg6MC43MTQzcmVtO21pbi13aWR0aDowLjcxNDNyZW07aGVpZ2h0OjAuNzE0M3JlbTtkaXNwbGF5OmJsb2NrO2JvcmRlci1yYWRpdXM6NTAlfS5yb29tLWltcHJlc3Npb25zX19oZWxwLW1hcmtlcl9jb2xvcl92ZXJ5LWdvb2R7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNGRkUzOUMpLCB0bygjRkZCQTlDKSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjRkZFMzlDIDAlLCAjRkZCQTlDIDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0ZGRTM5QyAwJSwgI0ZGQkE5QyAxMDAlKX0ucm9vbS1pbXByZXNzaW9uc19faGVscC1tYXJrZXJfY29sb3JfZ29vZHtiYWNrZ3JvdW5kOi13ZWJraXQtZ3JhZGllbnQobGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGZyb20oIzZGQ0Y5NyksIHRvKCM2NkQyRUEpKTtiYWNrZ3JvdW5kOi1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM2RkNGOTcgMCUsICM2NkQyRUEgMTAwJSk7YmFja2dyb3VuZDpsaW5lYXItZ3JhZGllbnQoMTgwZGVnLCAjNkZDRjk3IDAlLCAjNjZEMkVBIDEwMCUpfS5yb29tLWltcHJlc3Npb25zX19oZWxwLW1hcmtlcl9jb2xvcl9ub3JtYWx7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwgbGVmdCB0b3AsIGxlZnQgYm90dG9tLCBmcm9tKCNCQzlDRkYpLCB0bygjOEJBNEY5KSk7YmFja2dyb3VuZDotby1saW5lYXItZ3JhZGllbnQodG9wLCAjQkM5Q0ZGIDAlLCAjOEJBNEY5IDEwMCUpO2JhY2tncm91bmQ6bGluZWFyLWdyYWRpZW50KDE4MGRlZywgI0JDOUNGRiAwJSwgIzhCQTRGOSAxMDAlKX0ucm9vbS1pbXByZXNzaW9uc19faGVscC1tYXJrZXJfY29sb3JfYmFke2JhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIGxlZnQgdG9wLCBsZWZ0IGJvdHRvbSwgZnJvbSgjOTE5MTkxKSwgdG8oIzNENDk3NSkpO2JhY2tncm91bmQ6LW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzkxOTE5MSAwJSwgIzNENDk3NSAxMDAlKTtiYWNrZ3JvdW5kOmxpbmVhci1ncmFkaWVudCgxODBkZWcsICM5MTkxOTEgMCUsICMzRDQ5NzUgMTAwJSl9LnJvb20taW1wcmVzc2lvbnNfX21hcmtlci1jb250YWluZXJ7bWFyZ2luLXJpZ2h0OjAuMzU3MXJlbTt3aWR0aDowLjcxNDNyZW07bWluLXdpZHRoOjAuNzE0M3JlbTtoZWlnaHQ6MS43MTQzcmVtO2Rpc3BsYXk6LXdlYmtpdC1ib3g7ZGlzcGxheTotd2Via2l0LWZsZXg7ZGlzcGxheTotbXMtZmxleGJveDtkaXNwbGF5OmZsZXg7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3NlYXJjaC1maWx0ZXJzLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vc2VhcmNoLWZpbHRlcnMuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vc2VhcmNoLWZpbHRlcnMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNlYXJjaC1maWx0ZXJze3dpZHRoOjI2NnB4fS5zZWFyY2gtZmlsdGVyc19fY2hlY2tib3gtbGlzdHttYXJnaW4tYm90dG9tOjIuMDcxNHJlbX0uc2VhcmNoLWZpbHRlcnNfX2Ryb3Bkb3duLWZpbHRlci1kYXRle21hcmdpbi1ib3R0b206MS41NzE0cmVtfS5zZWFyY2gtZmlsdGVyc19fZHJvcGRvd24tZ3Vlc3R7bWFyZ2luLWJvdHRvbToyLjI4NTdyZW19LnNlYXJjaC1maWx0ZXJzX19kcm9wZG93bi1yb29tLWFtZW5pdGllc3ttYXJnaW4tYm90dG9tOjEuMTQyOXJlbX0uc2VhcmNoLWZpbHRlcnNfX3JhbmdlLXNsaWRlcnttYXJnaW4tYm90dG9tOjEuNzg1N3JlbX0uc2VhcmNoLWZpbHRlcnNfX3JpY2gtY2hlY2tib3gtYnV0dG9uc3ttYXJnaW4tYm90dG9tOjIuMjE0M3JlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdGV4dC1kZW1vLWl0ZW0uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWRlbW8taXRlbS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWRlbW8taXRlbS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dC1kZW1vLWl0ZW17cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO21heC13aWR0aDo0MDBweDtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4fS50ZXh0LWRlbW8taXRlbV9fdmFsdWV7bWFyZ2luLWxlZnQ6Mi4yMTQzcmVtfS50ZXh0LWRlbW8taXRlbV9fbmFtZXt3aWR0aDoxMDAlO21pbi13aWR0aDoyLjY0MjlyZW07bWF4LXdpZHRoOjIuNjQyOXJlbTt0ZXh0LWFsaWduOnJpZ2h0fVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWRlbW8uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWRlbW8uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdGV4dC1kZW1vLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi50ZXh0LWRlbW97d2lkdGg6YXV0b30udGV4dC1kZW1vX19pdGVtIDpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206My41NzE0cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWZpZWxkLnNjc3NcIik7XG5cbmlmKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuXG52YXIgdHJhbnNmb3JtO1xudmFyIGluc2VydEludG87XG5cblxuXG52YXIgb3B0aW9ucyA9IHtcImhtclwiOnRydWV9XG5cbm9wdGlvbnMudHJhbnNmb3JtID0gdHJhbnNmb3JtXG5vcHRpb25zLmluc2VydEludG8gPSB1bmRlZmluZWQ7XG5cbnZhciB1cGRhdGUgPSByZXF1aXJlKFwiIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdGV4dC1maWVsZC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90ZXh0LWZpZWxkLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi50ZXh0LWZpZWxke3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJX0udGV4dC1maWVsZF9faGVhZHttYXJnaW4tYm90dG9tOjAuMjg1N3JlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdGV4dC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3RleHQuc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdGV4dC5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dHtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO2ZvbnQtZmFtaWx5OlF1aWNrc2FuZDtmb250LXN0eWxlOm5vcm1hbDtmb250LXdlaWdodDpib2xkO2NvbG9yOiMxRjIwNDF9LnRleHRfdGhlbWVfaDF7Zm9udC1zaXplOjEuNzE0M3JlbTtsaW5lLWhlaWdodDoyLjE0MjlyZW19LnRleHRfdGhlbWVfaDJ7Zm9udC1zaXplOjEuMzU3MXJlbTtsaW5lLWhlaWdodDoxLjcxNDNyZW19LnRleHRfdGhlbWVfaDN7Zm9udC1mYW1pbHk6TW9udHNlcnJhdDtmb250LXNpemU6MC44NTcxcmVtO2xpbmUtaGVpZ2h0OjEuMDcxNHJlbTt0ZXh0LXRyYW5zZm9ybTp1cHBlcmNhc2V9LnRleHRfdGhlbWVfYm9keXtmb250LWZhbWlseTpNb250c2VycmF0O2ZvbnQtd2VpZ2h0Om5vcm1hbDtmb250LXNpemU6MXJlbTtsaW5lLWhlaWdodDoxLjcxNDNyZW07Y29sb3I6cmdiYSgzMSwzMiw2NSwwLjc0OTAyKX0udGV4dF93aGl0ZS1zcGFjZV9ub3dyYXB7d2hpdGUtc3BhY2U6bm93cmFwfS50ZXh0X3doaXRlLXNwYWNlX3ByZXt3aGl0ZS1zcGFjZTpwcmV9LnRleHRfdHJhbnNmb3JtX25vbmV7dGV4dC10cmFuc2Zvcm06bm9uZX0udGV4dF90cmFuc2Zvcm1fdXBwZXJjYXNle3RleHQtdHJhbnNmb3JtOnVwcGVyY2FzZX0udGV4dF9saW5lLWhlaWdodF9iaWd7bGluZS1oZWlnaHQ6Mi4xNDI5cmVtfS50ZXh0X2xpbmUtaGVpZ2h0X21pZGRsZXtsaW5lLWhlaWdodDoxLjQyODZyZW19LnRleHRfbGluZS1oZWlnaHRfc21hbGx7bGluZS1oZWlnaHQ6MS4yODU3cmVtfS50ZXh0X2xpbmUtaGVpZ2h0X3Zlcnktc21hbGx7bGluZS1oZWlnaHQ6MS4wNzE0cmVtfS50ZXh0X2hvcml6b250YWxfbWlkZGxle3dpZHRoOjEwMCU7dGV4dC1hbGlnbjpjZW50ZXJ9LnRleHRfaG9yaXpvbnRhbF9yaWdodHt0ZXh0LWFsaWduOnJpZ2h0fS50ZXh0X2ZvbnQtd2VpZ2h0X2JvbGR7Zm9udC13ZWlnaHQ6Ym9sZH0udGV4dF9mb250LXdlaWdodF9ub3JtYWx7Zm9udC13ZWlnaHQ6bm9ybWFsfS50ZXh0X2NvbG9yX2ltcG9ydGFudC10ZXh0e2NvbG9yOiMwMDAwMDB9LnRleHRfY29sb3JfdGV4dC10aXRsZXtjb2xvcjojMUYyMDQxfS50ZXh0X2NvbG9yX3RleHQtcHJpbWFyeXtjb2xvcjpyZ2JhKDMxLDMyLDY1LDAuNzQ5MDIpfS50ZXh0X2NvbG9yX3RleHQtc2Vjb25kYXJ5e2NvbG9yOnJnYmEoMzEsMzIsNjUsMC41MDE5NjEpfS50ZXh0X2NvbG9yX2xpZ2h0LXRpdGxle2NvbG9yOnJnYmEoMzEsMzIsNjUsMC4yNTA5OCl9LnRleHRfY29sb3JfcHJpbWFyeXtjb2xvcjojYmM5Y2ZmfS50ZXh0X2ZvbnQtbmFtZV9tb250c2VycmF0e2ZvbnQtZmFtaWx5Ok1vbnRzZXJyYXR9LnRleHRfc2l6ZV9zbWFsbHtmb250LXNpemU6MC44NTcxcmVtfS50ZXh0X25vLXNlbGVjdHstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lO3VzZXItc2VsZWN0Om5vbmV9LnRleHRfdmVydGljYWwtbWlkZGxle3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0udGV4dF92ZXJ0aWNhbC1taWRkbGU6OmJlZm9yZXtjb250ZW50OicnO2Rpc3BsYXk6aW5saW5lLWJsb2NrO2hlaWdodDoxMDAlO3ZlcnRpY2FsLWFsaWduOm1pZGRsZX0udGV4dF93b3JkLWJyZWFrX2JyZWFrLWFsbHt3b3JkLWJyZWFrOmJyZWFrLWFsbH1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdG9nZ2xlLWJ1dHRvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3RvZ2dsZS1idXR0b24uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vdG9nZ2xlLWJ1dHRvbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudG9nZ2xlLWJ1dHRvbntkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9LnRvZ2dsZS1idXR0b25fX3RleHR7bWFyZ2luLWxlZnQ6MC43MTQzcmVtfVxcblwiLCBcIlwiXSk7XG4iLCJcbnZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi90b2dnbGUtYnV0dG9ucy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3RvZ2dsZS1idXR0b25zLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3RvZ2dsZS1idXR0b25zLnNjc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiKShmYWxzZSk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi50b2dnbGUtYnV0dG9uc19faGVhZHttYXJnaW4tYm90dG9tOjAuOTI4NnJlbX0udG9nZ2xlLWJ1dHRvbnNfX2J1dHRvbjpub3QoOmxhc3QtY2hpbGQpe21hcmdpbi1ib3R0b206MC43MTQzcmVtfVxcblwiLCBcIlwiXSk7XG4iLCJ2YXIgbWFwID0ge1xuXHRcIi4vbGFuZGluZy1wYWdlL2xhbmRpbmctcGFnZS5zY3NzXCI6IDI0Myxcblx0XCIuL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uc2Nzc1wiOiAyNDYsXG5cdFwiLi9yb29tLWRldGFpbHMvcm9vbS1kZXRhaWxzLnNjc3NcIjogMjQ4LFxuXHRcIi4vc2VhcmNoLXJvb20vc2VhcmNoLXJvb20uc2Nzc1wiOiAyNTAsXG5cdFwiLi9zaWduLWluL3NpZ24taW4uc2Nzc1wiOiAyNTIsXG5cdFwiLi91aS1raXQvdWkta2l0LnNjc3NcIjogMjU0XG59O1xuXG5cbmZ1bmN0aW9uIHdlYnBhY2tDb250ZXh0KHJlcSkge1xuXHR2YXIgaWQgPSB3ZWJwYWNrQ29udGV4dFJlc29sdmUocmVxKTtcblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oaWQpO1xufVxuZnVuY3Rpb24gd2VicGFja0NvbnRleHRSZXNvbHZlKHJlcSkge1xuXHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKG1hcCwgcmVxKSkge1xuXHRcdHZhciBlID0gbmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIiArIHJlcSArIFwiJ1wiKTtcblx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0dGhyb3cgZTtcblx0fVxuXHRyZXR1cm4gbWFwW3JlcV07XG59XG53ZWJwYWNrQ29udGV4dC5rZXlzID0gZnVuY3Rpb24gd2VicGFja0NvbnRleHRLZXlzKCkge1xuXHRyZXR1cm4gT2JqZWN0LmtleXMobWFwKTtcbn07XG53ZWJwYWNrQ29udGV4dC5yZXNvbHZlID0gd2VicGFja0NvbnRleHRSZXNvbHZlO1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQ29udGV4dDtcbndlYnBhY2tDb250ZXh0LmlkID0gMjQyOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2xhbmRpbmctcGFnZS5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL2xhbmRpbmctcGFnZS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9sYW5kaW5nLXBhZ2Uuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9jaHVua3MvaW1hZ2VzL2Jhbm5lcnMvbGFuZGluZy1wYWdlLmpwZ1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5sYW5kaW5nLXBhZ2VfX2Jhbm5lcnt3aWR0aDoxMDAlO21heC13aWR0aDoxOTIwcHg7bWFyZ2luOjAgYXV0bztoZWlnaHQ6ODMwcHg7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kLWltYWdlOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fICsgXCIpO2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAxMDAlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6Y292ZXJ9LmxhbmRpbmctcGFnZV9fYmFubmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3BhZGRpbmctdG9wOjVyZW19LmxhbmRpbmctcGFnZV9fZGVzY3JpcHRpb257d2lkdGg6MTAwJTttYXgtd2lkdGg6MjkwcHg7cG9zaXRpb246YWJzb2x1dGU7cmlnaHQ6LTAuNDI4NnJlbTtib3R0b206MS41cmVtfVxcblwiLCBcIlwiXSk7XG4iLCJleHBvcnQgZGVmYXVsdCBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1hZ2VzL2Jhbm5lcnMvbGFuZGluZy1wYWdlLmpwZ1wiOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3JlZ2lzdHJhdGlvbi5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yZWdpc3RyYXRpb24uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIEltcG9ydHNcbnZhciBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIik7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMF9fXyA9IHJlcXVpcmUoXCIuLi8uLi9jaHVua3MvaW1hZ2VzL2Jhbm5lcnMvbG9naW4tcmVnaXN0cmF0aW9uLnBuZ1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfUFVSRV9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5yZWdpc3RyYXRpb25fX2Jhbm5lcnt3aWR0aDoxMDAlO21heC13aWR0aDoxOTIwcHg7bWFyZ2luOjAgYXV0bztoZWlnaHQ6NzAycHg7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kLWltYWdlOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fICsgXCIpO2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAxMDAlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6Y292ZXJ9LnJlZ2lzdHJhdGlvbl9fYmFubmVyLWNvbnRlbnR7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO3BhZGRpbmctdG9wOjIuMTQyOXJlbTtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXJ9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tZGV0YWlscy5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3Jvb20tZGV0YWlscy5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9yb29tLWRldGFpbHMuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnJvb20tZGV0YWlsc3tib3JkZXItYm90dG9tOjAuMDcxNHJlbSBzb2xpZCAjZTVlNWU1fS5yb29tLWRldGFpbHNfX2Jhbm5lcntwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO21hcmdpbjowIGF1dG87d2lkdGg6MTAwJTttYXgtd2lkdGg6MTQ0MHB4O21pbi13aWR0aDozMjBweH0ucm9vbS1kZXRhaWxzX19jYW5jZWwtcmVzZXJ2YXRpb24taGVhZHttYXJnaW4tYm90dG9tOjEuMjE0M3JlbX0ucm9vbS1kZXRhaWxzX19jYW5jZWwtcmVzZXJ2YXRpb257bWF4LXdpZHRoOjM0MHB4fS5yb29tLWRldGFpbHNfX2NvbW1lbnRze21hcmdpbi1ib3R0b206Mi40Mjg2cmVtfS5yb29tLWRldGFpbHNfX2NvbnRhaW5lci1jb250ZW50e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7cGFkZGluZzo0Ljg1NzFyZW0gMHJlbSA1LjE0MjlyZW0gMHJlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9QG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCl7LnJvb20tZGV0YWlsc19fY29udGFpbmVyLWNvbnRlbnR7LXdlYmtpdC1ib3gtb3JpZW50OnZlcnRpY2FsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpjb2x1bW47LW1zLWZsZXgtZGlyZWN0aW9uOmNvbHVtbjtmbGV4LWRpcmVjdGlvbjpjb2x1bW47LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9fS5yb29tLWRldGFpbHNfX2luZm8taXRlbXtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXB9LnJvb20tZGV0YWlsc19faW5mby1pdGVtOm5vdCg6bGFzdC1jaGlsZCl7bWFyZ2luLWJvdHRvbToxLjE0MjlyZW19QG1lZGlhIChtYXgtd2lkdGg6IDEyMDBweCl7LnJvb20tZGV0YWlsc19faW5mby1pdGVtey13ZWJraXQtYm94LW9yaWVudDp2ZXJ0aWNhbDstd2Via2l0LWJveC1kaXJlY3Rpb246bm9ybWFsOy13ZWJraXQtZmxleC1kaXJlY3Rpb246Y29sdW1uOy1tcy1mbGV4LWRpcmVjdGlvbjpjb2x1bW47ZmxleC1kaXJlY3Rpb246Y29sdW1ufX0ucm9vbS1kZXRhaWxzX19tYWluLWluZm97cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTtwYWRkaW5nLXRvcDowLjE0MjlyZW07d2lkdGg6MTAwJTttYXJnaW4tcmlnaHQ6NXJlbX1AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KXsucm9vbS1kZXRhaWxzX19tYWluLWluZm97bWFyZ2luOjByZW0gMHJlbSAyLjg1NzFyZW0gMHJlbX19LnJvb20tZGV0YWlsc19fcm9vbS1hZHZhbnRhZ2Vze21hcmdpbi1yaWdodDoxMDdweH1AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KXsucm9vbS1kZXRhaWxzX19yb29tLWFkdmFudGFnZXN7bWFyZ2luOjByZW0gMHJlbSAyLjE0MjlyZW0gMHJlbX19LnJvb20tZGV0YWlsc19fcnVsZXN7bWFyZ2luLXJpZ2h0OjYuNTcxNHJlbX1AbWVkaWEgKG1heC13aWR0aDogMTIwMHB4KXsucm9vbS1kZXRhaWxzX19ydWxlc3ttYXJnaW46MHJlbSAwcmVtIDIuMTQyOXJlbSAwcmVtfX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vc2VhcmNoLXJvb20uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9zZWFyY2gtcm9vbS5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi9zZWFyY2gtcm9vbS5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gTW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuc2VhcmNoLXJvb21fX2NvbnRhaW5lci1jb250ZW50e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7cGFkZGluZzoyLjIxNDNyZW0gMHJlbSA1LjIxNDNyZW0gMHJlbTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1mbGV4LXdyYXA6bm93cmFwOy1tcy1mbGV4LXdyYXA6bm93cmFwO2ZsZXgtd3JhcDpub3dyYXA7LXdlYmtpdC1ib3gtcGFjazpqdXN0aWZ5Oy13ZWJraXQtanVzdGlmeS1jb250ZW50OnNwYWNlLWJldHdlZW47LW1zLWZsZXgtcGFjazpqdXN0aWZ5O2p1c3RpZnktY29udGVudDpzcGFjZS1iZXR3ZWVufS5zZWFyY2gtcm9vbV9faG90ZWwtcm9vbXN7cGFkZGluZzowO21hcmdpbjowOy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDt0ZXh0LWRlY29yYXRpb246bm9uZTt3aWR0aDoxMDAlfS5zZWFyY2gtcm9vbV9fc2VhcmNoLWZpbHRlcnN7bWFyZ2luLXJpZ2h0OjQuMzU3MXJlbX1cXG5cIiwgXCJcIl0pO1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vc2lnbi1pbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3NpZ24taW4uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3JlZi0tNS0yIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1yZXNvdXJjZXMtbG9hZGVyL2xpYi9sb2FkZXIuanM/P3JlZi0tNS00IS4vc2lnbi1pbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIikoZmFsc2UpO1xuLy8gSW1wb3J0c1xudmFyIF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gPSByZXF1aXJlKFwiLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8wX19fID0gcmVxdWlyZShcIi4uLy4uL2NodW5rcy9pbWFnZXMvYmFubmVycy9sb2dpbi1yZWdpc3RyYXRpb24ucG5nXCIpO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9QVVJFX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNpZ24taW5fX2Jhbm5lcnt3aWR0aDoxMDAlO21heC13aWR0aDoxOTIwcHg7bWFyZ2luOjAgYXV0bztoZWlnaHQ6Njg0cHg7ZGlzcGxheTpibG9jaztiYWNrZ3JvdW5kLWltYWdlOnVybChcIiArIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fICsgXCIpO2JhY2tncm91bmQtcG9zaXRpb246MTAwJSAxMDAlO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXNpemU6Y292ZXJ9LnNpZ24taW5fX2Jhbm5lci1jb250ZW50e3BhZGRpbmc6MDttYXJnaW46MDstd2Via2l0LWJveC1zaXppbmc6Ym9yZGVyLWJveDtib3gtc2l6aW5nOmJvcmRlci1ib3g7dGV4dC1kZWNvcmF0aW9uOm5vbmU7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTtkaXNwbGF5Oi13ZWJraXQtYm94O2Rpc3BsYXk6LXdlYmtpdC1mbGV4O2Rpc3BsYXk6LW1zLWZsZXhib3g7ZGlzcGxheTpmbGV4Oy13ZWJraXQtYm94LW9yaWVudDpob3Jpem9udGFsOy13ZWJraXQtYm94LWRpcmVjdGlvbjpub3JtYWw7LXdlYmtpdC1mbGV4LWRpcmVjdGlvbjpyb3c7LW1zLWZsZXgtZGlyZWN0aW9uOnJvdztmbGV4LWRpcmVjdGlvbjpyb3c7LXdlYmtpdC1ib3gtcGFjazpjZW50ZXI7LXdlYmtpdC1qdXN0aWZ5LWNvbnRlbnQ6Y2VudGVyOy1tcy1mbGV4LXBhY2s6Y2VudGVyO2p1c3RpZnktY29udGVudDpjZW50ZXI7LXdlYmtpdC1ib3gtYWxpZ246Y2VudGVyOy13ZWJraXQtYWxpZ24taXRlbXM6Y2VudGVyOy1tcy1mbGV4LWFsaWduOmNlbnRlcjthbGlnbi1pdGVtczpjZW50ZXJ9XFxuXCIsIFwiXCJdKTtcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3VpLWtpdC5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9yZWYtLTUtMiEuLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtcmVzb3VyY2VzLWxvYWRlci9saWIvbG9hZGVyLmpzPz9yZWYtLTUtNCEuL3VpLWtpdC5zY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cmVmLS01LTIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLXJlc291cmNlcy1sb2FkZXIvbGliL2xvYWRlci5qcz8/cmVmLS01LTQhLi91aS1raXQuc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnVpLWtpdHtwYWRkaW5nLWJvdHRvbTozLjU3MTRyZW19LnVpLWtpdF9faGVhZHtwYWRkaW5nOjA7bWFyZ2luOjA7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Ym94LXNpemluZzpib3JkZXItYm94O3RleHQtZGVjb3JhdGlvbjpub25lO3BhZGRpbmc6Mi4xNDI5cmVtIDByZW0gMHJlbSAyLjE0MjlyZW07d2lkdGg6MTAwJTttYXgtd2lkdGg6MTQ0MHB4O21hcmdpbjowIGF1dG99XFxuXCIsIFwiXCJdKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=