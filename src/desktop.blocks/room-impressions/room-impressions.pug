include /block-head/block-head.pug

mixin room-impressions({ items, title = "Впечатления от номера" })
    .room-impressions
        .room-impressions__head
            +block-head({
                title,
                titleTheme: "h2",
            })   
        .room-impressions__body
            -
                const isPropertyExists = function isPropertyExists(obj, key) {
                    return Object.hasOwnProperty.apply(obj, [key]);
                };

                const isCorrectPropertyItem = function isCorrectPropertyItem(key) {
                    const isNumber = typeof items[key] === "number";
                    const isPositive = items[key] >= 0;
                    
                    return isPropertyExists(items, key) && isNumber && isPositive;
                };

                const KEYS = ["bad", "fine", "good", "veryGood"];
                let sum = 0;

                KEYS.forEach((key) => {
                    if (isCorrectPropertyItem(key)) {
                        sum += items[key];
                    } else {
                        items[key] = 0;
                    }
                });

                const paths = {};

                if (sum){
                    let lastPos = {
                        x: 60 + (58 * Math.cos((Math.PI / 180))),
                        y: 60 + (58 * Math.sin((Math.PI / 180))),
                    };

                    let sumDegrees = 1;

                    KEYS.forEach((key) => {
                        let degrees = Math.floor((items[key] / sum) * 360);

                        if (degrees > 3) {
                            sumDegrees += degrees;
                        
                            const rad = ((Math.PI * (sumDegrees - 2)) / 180);
                            let x = 60 + (58 * Math.cos(rad));
                            let y = 60 + (58 * Math.sin(rad));

                            magicNumber = degrees > 180 ? 1 : 0;
                            let path = `M${lastPos.x} ${lastPos.y} A 58 58 0 ${magicNumber} 1 ${x} ${y}`;
                            paths[key] = path;

                            const nRad = ((Math.PI * (sumDegrees)) / 180);
                            lastPos.x = 60 + (58 * Math.cos(nRad));
                            lastPos.y = 60 + (58 * Math.sin(nRad));
                        }
                    });
                }

                itemsStr = JSON.stringify(items);
            
            .room-impressions__diagram
                svg.room-impressions__diagram-image(width="100%", height="100%", fill="none", xmlns="http://www.w3.org/2000/svg", data-items=itemsStr)
                    -
                        KEYS.forEach((key) => {
                            if (isPropertyExists(paths, key)) {
                                const stroke = `url(#linear-gradient-${key})`;
                    path(d=paths[key], stroke-width="4", fill="none", stroke=stroke)
                    -
                            }
                        });

                    <linearGradient id="linear-gradient-bad">
                        <stop stop-color="#919191"/>
                        <stop offset="1" stop-color="#3D4975"/>
                    </linearGradient>
                    <linearGradient id="linear-gradient-fine">
                        <stop stop-color="#BC9CFF"/>
                        <stop offset="1" stop-color="#8BA4F9"/>
                    </linearGradient>
                    <linearGradient id="linear-gradient-good">
                        <stop stop-color="#6FCF97"/>
                        <stop offset="1" stop-color="#66D2EA"/>
                    </linearGradient>
                    <linearGradient id="linear-gradient-veryGood">
                        <stop stop-color="#FFBA9C"/>
                        <stop offset="1" stop-color="#FFE39C"/>
                    </linearGradient>

                .room-impressions__diagram-counter
                    p.room-impressions__value #{items["fine"]}
                    p.room-impressions__label голосов
            ul.room-impressions__help-list
                -
                    const helpItems = [
                        {text: "Великолепно", theme: "very-good"},
                        {text: "Хорошо", theme: "good"},
                        {text: "Удовлетворительно", theme: "normal"},
                        {text: "Разочарован", theme: "bad"},
                    ];
                
                for helpItem in helpItems
                    -const {text, theme} = helpItem;
                    li.room-impressions__help-item
                        .room-impressions__marker-container
                            .room-impressions__help-marker(class=`room-impressions__help-marker_theme_${theme}`)
                        p.room-impressions__help-item-text #{text}
