mixin button(options = {})
    -
        const {
            text = "click me",
            theme = "default",
            type = "button",
            size,
            horizontalSize,
            textColor, 
            dataAction = false,
            disabled = false,
            hidden = false,
            icon,
            background,
            fontWeight,
            hoverTheme,
            href,
        } = options;

        const classes = [`button js-button`];
        if ([
            "default", "default-long", "icon", "light", "round-icon", "round-little", "round", "text",
        ].includes(theme)) classes.push(`button_theme_${theme}`);
        if ([
            "text-secondary", "gradient-primary",
        ].includes(textColor)) classes.push(`button_text-color_${textColor}`);
        if ([
            "gradient-primary", "gradient-success", "none",
        ].includes(background)) classes.push(`button_background_${background}`);
        if (["sm"].includes(size)) classes.push(`button_size_${size}`);
        if (["big"].includes(horizontalSize)) classes.push(`button_horizontal-size_${horizontalSize}`);
        if (["bold"].includes(fontWeight)) classes.push(`button_font-weight_${fontWeight}`);
        if ([
            "gradient-primary", "gradient-success",
        ].includes(hoverTheme)) classes.push(`button_hover-theme_${hoverTheme}`);
        if (disabled) classes.push("button_disabled");
        if (hidden) classes.push("button_hidden");

    if href
        a(class=classes, href=href, data-action=dataAction) #{text}
            if icon
                .button__icon #{icon}
    else
        button(class=classes, type=type, data-action=dataAction) #{text}       
